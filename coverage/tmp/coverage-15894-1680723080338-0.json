{"result":[{"scriptId":"6","url":"internal/per_context/primordials.js","functions":[{"functionName":"SafeIterator","ranges":[{"startOffset":7645,"endOffset":7716,"count":135}],"isBlockCoverage":true},{"functionName":"next","ranges":[{"startOffset":7721,"endOffset":7770,"count":691}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7775,"endOffset":7820,"count":134}],"isBlockCoverage":true},{"functionName":"copyProps","ranges":[{"startOffset":8278,"endOffset":8527,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8340,"endOffset":8523,"count":13},{"startOffset":8404,"endOffset":8519,"count":5}],"isBlockCoverage":true},{"functionName":"makeSafe","ranges":[{"startOffset":8547,"endOffset":9679,"count":2},{"startOffset":8609,"endOffset":9474,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8758,"endOffset":9468,"count":0}],"isBlockCoverage":false},{"functionName":"desc.value","ranges":[{"startOffset":9318,"endOffset":9385,"count":1}],"isBlockCoverage":true},{"functionName":"SafeMap","ranges":[{"startOffset":10019,"endOffset":10047,"count":14}],"isBlockCoverage":true},{"functionName":"SafeWeakMap","ranges":[{"startOffset":10190,"endOffset":10218,"count":7}],"isBlockCoverage":true},{"functionName":"SafeSet","ranges":[{"startOffset":10345,"endOffset":10373,"count":10}],"isBlockCoverage":true}]},{"scriptId":"9","url":"internal/bootstrap/loaders.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10433,"count":1}],"isBlockCoverage":true},{"functionName":"binding","ranges":[{"startOffset":3676,"endOffset":4073,"count":0}],"isBlockCoverage":false},{"functionName":"_linkedBinding","ranges":[{"startOffset":4103,"endOffset":4311,"count":0}],"isBlockCoverage":false},{"functionName":"internalBinding","ranges":[{"startOffset":4491,"endOffset":4753,"count":118},{"startOffset":4593,"endOffset":4733,"count":30}],"isBlockCoverage":true},{"functionName":"getOwn","ranges":[{"startOffset":4898,"endOffset":5052,"count":114},{"startOffset":5034,"endOffset":5049,"count":0}],"isBlockCoverage":true},{"functionName":"<static_fields_initializer>","ranges":[{"startOffset":5419,"endOffset":5517,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5478,"endOffset":5512,"count":234}],"isBlockCoverage":true},{"functionName":"NativeModule","ranges":[{"startOffset":5522,"endOffset":6274,"count":234}],"isBlockCoverage":true},{"functionName":"exposeInternals","ranges":[{"startOffset":6424,"endOffset":6658,"count":0}],"isBlockCoverage":false},{"functionName":"exists","ranges":[{"startOffset":6669,"endOffset":6722,"count":5}],"isBlockCoverage":true},{"functionName":"canBeRequiredByUsers","ranges":[{"startOffset":6733,"endOffset":6849,"count":103},{"startOffset":6817,"endOffset":6844,"count":0}],"isBlockCoverage":true},{"functionName":"compileForPublicLoader","ranges":[{"startOffset":6921,"endOffset":7615,"count":2},{"startOffset":6984,"endOffset":7176,"count":0},{"startOffset":7499,"endOffset":7503,"count":0}],"isBlockCoverage":true},{"functionName":"getESMFacade","ranges":[{"startOffset":7619,"endOffset":8260,"count":4},{"startOffset":7657,"endOffset":8259,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7987,"endOffset":8100,"count":2}],"isBlockCoverage":true},{"functionName":"syncExports","ranges":[{"startOffset":8556,"endOffset":8900,"count":4},{"startOffset":8675,"endOffset":8890,"count":114},{"startOffset":8752,"endOffset":8761,"count":0}],"isBlockCoverage":true},{"functionName":"compileForInternalLoader","ranges":[{"startOffset":8904,"endOffset":9489,"count":436},{"startOffset":8953,"endOffset":8968,"count":99},{"startOffset":8970,"endOffset":9004,"count":342},{"startOffset":9004,"endOffset":9143,"count":94},{"startOffset":9143,"endOffset":9178,"count":0},{"startOffset":9179,"endOffset":9200,"count":94},{"startOffset":9354,"endOffset":9488,"count":94}],"isBlockCoverage":true},{"functionName":"nativeModuleRequire","ranges":[{"startOffset":9687,"endOffset":10058,"count":439},{"startOffset":9745,"endOffset":9776,"count":5},{"startOffset":9776,"endOffset":9960,"count":434},{"startOffset":9960,"endOffset":10015,"count":0},{"startOffset":10015,"endOffset":10057,"count":434}],"isBlockCoverage":true},{"functionName":"requireWithFallbackInDeps","ranges":[{"startOffset":10174,"endOffset":10346,"count":0}],"isBlockCoverage":false}]},{"scriptId":"10","url":"internal/bootstrap/node.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12712,"count":1}],"isBlockCoverage":true},{"functionName":"process.openStdin","ranges":[{"startOffset":3413,"endOffset":3483,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6244,"endOffset":6406,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":6508,"endOffset":6680,"count":0}],"isBlockCoverage":false},{"functionName":"setupPrepareStackTrace","ranges":[{"startOffset":9467,"endOffset":10053,"count":1}],"isBlockCoverage":true},{"functionName":"setupProcessObject","ranges":[{"startOffset":10055,"endOffset":10664,"count":1}],"isBlockCoverage":true},{"functionName":"setupGlobalProxy","ranges":[{"startOffset":10666,"endOffset":10847,"count":1}],"isBlockCoverage":true},{"functionName":"setupBuffer","ranges":[{"startOffset":10849,"endOffset":11289,"count":1}],"isBlockCoverage":true},{"functionName":"createGlobalConsole","ranges":[{"startOffset":11291,"endOffset":11972,"count":1}],"isBlockCoverage":true},{"functionName":"exposeNamespace","ranges":[{"startOffset":12024,"endOffset":12222,"count":1}],"isBlockCoverage":true},{"functionName":"exposeInterface","ranges":[{"startOffset":12274,"endOffset":12472,"count":4}],"isBlockCoverage":true},{"functionName":"defineOperation","ranges":[{"startOffset":12532,"endOffset":12711,"count":7}],"isBlockCoverage":true}]},{"scriptId":"11","url":"internal/errors.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":56050,"count":1}],"isBlockCoverage":false},{"functionName":"prepareStackTrace","ranges":[{"startOffset":1939,"endOffset":3297,"count":138},{"startOffset":2116,"endOffset":2232,"count":0},{"startOffset":2363,"endOffset":2859,"count":137},{"startOffset":2413,"endOffset":2605,"count":1265},{"startOffset":2474,"endOffset":2526,"count":1129},{"startOffset":2528,"endOffset":2599,"count":137},{"startOffset":2806,"endOffset":2855,"count":0},{"startOffset":2986,"endOffset":3008,"count":0},{"startOffset":3189,"endOffset":3218,"count":0}],"isBlockCoverage":true},{"functionName":"maybeOverridePrepareStackTrace","ranges":[{"startOffset":3339,"endOffset":4046,"count":138},{"startOffset":3608,"endOffset":3674,"count":0},{"startOffset":3955,"endOffset":4021,"count":0}],"isBlockCoverage":true},{"functionName":"lazyInternalUtil","ranges":[{"startOffset":4114,"endOffset":4240,"count":0}],"isBlockCoverage":false},{"functionName":"lazyInternalUtilInspect","ranges":[{"startOffset":4274,"endOffset":4436,"count":1}],"isBlockCoverage":true},{"functionName":"lazyBuffer","ranges":[{"startOffset":4450,"endOffset":4559,"count":0}],"isBlockCoverage":false},{"functionName":"addCodeToName","ranges":[{"startOffset":4599,"endOffset":5205,"count":137},{"startOffset":5027,"endOffset":5171,"count":0}],"isBlockCoverage":true},{"functionName":"SystemError","ranges":[{"startOffset":5709,"endOffset":8162,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":8166,"endOffset":8241,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8245,"endOffset":8434,"count":0}],"isBlockCoverage":false},{"functionName":"makeSystemErrorWithCode","ranges":[{"startOffset":8438,"endOffset":8583,"count":4}],"isBlockCoverage":true},{"functionName":"NodeError","ranges":[{"startOffset":8529,"endOffset":8576,"count":0}],"isBlockCoverage":false},{"functionName":"makeNodeErrorWithCode","ranges":[{"startOffset":8585,"endOffset":9247,"count":238}],"isBlockCoverage":true},{"functionName":"NodeError","ranges":[{"startOffset":8673,"endOffset":9161,"count":137}],"isBlockCoverage":true},{"functionName":"toString","ranges":[{"startOffset":9167,"endOffset":9240,"count":0}],"isBlockCoverage":false},{"functionName":"hideStackFrames","ranges":[{"startOffset":9319,"endOffset":9567,"count":38}],"isBlockCoverage":true},{"functionName":"E","ranges":[{"startOffset":9679,"endOffset":10187,"count":239},{"startOffset":9921,"endOffset":9966,"count":4},{"startOffset":9966,"endOffset":10020,"count":235},{"startOffset":10055,"endOffset":10165,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10082,"endOffset":10159,"count":3}],"isBlockCoverage":true},{"functionName":"getMessage","ranges":[{"startOffset":10189,"endOffset":11044,"count":137},{"startOffset":10290,"endOffset":10326,"count":1},{"startOffset":10625,"endOffset":10703,"count":0},{"startOffset":10925,"endOffset":11043,"count":0}],"isBlockCoverage":true},{"functionName":"lazyUv","ranges":[{"startOffset":11062,"endOffset":11166,"count":51},{"startOffset":11100,"endOffset":11144,"count":1}],"isBlockCoverage":true},{"functionName":"uvErrmapGet","ranges":[{"startOffset":11223,"endOffset":11406,"count":51},{"startOffset":11301,"endOffset":11354,"count":1}],"isBlockCoverage":true},{"functionName":"captureLargerStackTrace","ranges":[{"startOffset":11459,"endOffset":11711,"count":137}],"isBlockCoverage":true},{"functionName":"uvException","ranges":[{"startOffset":12041,"endOffset":13206,"count":0}],"isBlockCoverage":false},{"functionName":"uvExceptionWithHostPort","ranges":[{"startOffset":13572,"endOffset":14485,"count":0}],"isBlockCoverage":false},{"functionName":"errnoException","ranges":[{"startOffset":14708,"endOffset":15518,"count":0}],"isBlockCoverage":false},{"functionName":"exceptionWithHostPort","ranges":[{"startOffset":15922,"endOffset":17156,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":17359,"endOffset":18824,"count":0}],"isBlockCoverage":false},{"functionName":"connResetException","ranges":[{"startOffset":18828,"endOffset":18983,"count":0}],"isBlockCoverage":false},{"functionName":"isStackOverflowError","ranges":[{"startOffset":19273,"endOffset":19651,"count":0}],"isBlockCoverage":false},{"functionName":"addNumericalSeparator","ranges":[{"startOffset":19732,"endOffset":20000,"count":0}],"isBlockCoverage":false},{"functionName":"beforeInspector","ranges":[{"startOffset":20279,"endOffset":20670,"count":1},{"startOffset":20404,"endOffset":20669,"count":0}],"isBlockCoverage":true},{"functionName":"afterInspector","ranges":[{"startOffset":20674,"endOffset":22076,"count":1},{"startOffset":21273,"endOffset":21538,"count":0},{"startOffset":21835,"endOffset":21870,"count":0},{"startOffset":22031,"endOffset":22072,"count":0}],"isBlockCoverage":true},{"functionName":"AbortError","ranges":[{"startOffset":22312,"endOffset":22430,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":24209,"endOffset":24373,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":27296,"endOffset":27411,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":27700,"endOffset":27794,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":30075,"endOffset":30303,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":32083,"endOffset":32301,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":34051,"endOffset":34351,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":34393,"endOffset":34537,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":34580,"endOffset":38076,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":38117,"endOffset":38389,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":38781,"endOffset":38944,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":39606,"endOffset":39741,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":39782,"endOffset":40106,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":40265,"endOffset":40413,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":40457,"endOffset":41231,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":41609,"endOffset":41773,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":41826,"endOffset":42157,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":42201,"endOffset":42508,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":42878,"endOffset":42953,"count":137}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":42997,"endOffset":43285,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":43613,"endOffset":44085,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":44871,"endOffset":45583,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":45677,"endOffset":45778,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":46538,"endOffset":47236,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":47287,"endOffset":47479,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":47528,"endOffset":47844,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":47877,"endOffset":48754,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":49206,"endOffset":49465,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":50907,"endOffset":51076,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":52974,"endOffset":53105,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":53698,"endOffset":53981,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":54961,"endOffset":55074,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":55268,"endOffset":55655,"count":0}],"isBlockCoverage":false}]},{"scriptId":"12","url":"internal/util.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":14228,"count":1}],"isBlockCoverage":false},{"functionName":"toUSVString","ranges":[{"startOffset":1177,"endOffset":1489,"count":103},{"startOffset":1446,"endOffset":1488,"count":0}],"isBlockCoverage":true},{"functionName":"lazyUv","ranges":[{"startOffset":1507,"endOffset":1598,"count":0}],"isBlockCoverage":false},{"functionName":"removeColors","ranges":[{"startOffset":1600,"endOffset":1669,"count":0}],"isBlockCoverage":false},{"functionName":"isError","ranges":[{"startOffset":1671,"endOffset":1921,"count":2},{"startOffset":1897,"endOffset":1918,"count":0}],"isBlockCoverage":true},{"functionName":"deprecate","ranges":[{"startOffset":2227,"endOffset":3413,"count":13},{"startOffset":2301,"endOffset":2321,"count":0},{"startOffset":2410,"endOffset":2464,"count":1},{"startOffset":3167,"endOffset":3389,"count":12}],"isBlockCoverage":true},{"functionName":"deprecated","ranges":[{"startOffset":2551,"endOffset":3025,"count":0}],"isBlockCoverage":false},{"functionName":"decorateErrorStack","ranges":[{"startOffset":3415,"endOffset":3754,"count":1},{"startOffset":3558,"endOffset":3565,"count":0}],"isBlockCoverage":true},{"functionName":"assertCrypto","ranges":[{"startOffset":3756,"endOffset":3830,"count":1},{"startOffset":3802,"endOffset":3828,"count":0}],"isBlockCoverage":true},{"functionName":"normalizeEncoding","ranges":[{"startOffset":4009,"endOffset":4140,"count":1},{"startOffset":4079,"endOffset":4097,"count":0},{"startOffset":4113,"endOffset":4139,"count":0}],"isBlockCoverage":true},{"functionName":"slowCases","ranges":[{"startOffset":4142,"endOffset":5881,"count":0}],"isBlockCoverage":false},{"functionName":"emitExperimentalWarning","ranges":[{"startOffset":5883,"endOffset":6171,"count":0}],"isBlockCoverage":false},{"functionName":"filterDuplicateStrings","ranges":[{"startOffset":6173,"endOffset":6481,"count":0}],"isBlockCoverage":false},{"functionName":"cachedResult","ranges":[{"startOffset":6483,"endOffset":6626,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6534,"endOffset":6623,"count":0}],"isBlockCoverage":false},{"functionName":"createClassWrapper","ranges":[{"startOffset":6891,"endOffset":7256,"count":0}],"isBlockCoverage":false},{"functionName":"getSignalsToNamesMapping","ranges":[{"startOffset":7285,"endOffset":7563,"count":0}],"isBlockCoverage":false},{"functionName":"convertToValidSignal","ranges":[{"startOffset":7565,"endOffset":7872,"count":0}],"isBlockCoverage":false},{"functionName":"getConstructorOf","ranges":[{"startOffset":7874,"endOffset":8220,"count":0}],"isBlockCoverage":false},{"functionName":"getSystemErrorName","ranges":[{"startOffset":8222,"endOffset":8351,"count":0}],"isBlockCoverage":false},{"functionName":"getSystemErrorMap","ranges":[{"startOffset":8353,"endOffset":8418,"count":0}],"isBlockCoverage":false},{"functionName":"promisify","ranges":[{"startOffset":8586,"endOffset":10070,"count":3},{"startOffset":8706,"endOffset":8762,"count":1},{"startOffset":8849,"endOffset":9102,"count":0}],"isBlockCoverage":true},{"functionName":"fn","ranges":[{"startOffset":9302,"endOffset":9783,"count":0}],"isBlockCoverage":false},{"functionName":"join","ranges":[{"startOffset":10165,"endOffset":10487,"count":0}],"isBlockCoverage":false},{"functionName":"spliceOne","ranges":[{"startOffset":10628,"endOffset":10755,"count":0}],"isBlockCoverage":false},{"functionName":"isInsideNodeModules","ranges":[{"startOffset":10837,"endOffset":12009,"count":0}],"isBlockCoverage":false},{"functionName":"once","ranges":[{"startOffset":12011,"endOffset":12169,"count":0}],"isBlockCoverage":false},{"functionName":"sleep","ranges":[{"startOffset":12192,"endOffset":12407,"count":0}],"isBlockCoverage":false},{"functionName":"createDeferredPromise","ranges":[{"startOffset":12409,"endOffset":12603,"count":0}],"isBlockCoverage":false},{"functionName":"filterOwnProperties","ranges":[{"startOffset":12605,"endOffset":12876,"count":1},{"startOffset":12729,"endOffset":12854,"count":5},{"startOffset":12808,"endOffset":12850,"count":3}],"isBlockCoverage":true},{"functionName":"setOwnProperty","ranges":[{"startOffset":13044,"endOffset":13234,"count":0}],"isBlockCoverage":false}]},{"scriptId":"13","url":"events.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":29634,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2192,"endOffset":2352,"count":0}],"isBlockCoverage":false},{"functionName":"EventEmitter","ranges":[{"startOffset":2486,"endOffset":2555,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":2919,"endOffset":2975,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":2979,"endOffset":3213,"count":0}],"isBlockCoverage":false},{"functionName":"checkListener","ranges":[{"startOffset":3785,"endOffset":3935,"count":4},{"startOffset":3858,"endOffset":3933,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":4024,"endOffset":4072,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":4081,"endOffset":4356,"count":0}],"isBlockCoverage":false},{"functionName":"EventEmitter.setMaxListeners","ranges":[{"startOffset":4865,"endOffset":5757,"count":0}],"isBlockCoverage":false},{"functionName":"EventEmitter.init","ranges":[{"startOffset":5780,"endOffset":6503,"count":1},{"startOffset":5831,"endOffset":5891,"count":0},{"startOffset":6055,"endOffset":6314,"count":0}],"isBlockCoverage":true},{"functionName":"addCatch","ranges":[{"startOffset":6506,"endOffset":7065,"count":0}],"isBlockCoverage":false},{"functionName":"emitUnhandledRejectionOrErr","ranges":[{"startOffset":7067,"endOffset":7725,"count":0}],"isBlockCoverage":false},{"functionName":"setMaxListeners","ranges":[{"startOffset":7877,"endOffset":8076,"count":0}],"isBlockCoverage":false},{"functionName":"_getMaxListeners","ranges":[{"startOffset":8079,"endOffset":8228,"count":0}],"isBlockCoverage":false},{"functionName":"getMaxListeners","ranges":[{"startOffset":8365,"endOffset":8428,"count":0}],"isBlockCoverage":false},{"functionName":"identicalSequenceRange","ranges":[{"startOffset":8556,"endOffset":9132,"count":0}],"isBlockCoverage":false},{"functionName":"enhanceStackTrace","ranges":[{"startOffset":9134,"endOffset":9746,"count":0}],"isBlockCoverage":false},{"functionName":"emit","ranges":[{"startOffset":9941,"endOffset":12208,"count":6},{"startOffset":10086,"endOffset":10124,"count":0},{"startOffset":10132,"endOffset":10166,"count":0},{"startOffset":10190,"endOffset":10219,"count":0},{"startOffset":10225,"endOffset":10262,"count":0},{"startOffset":10334,"endOffset":11266,"count":0},{"startOffset":11334,"endOffset":11347,"count":2},{"startOffset":11347,"endOffset":11667,"count":4},{"startOffset":11594,"endOffset":11612,"count":0},{"startOffset":11614,"endOffset":11663,"count":0},{"startOffset":11667,"endOffset":12190,"count":0},{"startOffset":12190,"endOffset":12207,"count":4}],"isBlockCoverage":true},{"functionName":"_addListener","ranges":[{"startOffset":12211,"endOffset":14266,"count":4},{"startOffset":12391,"endOffset":12475,"count":0},{"startOffset":12660,"endOffset":12940,"count":3},{"startOffset":12737,"endOffset":12756,"count":0},{"startOffset":13143,"endOffset":14246,"count":0}],"isBlockCoverage":true},{"functionName":"addListener","ranges":[{"startOffset":14444,"endOffset":14536,"count":4}],"isBlockCoverage":true},{"functionName":"prependListener","ranges":[{"startOffset":14823,"endOffset":14926,"count":0}],"isBlockCoverage":false},{"functionName":"onceWrapper","ranges":[{"startOffset":14929,"endOffset":15193,"count":0}],"isBlockCoverage":false},{"functionName":"_onceWrap","ranges":[{"startOffset":15195,"endOffset":15436,"count":0}],"isBlockCoverage":false},{"functionName":"once","ranges":[{"startOffset":15627,"endOffset":15753,"count":0}],"isBlockCoverage":false},{"functionName":"prependOnceListener","ranges":[{"startOffset":15986,"endOffset":16156,"count":0}],"isBlockCoverage":false},{"functionName":"removeListener","ranges":[{"startOffset":16363,"endOffset":17657,"count":0}],"isBlockCoverage":false},{"functionName":"removeAllListeners","ranges":[{"startOffset":17977,"endOffset":19303,"count":0}],"isBlockCoverage":false},{"functionName":"_listeners","ranges":[{"startOffset":19306,"endOffset":19701,"count":0}],"isBlockCoverage":false},{"functionName":"listeners","ranges":[{"startOffset":19891,"endOffset":19958,"count":0}],"isBlockCoverage":false},{"functionName":"rawListeners","ranges":[{"startOffset":20165,"endOffset":20236,"count":0}],"isBlockCoverage":false},{"functionName":"EventEmitter.listenerCount","ranges":[{"startOffset":20478,"endOffset":20646,"count":0}],"isBlockCoverage":false},{"functionName":"listenerCount","ranges":[{"startOffset":20849,"endOffset":21139,"count":0}],"isBlockCoverage":false},{"functionName":"eventNames","ranges":[{"startOffset":21295,"endOffset":21388,"count":0}],"isBlockCoverage":false},{"functionName":"arrayClone","ranges":[{"startOffset":21391,"endOffset":21864,"count":0}],"isBlockCoverage":false},{"functionName":"unwrapListeners","ranges":[{"startOffset":21866,"endOffset":22080,"count":0}],"isBlockCoverage":false},{"functionName":"getEventListeners","ranges":[{"startOffset":22290,"endOffset":23070,"count":0}],"isBlockCoverage":false},{"functionName":"once","ranges":[{"startOffset":23290,"endOffset":25046,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":25124,"endOffset":25145,"count":0}],"isBlockCoverage":false},{"functionName":"createIterResult","ranges":[{"startOffset":25160,"endOffset":25228,"count":0}],"isBlockCoverage":false},{"functionName":"addErrorHandlerIfEventEmitter","ranges":[{"startOffset":25230,"endOffset":25413,"count":0}],"isBlockCoverage":false},{"functionName":"eventTargetAgnosticRemoveListener","ranges":[{"startOffset":25415,"endOffset":25800,"count":0}],"isBlockCoverage":false},{"functionName":"eventTargetAgnosticAddListener","ranges":[{"startOffset":25802,"endOffset":26383,"count":0}],"isBlockCoverage":false},{"functionName":"on","ranges":[{"startOffset":26595,"endOffset":29633,"count":0}],"isBlockCoverage":false}]},{"scriptId":"14","url":"internal/util/inspect.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":70820,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2427,"endOffset":2488,"count":62}],"isBlockCoverage":true},{"functionName":"isUndetectableObject","ranges":[{"startOffset":2582,"endOffset":2632,"count":0}],"isBlockCoverage":false},{"functionName":"getUserOptions","ranges":[{"startOffset":5775,"endOffset":7226,"count":0}],"isBlockCoverage":false},{"functionName":"inspect","ranges":[{"startOffset":7521,"endOffset":9484,"count":1},{"startOffset":8310,"endOffset":8506,"count":0},{"startOffset":8576,"endOffset":8612,"count":0},{"startOffset":8717,"endOffset":9251,"count":3},{"startOffset":9013,"endOffset":9043,"count":0},{"startOffset":9088,"endOffset":9243,"count":0},{"startOffset":9347,"endOffset":9377,"count":0},{"startOffset":9414,"endOffset":9445,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":9576,"endOffset":9621,"count":1}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":9625,"endOffset":9833,"count":0}],"isBlockCoverage":false},{"functionName":"defineColorAlias","ranges":[{"startOffset":11571,"endOffset":11813,"count":12}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":11666,"endOffset":11706,"count":5}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":11712,"endOffset":11758,"count":0}],"isBlockCoverage":false},{"functionName":"addQuotes","ranges":[{"startOffset":12823,"endOffset":12981,"count":0}],"isBlockCoverage":false},{"functionName":"escapeFn","ranges":[{"startOffset":13000,"endOffset":13032,"count":0}],"isBlockCoverage":false},{"functionName":"strEscape","ranges":[{"startOffset":13145,"endOffset":14771,"count":0}],"isBlockCoverage":false},{"functionName":"stylizeWithColor","ranges":[{"startOffset":14773,"endOffset":15039,"count":5},{"startOffset":15023,"endOffset":15038,"count":0}],"isBlockCoverage":true},{"functionName":"stylizeNoColor","ranges":[{"startOffset":15041,"endOffset":15087,"count":0}],"isBlockCoverage":false},{"functionName":"getEmptyFormatArray","ranges":[{"startOffset":15166,"endOffset":15213,"count":0}],"isBlockCoverage":false},{"functionName":"isInstanceof","ranges":[{"startOffset":15215,"endOffset":15333,"count":1},{"startOffset":15302,"endOffset":15331,"count":0}],"isBlockCoverage":true},{"functionName":"getConstructorName","ranges":[{"startOffset":15335,"endOffset":16595,"count":1},{"startOffset":15451,"endOffset":15479,"count":0},{"startOffset":15481,"endOffset":16112,"count":2},{"startOffset":15591,"endOffset":15640,"count":1},{"startOffset":15641,"endOffset":15680,"count":1},{"startOffset":15681,"endOffset":15727,"count":1},{"startOffset":15729,"endOffset":16004,"count":1},{"startOffset":15766,"endOffset":15853,"count":0},{"startOffset":15855,"endOffset":15962,"count":0},{"startOffset":16004,"endOffset":16108,"count":1},{"startOffset":16112,"endOffset":16265,"count":0},{"startOffset":16267,"endOffset":16594,"count":0}],"isBlockCoverage":true},{"functionName":"addPrototypeProperties","ranges":[{"startOffset":16782,"endOffset":18625,"count":0}],"isBlockCoverage":false},{"functionName":"getPrefix","ranges":[{"startOffset":18627,"endOffset":19014,"count":0}],"isBlockCoverage":false},{"functionName":"getKeys","ranges":[{"startOffset":19051,"endOffset":20042,"count":1},{"startOffset":19173,"endOffset":19299,"count":0},{"startOffset":19648,"endOffset":19828,"count":0},{"startOffset":19859,"endOffset":20021,"count":0}],"isBlockCoverage":true},{"functionName":"filter","ranges":[{"startOffset":19882,"endOffset":19938,"count":0}],"isBlockCoverage":false},{"functionName":"getCtxStyle","ranges":[{"startOffset":20044,"endOffset":20307,"count":0}],"isBlockCoverage":false},{"functionName":"formatProxy","ranges":[{"startOffset":20309,"endOffset":20759,"count":0}],"isBlockCoverage":false},{"functionName":"formatValue","ranges":[{"startOffset":20941,"endOffset":23480,"count":1},{"startOffset":21079,"endOffset":21115,"count":0},{"startOffset":21116,"endOffset":21153,"count":0},{"startOffset":21155,"endOffset":21213,"count":0},{"startOffset":21236,"endOffset":21281,"count":0},{"startOffset":21557,"endOffset":21664,"count":0},{"startOffset":21816,"endOffset":22882,"count":0},{"startOffset":23072,"endOffset":23419,"count":0}],"isBlockCoverage":true},{"functionName":"formatRaw","ranges":[{"startOffset":23482,"endOffset":33975,"count":1},{"startOffset":23592,"endOffset":23644,"count":0},{"startOffset":23646,"endOffset":23672,"count":0},{"startOffset":23837,"endOffset":23863,"count":0},{"startOffset":23865,"endOffset":23898,"count":0},{"startOffset":24080,"endOffset":24255,"count":0},{"startOffset":24417,"endOffset":24433,"count":0},{"startOffset":24738,"endOffset":27586,"count":0},{"startOffset":27709,"endOffset":27994,"count":0},{"startOffset":28033,"endOffset":28197,"count":0},{"startOffset":28224,"endOffset":28685,"count":0},{"startOffset":28710,"endOffset":29140,"count":0},{"startOffset":29313,"endOffset":31505,"count":0},{"startOffset":31509,"endOffset":31563,"count":0},{"startOffset":31565,"endOffset":32188,"count":0},{"startOffset":32193,"endOffset":33332,"count":0},{"startOffset":33934,"endOffset":33974,"count":0}],"isBlockCoverage":true},{"functionName":"getIteratorBraces","ranges":[{"startOffset":33977,"endOffset":34159,"count":0}],"isBlockCoverage":false},{"functionName":"getBoxedBase","ranges":[{"startOffset":34161,"endOffset":35335,"count":0}],"isBlockCoverage":false},{"functionName":"getClassBase","ranges":[{"startOffset":35337,"endOffset":35937,"count":0}],"isBlockCoverage":false},{"functionName":"getFunctionBase","ranges":[{"startOffset":35939,"endOffset":37032,"count":0}],"isBlockCoverage":false},{"functionName":"formatError","ranges":[{"startOffset":37034,"endOffset":40155,"count":1},{"startOffset":37142,"endOffset":37151,"count":0},{"startOffset":37222,"endOffset":37251,"count":0},{"startOffset":37395,"endOffset":37667,"count":0},{"startOffset":37898,"endOffset":37974,"count":0},{"startOffset":37977,"endOffset":38651,"count":0},{"startOffset":38770,"endOffset":38775,"count":0},{"startOffset":38967,"endOffset":38998,"count":0},{"startOffset":39207,"endOffset":39903,"count":5},{"startOffset":39383,"endOffset":39897,"count":0},{"startOffset":40022,"endOffset":40137,"count":0}],"isBlockCoverage":true},{"functionName":"groupArrayElements","ranges":[{"startOffset":40157,"endOffset":44408,"count":0}],"isBlockCoverage":false},{"functionName":"handleMaxCallStackSize","ranges":[{"startOffset":44410,"endOffset":44798,"count":0}],"isBlockCoverage":false},{"functionName":"formatNumber","ranges":[{"startOffset":44800,"endOffset":44977,"count":0}],"isBlockCoverage":false},{"functionName":"formatBigInt","ranges":[{"startOffset":44979,"endOffset":45051,"count":0}],"isBlockCoverage":false},{"functionName":"formatPrimitive","ranges":[{"startOffset":45053,"endOffset":46236,"count":0}],"isBlockCoverage":false},{"functionName":"formatNamespaceObject","ranges":[{"startOffset":46238,"endOffset":47358,"count":0}],"isBlockCoverage":false},{"functionName":"formatSpecialArray","ranges":[{"startOffset":47405,"endOffset":48612,"count":0}],"isBlockCoverage":false},{"functionName":"formatArrayBuffer","ranges":[{"startOffset":48614,"endOffset":49214,"count":0}],"isBlockCoverage":false},{"functionName":"formatArray","ranges":[{"startOffset":49216,"endOffset":49810,"count":0}],"isBlockCoverage":false},{"functionName":"formatTypedArray","ranges":[{"startOffset":49812,"endOffset":50829,"count":0}],"isBlockCoverage":false},{"functionName":"formatSet","ranges":[{"startOffset":50831,"endOffset":51063,"count":0}],"isBlockCoverage":false},{"functionName":"formatMap","ranges":[{"startOffset":51065,"endOffset":51367,"count":0}],"isBlockCoverage":false},{"functionName":"formatSetIterInner","ranges":[{"startOffset":51369,"endOffset":52182,"count":0}],"isBlockCoverage":false},{"functionName":"formatMapIterInner","ranges":[{"startOffset":52184,"endOffset":53502,"count":0}],"isBlockCoverage":false},{"functionName":"formatWeakCollection","ranges":[{"startOffset":53504,"endOffset":53596,"count":0}],"isBlockCoverage":false},{"functionName":"formatWeakSet","ranges":[{"startOffset":53598,"endOffset":53755,"count":0}],"isBlockCoverage":false},{"functionName":"formatWeakMap","ranges":[{"startOffset":53757,"endOffset":53914,"count":0}],"isBlockCoverage":false},{"functionName":"formatIterator","ranges":[{"startOffset":53916,"endOffset":54315,"count":0}],"isBlockCoverage":false},{"functionName":"formatPromise","ranges":[{"startOffset":54317,"endOffset":54791,"count":0}],"isBlockCoverage":false},{"functionName":"formatProperty","ranges":[{"startOffset":54793,"endOffset":57191,"count":0}],"isBlockCoverage":false},{"functionName":"isBelowBreakLength","ranges":[{"startOffset":57193,"endOffset":58135,"count":0}],"isBlockCoverage":false},{"functionName":"reduceToSingleString","ranges":[{"startOffset":58137,"endOffset":60883,"count":0}],"isBlockCoverage":false},{"functionName":"hasBuiltInToString","ranges":[{"startOffset":60885,"endOffset":61904,"count":0}],"isBlockCoverage":false},{"functionName":"firstErrorLine","ranges":[{"startOffset":61929,"endOffset":61968,"count":0}],"isBlockCoverage":false},{"functionName":"tryStringify","ranges":[{"startOffset":61998,"endOffset":62467,"count":0}],"isBlockCoverage":false},{"functionName":"format","ranges":[{"startOffset":62469,"endOffset":62550,"count":0}],"isBlockCoverage":false},{"functionName":"formatWithOptions","ranges":[{"startOffset":62552,"endOffset":62827,"count":0}],"isBlockCoverage":false},{"functionName":"formatWithOptionsInternal","ranges":[{"startOffset":62829,"endOffset":66610,"count":0}],"isBlockCoverage":false},{"functionName":"getStringWidth","ranges":[{"startOffset":67039,"endOffset":67590,"count":0}],"isBlockCoverage":false},{"functionName":"getStringWidth","ranges":[{"startOffset":67705,"endOffset":68141,"count":0}],"isBlockCoverage":false},{"functionName":"isFullWidthCodePoint","ranges":[{"startOffset":68309,"endOffset":69918,"count":0}],"isBlockCoverage":false},{"functionName":"isZeroWidthCodePoint","ranges":[{"startOffset":69952,"endOffset":70520,"count":0}],"isBlockCoverage":false},{"functionName":"stripVTControlCharacters","ranges":[{"startOffset":70610,"endOffset":70684,"count":0}],"isBlockCoverage":false}]},{"scriptId":"15","url":"internal/util/types.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1739,"count":1}],"isBlockCoverage":false},{"functionName":"isTypedArray","ranges":[{"startOffset":105,"endOffset":208,"count":0}],"isBlockCoverage":false},{"functionName":"isUint8Array","ranges":[{"startOffset":210,"endOffset":316,"count":331}],"isBlockCoverage":true},{"functionName":"isUint8ClampedArray","ranges":[{"startOffset":318,"endOffset":438,"count":0}],"isBlockCoverage":false},{"functionName":"isUint16Array","ranges":[{"startOffset":440,"endOffset":548,"count":0}],"isBlockCoverage":false},{"functionName":"isUint32Array","ranges":[{"startOffset":550,"endOffset":658,"count":0}],"isBlockCoverage":false},{"functionName":"isInt8Array","ranges":[{"startOffset":660,"endOffset":764,"count":0}],"isBlockCoverage":false},{"functionName":"isInt16Array","ranges":[{"startOffset":766,"endOffset":872,"count":0}],"isBlockCoverage":false},{"functionName":"isInt32Array","ranges":[{"startOffset":874,"endOffset":980,"count":0}],"isBlockCoverage":false},{"functionName":"isFloat32Array","ranges":[{"startOffset":982,"endOffset":1092,"count":0}],"isBlockCoverage":false},{"functionName":"isFloat64Array","ranges":[{"startOffset":1094,"endOffset":1204,"count":0}],"isBlockCoverage":false},{"functionName":"isBigInt64Array","ranges":[{"startOffset":1206,"endOffset":1318,"count":0}],"isBlockCoverage":false},{"functionName":"isBigUint64Array","ranges":[{"startOffset":1320,"endOffset":1434,"count":134}],"isBlockCoverage":true}]},{"scriptId":"16","url":"internal/assert.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":474,"count":1}],"isBlockCoverage":false},{"functionName":"lazyError","ranges":[{"startOffset":26,"endOffset":155,"count":0}],"isBlockCoverage":false},{"functionName":"assert","ranges":[{"startOffset":157,"endOffset":307,"count":180},{"startOffset":205,"endOffset":305,"count":0}],"isBlockCoverage":true},{"functionName":"fail","ranges":[{"startOffset":309,"endOffset":426,"count":0}],"isBlockCoverage":false}]},{"scriptId":"17","url":"internal/validators.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7467,"count":1}],"isBlockCoverage":false},{"functionName":"isInt32","ranges":[{"startOffset":581,"endOffset":640,"count":2}],"isBlockCoverage":true},{"functionName":"isUint32","ranges":[{"startOffset":642,"endOffset":704,"count":42}],"isBlockCoverage":true},{"functionName":"parseFileMode","ranges":[{"startOffset":1326,"endOffset":1807,"count":41},{"startOffset":1389,"endOffset":1409,"count":0},{"startOffset":1411,"endOffset":1432,"count":0},{"startOffset":1480,"endOffset":1806,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1852,"endOffset":2233,"count":2},{"startOffset":1972,"endOffset":2026,"count":0},{"startOffset":2066,"endOffset":2120,"count":0},{"startOffset":2163,"endOffset":2229,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2279,"endOffset":2860,"count":2},{"startOffset":2441,"endOffset":2739,"count":0},{"startOffset":2776,"endOffset":2856,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2904,"endOffset":3414,"count":0}],"isBlockCoverage":false},{"functionName":"validateString","ranges":[{"startOffset":3418,"endOffset":3550,"count":566},{"startOffset":3494,"endOffset":3548,"count":0}],"isBlockCoverage":true},{"functionName":"validateNumber","ranges":[{"startOffset":3552,"endOffset":3684,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3724,"endOffset":4174,"count":0}],"isBlockCoverage":false},{"functionName":"validateBoolean","ranges":[{"startOffset":4178,"endOffset":4313,"count":1},{"startOffset":4256,"endOffset":4311,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4357,"endOffset":4730,"count":41},{"startOffset":4480,"endOffset":4497,"count":0},{"startOffset":4523,"endOffset":4545,"count":0},{"startOffset":4585,"endOffset":4655,"count":0},{"startOffset":4658,"endOffset":4726,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4772,"endOffset":5050,"count":0}],"isBlockCoverage":false},{"functionName":"validateSignalName","ranges":[{"startOffset":5054,"endOffset":5413,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5454,"endOffset":5684,"count":1},{"startOffset":5519,"endOffset":5682,"count":0}],"isBlockCoverage":true},{"functionName":"validateEncoding","ranges":[{"startOffset":5688,"endOffset":6022,"count":0}],"isBlockCoverage":false},{"functionName":"validatePort","ranges":[{"startOffset":6166,"endOffset":6531,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6574,"endOffset":6675,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6723,"endOffset":6940,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6985,"endOffset":7101,"count":3},{"startOffset":7043,"endOffset":7099,"count":0}],"isBlockCoverage":true}]},{"scriptId":"18","url":"buffer.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":37853,"count":1}],"isBlockCoverage":false},{"functionName":"validateOffset","ranges":[{"startOffset":2972,"endOffset":3056,"count":0}],"isBlockCoverage":false},{"functionName":"createUnsafeBuffer","ranges":[{"startOffset":4046,"endOffset":4182,"count":42}],"isBlockCoverage":true},{"functionName":"createPool","ranges":[{"startOffset":4184,"endOffset":4343,"count":1}],"isBlockCoverage":true},{"functionName":"alignPool","ranges":[{"startOffset":4359,"endOffset":4481,"count":2}],"isBlockCoverage":true},{"functionName":"showFlaggedDeprecation","ranges":[{"startOffset":4785,"endOffset":5465,"count":0}],"isBlockCoverage":false},{"functionName":"toInteger","ranges":[{"startOffset":5467,"endOffset":5685,"count":0}],"isBlockCoverage":false},{"functionName":"_copy","ranges":[{"startOffset":5687,"endOffset":6952,"count":0}],"isBlockCoverage":false},{"functionName":"_copyActual","ranges":[{"startOffset":6954,"endOffset":7485,"count":0}],"isBlockCoverage":false},{"functionName":"Buffer","ranges":[{"startOffset":8061,"endOffset":8394,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8487,"endOffset":8515,"count":0}],"isBlockCoverage":false},{"functionName":"from","ranges":[{"startOffset":8772,"endOffset":9736,"count":2},{"startOffset":8901,"endOffset":8952,"count":0},{"startOffset":8954,"endOffset":9735,"count":0}],"isBlockCoverage":true},{"functionName":"of","ranges":[{"startOffset":10107,"endOffset":10259,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10548,"endOffset":10769,"count":41},{"startOffset":10592,"endOffset":10657,"count":0},{"startOffset":10700,"endOffset":10767,"count":0}],"isBlockCoverage":true},{"functionName":"alloc","ranges":[{"startOffset":10872,"endOffset":11117,"count":0}],"isBlockCoverage":false},{"functionName":"allocUnsafe","ranges":[{"startOffset":11296,"endOffset":11371,"count":1}],"isBlockCoverage":true},{"functionName":"allocUnsafeSlow","ranges":[{"startOffset":11612,"endOffset":11701,"count":40}],"isBlockCoverage":true},{"functionName":"SlowBuffer","ranges":[{"startOffset":11797,"endOffset":11887,"count":0}],"isBlockCoverage":false},{"functionName":"allocate","ranges":[{"startOffset":12001,"endOffset":12333,"count":1},{"startOffset":12044,"endOffset":12078,"count":0},{"startOffset":12117,"endOffset":12296,"count":0}],"isBlockCoverage":true},{"functionName":"fromStringFast","ranges":[{"startOffset":12335,"endOffset":12881,"count":2},{"startOffset":12461,"endOffset":12510,"count":0},{"startOffset":12556,"endOffset":12569,"count":0},{"startOffset":12702,"endOffset":12828,"count":0}],"isBlockCoverage":true},{"functionName":"fromString","ranges":[{"startOffset":12883,"endOffset":13336,"count":2},{"startOffset":12969,"endOffset":12993,"count":0},{"startOffset":13032,"endOffset":13056,"count":0},{"startOffset":13114,"endOffset":13296,"count":0}],"isBlockCoverage":true},{"functionName":"fromArrayBuffer","ranges":[{"startOffset":13338,"endOffset":14035,"count":0}],"isBlockCoverage":false},{"functionName":"fromArrayLike","ranges":[{"startOffset":14037,"endOffset":14431,"count":0}],"isBlockCoverage":false},{"functionName":"fromObject","ranges":[{"startOffset":14433,"endOffset":14739,"count":0}],"isBlockCoverage":false},{"functionName":"isBuffer","ranges":[{"startOffset":14778,"endOffset":14832,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":14852,"endOffset":15177,"count":0}],"isBlockCoverage":false},{"functionName":"isEncoding","ranges":[{"startOffset":15200,"endOffset":15351,"count":1}],"isBlockCoverage":true},{"functionName":"concat","ranges":[{"startOffset":15417,"endOffset":16625,"count":0}],"isBlockCoverage":false},{"functionName":"base64ByteLength","ranges":[{"startOffset":16628,"endOffset":16896,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":17031,"endOffset":17095,"count":2}],"isBlockCoverage":true},{"functionName":"slice","ranges":[{"startOffset":17108,"endOffset":17154,"count":1}],"isBlockCoverage":true},{"functionName":"indexOf","ranges":[{"startOffset":17169,"endOffset":17265,"count":0}],"isBlockCoverage":false},{"functionName":"byteLength","ranges":[{"startOffset":17358,"endOffset":17387,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":17400,"endOffset":17464,"count":0}],"isBlockCoverage":false},{"functionName":"slice","ranges":[{"startOffset":17477,"endOffset":17523,"count":40}],"isBlockCoverage":true},{"functionName":"indexOf","ranges":[{"startOffset":17538,"endOffset":17637,"count":0}],"isBlockCoverage":false},{"functionName":"byteLength","ranges":[{"startOffset":17736,"endOffset":17765,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":17778,"endOffset":17842,"count":0}],"isBlockCoverage":false},{"functionName":"slice","ranges":[{"startOffset":17855,"endOffset":17901,"count":0}],"isBlockCoverage":false},{"functionName":"indexOf","ranges":[{"startOffset":17916,"endOffset":18015,"count":0}],"isBlockCoverage":false},{"functionName":"byteLength","ranges":[{"startOffset":18111,"endOffset":18136,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":18149,"endOffset":18215,"count":0}],"isBlockCoverage":false},{"functionName":"slice","ranges":[{"startOffset":18228,"endOffset":18276,"count":0}],"isBlockCoverage":false},{"functionName":"indexOf","ranges":[{"startOffset":18291,"endOffset":18389,"count":0}],"isBlockCoverage":false},{"functionName":"byteLength","ranges":[{"startOffset":18482,"endOffset":18507,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":18520,"endOffset":18585,"count":0}],"isBlockCoverage":false},{"functionName":"slice","ranges":[{"startOffset":18598,"endOffset":18645,"count":0}],"isBlockCoverage":false},{"functionName":"indexOf","ranges":[{"startOffset":18660,"endOffset":18872,"count":0}],"isBlockCoverage":false},{"functionName":"byteLength","ranges":[{"startOffset":18968,"endOffset":19019,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":19032,"endOffset":19098,"count":0}],"isBlockCoverage":false},{"functionName":"slice","ranges":[{"startOffset":19111,"endOffset":19159,"count":0}],"isBlockCoverage":false},{"functionName":"indexOf","ranges":[{"startOffset":19174,"endOffset":19388,"count":0}],"isBlockCoverage":false},{"functionName":"byteLength","ranges":[{"startOffset":19493,"endOffset":19544,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":19557,"endOffset":19632,"count":0}],"isBlockCoverage":false},{"functionName":"slice","ranges":[{"startOffset":19645,"endOffset":19696,"count":0}],"isBlockCoverage":false},{"functionName":"indexOf","ranges":[{"startOffset":19711,"endOffset":19931,"count":0}],"isBlockCoverage":false},{"functionName":"byteLength","ranges":[{"startOffset":20018,"endOffset":20049,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":20062,"endOffset":20125,"count":0}],"isBlockCoverage":false},{"functionName":"slice","ranges":[{"startOffset":20138,"endOffset":20183,"count":0}],"isBlockCoverage":false},{"functionName":"indexOf","ranges":[{"startOffset":20198,"endOffset":20406,"count":0}],"isBlockCoverage":false},{"functionName":"getEncodingOps","ranges":[{"startOffset":20414,"endOffset":22238,"count":41},{"startOffset":20540,"endOffset":20564,"count":1},{"startOffset":20564,"endOffset":20620,"count":40},{"startOffset":20620,"endOffset":20800,"count":0},{"startOffset":20805,"endOffset":21224,"count":0},{"startOffset":21229,"endOffset":21383,"count":0},{"startOffset":21388,"endOffset":21544,"count":0},{"startOffset":21549,"endOffset":21930,"count":0},{"startOffset":21935,"endOffset":22067,"count":0},{"startOffset":22072,"endOffset":22232,"count":0}],"isBlockCoverage":true},{"functionName":"byteLength","ranges":[{"startOffset":22240,"endOffset":22897,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":23037,"endOffset":23131,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":23209,"endOffset":23307,"count":0}],"isBlockCoverage":false},{"functionName":"copy","ranges":[{"startOffset":23339,"endOffset":23472,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":23753,"endOffset":24332,"count":41},{"startOffset":23825,"endOffset":23873,"count":0},{"startOffset":23925,"endOffset":23935,"count":0},{"startOffset":23965,"endOffset":23975,"count":0},{"startOffset":24024,"endOffset":24036,"count":0},{"startOffset":24052,"endOffset":24073,"count":0},{"startOffset":24099,"endOffset":24109,"count":0},{"startOffset":24145,"endOffset":24179,"count":0},{"startOffset":24250,"endOffset":24291,"count":0}],"isBlockCoverage":true},{"functionName":"equals","ranges":[{"startOffset":24361,"endOffset":24715,"count":0}],"isBlockCoverage":false},{"functionName":"inspect","ranges":[{"startOffset":24843,"endOffset":25978,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":26074,"endOffset":27223,"count":0}],"isBlockCoverage":false},{"functionName":"bidirectionalIndexOf","ranges":[{"startOffset":27651,"endOffset":28958,"count":0}],"isBlockCoverage":false},{"functionName":"indexOf","ranges":[{"startOffset":28987,"endOffset":29104,"count":0}],"isBlockCoverage":false},{"functionName":"lastIndexOf","ranges":[{"startOffset":29138,"endOffset":29260,"count":0}],"isBlockCoverage":false},{"functionName":"includes","ranges":[{"startOffset":29291,"endOffset":29396,"count":0}],"isBlockCoverage":false},{"functionName":"fill","ranges":[{"startOffset":29574,"endOffset":29673,"count":0}],"isBlockCoverage":false},{"functionName":"_fill","ranges":[{"startOffset":29676,"endOffset":31622,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":31649,"endOffset":32664,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":32693,"endOffset":32927,"count":0}],"isBlockCoverage":false},{"functionName":"adjustOffset","ranges":[{"startOffset":32930,"endOffset":33364,"count":0}],"isBlockCoverage":false},{"functionName":"slice","ranges":[{"startOffset":33391,"endOffset":33691,"count":0}],"isBlockCoverage":false},{"functionName":"swap","ranges":[{"startOffset":33694,"endOffset":33765,"count":0}],"isBlockCoverage":false},{"functionName":"swap16","ranges":[{"startOffset":33793,"endOffset":34197,"count":0}],"isBlockCoverage":false},{"functionName":"swap32","ranges":[{"startOffset":34226,"endOffset":34670,"count":0}],"isBlockCoverage":false},{"functionName":"swap64","ranges":[{"startOffset":34699,"endOffset":35207,"count":0}],"isBlockCoverage":false},{"functionName":"transcode","ranges":[{"startOffset":35520,"endOffset":36260,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":36329,"endOffset":36519,"count":0}],"isBlockCoverage":false},{"functionName":"btoa","ranges":[{"startOffset":36523,"endOffset":36937,"count":0}],"isBlockCoverage":false},{"functionName":"atob","ranges":[{"startOffset":37033,"endOffset":37432,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":37766,"endOffset":37801,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":37807,"endOffset":37844,"count":0}],"isBlockCoverage":false}]},{"scriptId":"19","url":"internal/buffer.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":30118,"count":1}],"isBlockCoverage":false},{"functionName":"checkBounds","ranges":[{"startOffset":1143,"endOffset":1359,"count":0}],"isBlockCoverage":false},{"functionName":"checkInt","ranges":[{"startOffset":1361,"endOffset":1983,"count":0}],"isBlockCoverage":false},{"functionName":"boundsError","ranges":[{"startOffset":1985,"endOffset":2388,"count":0}],"isBlockCoverage":false},{"functionName":"readBigUInt64LE","ranges":[{"startOffset":2408,"endOffset":2907,"count":0}],"isBlockCoverage":false},{"functionName":"readBigUInt64BE","ranges":[{"startOffset":2909,"endOffset":3408,"count":0}],"isBlockCoverage":false},{"functionName":"readBigInt64LE","ranges":[{"startOffset":3410,"endOffset":3911,"count":0}],"isBlockCoverage":false},{"functionName":"readBigInt64BE","ranges":[{"startOffset":3913,"endOffset":4408,"count":0}],"isBlockCoverage":false},{"functionName":"readUIntLE","ranges":[{"startOffset":4410,"endOffset":4962,"count":0}],"isBlockCoverage":false},{"functionName":"readUInt48LE","ranges":[{"startOffset":4964,"endOffset":5347,"count":0}],"isBlockCoverage":false},{"functionName":"readUInt40LE","ranges":[{"startOffset":5349,"endOffset":5705,"count":0}],"isBlockCoverage":false},{"functionName":"readUInt32LE","ranges":[{"startOffset":5707,"endOffset":6033,"count":0}],"isBlockCoverage":false},{"functionName":"readUInt24LE","ranges":[{"startOffset":6035,"endOffset":6323,"count":0}],"isBlockCoverage":false},{"functionName":"readUInt16LE","ranges":[{"startOffset":6325,"endOffset":6585,"count":0}],"isBlockCoverage":false},{"functionName":"readUInt8","ranges":[{"startOffset":6587,"endOffset":6767,"count":0}],"isBlockCoverage":false},{"functionName":"readUIntBE","ranges":[{"startOffset":6769,"endOffset":7321,"count":0}],"isBlockCoverage":false},{"functionName":"readUInt48BE","ranges":[{"startOffset":7323,"endOffset":7706,"count":0}],"isBlockCoverage":false},{"functionName":"readUInt40BE","ranges":[{"startOffset":7708,"endOffset":8064,"count":0}],"isBlockCoverage":false},{"functionName":"readUInt32BE","ranges":[{"startOffset":8066,"endOffset":8392,"count":0}],"isBlockCoverage":false},{"functionName":"readUInt24BE","ranges":[{"startOffset":8394,"endOffset":8682,"count":0}],"isBlockCoverage":false},{"functionName":"readUInt16BE","ranges":[{"startOffset":8684,"endOffset":8944,"count":0}],"isBlockCoverage":false},{"functionName":"readIntLE","ranges":[{"startOffset":8946,"endOffset":9491,"count":0}],"isBlockCoverage":false},{"functionName":"readInt48LE","ranges":[{"startOffset":9493,"endOffset":9924,"count":0}],"isBlockCoverage":false},{"functionName":"readInt40LE","ranges":[{"startOffset":9926,"endOffset":10313,"count":0}],"isBlockCoverage":false},{"functionName":"readInt32LE","ranges":[{"startOffset":10315,"endOffset":10650,"count":0}],"isBlockCoverage":false},{"functionName":"readInt24LE","ranges":[{"startOffset":10652,"endOffset":10984,"count":0}],"isBlockCoverage":false},{"functionName":"readInt16LE","ranges":[{"startOffset":10986,"endOffset":11292,"count":0}],"isBlockCoverage":false},{"functionName":"readInt8","ranges":[{"startOffset":11294,"endOffset":11502,"count":0}],"isBlockCoverage":false},{"functionName":"readIntBE","ranges":[{"startOffset":11504,"endOffset":12049,"count":0}],"isBlockCoverage":false},{"functionName":"readInt48BE","ranges":[{"startOffset":12051,"endOffset":12480,"count":0}],"isBlockCoverage":false},{"functionName":"readInt40BE","ranges":[{"startOffset":12482,"endOffset":12870,"count":0}],"isBlockCoverage":false},{"functionName":"readInt32BE","ranges":[{"startOffset":12872,"endOffset":13207,"count":0}],"isBlockCoverage":false},{"functionName":"readInt24BE","ranges":[{"startOffset":13209,"endOffset":13541,"count":0}],"isBlockCoverage":false},{"functionName":"readInt16BE","ranges":[{"startOffset":13543,"endOffset":13849,"count":0}],"isBlockCoverage":false},{"functionName":"readFloatBackwards","ranges":[{"startOffset":13866,"endOffset":14271,"count":0}],"isBlockCoverage":false},{"functionName":"readFloatForwards","ranges":[{"startOffset":14273,"endOffset":14677,"count":0}],"isBlockCoverage":false},{"functionName":"readDoubleBackwards","ranges":[{"startOffset":14679,"endOffset":15249,"count":0}],"isBlockCoverage":false},{"functionName":"readDoubleForwards","ranges":[{"startOffset":15251,"endOffset":15820,"count":0}],"isBlockCoverage":false},{"functionName":"writeBigU_Int64LE","ranges":[{"startOffset":15841,"endOffset":16323,"count":0}],"isBlockCoverage":false},{"functionName":"writeBigUInt64LE","ranges":[{"startOffset":16325,"endOffset":16447,"count":0}],"isBlockCoverage":false},{"functionName":"writeBigU_Int64BE","ranges":[{"startOffset":16449,"endOffset":16947,"count":0}],"isBlockCoverage":false},{"functionName":"writeBigUInt64BE","ranges":[{"startOffset":16949,"endOffset":17071,"count":0}],"isBlockCoverage":false},{"functionName":"writeBigInt64LE","ranges":[{"startOffset":17073,"endOffset":17217,"count":0}],"isBlockCoverage":false},{"functionName":"writeBigInt64BE","ranges":[{"startOffset":17219,"endOffset":17363,"count":0}],"isBlockCoverage":false},{"functionName":"writeUIntLE","ranges":[{"startOffset":17365,"endOffset":17974,"count":0}],"isBlockCoverage":false},{"functionName":"writeU_Int48LE","ranges":[{"startOffset":17976,"endOffset":18389,"count":0}],"isBlockCoverage":false},{"functionName":"writeU_Int40LE","ranges":[{"startOffset":18391,"endOffset":18770,"count":0}],"isBlockCoverage":false},{"functionName":"writeU_Int32LE","ranges":[{"startOffset":18772,"endOffset":19079,"count":0}],"isBlockCoverage":false},{"functionName":"writeUInt32LE","ranges":[{"startOffset":19081,"endOffset":19187,"count":0}],"isBlockCoverage":false},{"functionName":"writeU_Int24LE","ranges":[{"startOffset":19189,"endOffset":19448,"count":0}],"isBlockCoverage":false},{"functionName":"writeU_Int16LE","ranges":[{"startOffset":19450,"endOffset":19646,"count":0}],"isBlockCoverage":false},{"functionName":"writeUInt16LE","ranges":[{"startOffset":19648,"endOffset":19750,"count":0}],"isBlockCoverage":false},{"functionName":"writeU_Int8","ranges":[{"startOffset":19752,"endOffset":20164,"count":0}],"isBlockCoverage":false},{"functionName":"writeUInt8","ranges":[{"startOffset":20166,"endOffset":20260,"count":0}],"isBlockCoverage":false},{"functionName":"writeUIntBE","ranges":[{"startOffset":20262,"endOffset":20871,"count":0}],"isBlockCoverage":false},{"functionName":"writeU_Int48BE","ranges":[{"startOffset":20873,"endOffset":21294,"count":0}],"isBlockCoverage":false},{"functionName":"writeU_Int40BE","ranges":[{"startOffset":21296,"endOffset":21658,"count":0}],"isBlockCoverage":false},{"functionName":"writeU_Int32BE","ranges":[{"startOffset":21660,"endOffset":21975,"count":0}],"isBlockCoverage":false},{"functionName":"writeUInt32BE","ranges":[{"startOffset":21977,"endOffset":22083,"count":0}],"isBlockCoverage":false},{"functionName":"writeU_Int24BE","ranges":[{"startOffset":22085,"endOffset":22350,"count":0}],"isBlockCoverage":false},{"functionName":"writeU_Int16BE","ranges":[{"startOffset":22352,"endOffset":22548,"count":0}],"isBlockCoverage":false},{"functionName":"writeUInt16BE","ranges":[{"startOffset":22550,"endOffset":22652,"count":0}],"isBlockCoverage":false},{"functionName":"writeIntLE","ranges":[{"startOffset":22654,"endOffset":23316,"count":0}],"isBlockCoverage":false},{"functionName":"writeInt32LE","ranges":[{"startOffset":23318,"endOffset":23433,"count":0}],"isBlockCoverage":false},{"functionName":"writeInt16LE","ranges":[{"startOffset":23435,"endOffset":23542,"count":0}],"isBlockCoverage":false},{"functionName":"writeInt8","ranges":[{"startOffset":23544,"endOffset":23641,"count":0}],"isBlockCoverage":false},{"functionName":"writeIntBE","ranges":[{"startOffset":23643,"endOffset":24305,"count":0}],"isBlockCoverage":false},{"functionName":"writeInt32BE","ranges":[{"startOffset":24307,"endOffset":24422,"count":0}],"isBlockCoverage":false},{"functionName":"writeInt16BE","ranges":[{"startOffset":24424,"endOffset":24531,"count":0}],"isBlockCoverage":false},{"functionName":"writeDoubleForwards","ranges":[{"startOffset":24550,"endOffset":25016,"count":0}],"isBlockCoverage":false},{"functionName":"writeDoubleBackwards","ranges":[{"startOffset":25018,"endOffset":25485,"count":0}],"isBlockCoverage":false},{"functionName":"writeFloatForwards","ranges":[{"startOffset":25487,"endOffset":25788,"count":0}],"isBlockCoverage":false},{"functionName":"writeFloatBackwards","ranges":[{"startOffset":25790,"endOffset":26092,"count":0}],"isBlockCoverage":false},{"functionName":"FastBuffer","ranges":[{"startOffset":26332,"endOffset":26432,"count":44}],"isBlockCoverage":true},{"functionName":"addBufferPrototypeMethods","ranges":[{"startOffset":26436,"endOffset":29575,"count":1},{"startOffset":28519,"endOffset":28539,"count":0},{"startOffset":28593,"endOffset":28612,"count":0},{"startOffset":28668,"endOffset":28689,"count":0},{"startOffset":28745,"endOffset":28765,"count":0},{"startOffset":28822,"endOffset":28843,"count":0},{"startOffset":28899,"endOffset":28919,"count":0},{"startOffset":28977,"endOffset":28999,"count":0},{"startOffset":29057,"endOffset":29078,"count":0}],"isBlockCoverage":true},{"functionName":"markAsUntransferable","ranges":[{"startOffset":29731,"endOffset":29995,"count":1},{"startOffset":29799,"endOffset":29827,"count":0},{"startOffset":29850,"endOffset":29857,"count":0}],"isBlockCoverage":true}]},{"scriptId":"20","url":"internal/blob.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5186,"count":1}],"isBlockCoverage":false},{"functionName":"lazyBuffer","ranges":[{"startOffset":1127,"endOffset":1236,"count":0}],"isBlockCoverage":false},{"functionName":"isBlob","ranges":[{"startOffset":1238,"endOffset":1307,"count":0}],"isBlockCoverage":false},{"functionName":"getSource","ranges":[{"startOffset":1309,"endOffset":1853,"count":0}],"isBlockCoverage":false},{"functionName":"InternalBlob","ranges":[{"startOffset":1901,"endOffset":2038,"count":0}],"isBlockCoverage":false},{"functionName":"Blob","ranges":[{"startOffset":2080,"endOffset":2979,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2983,"endOffset":3252,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3256,"endOffset":3480,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3484,"endOffset":3610,"count":0}],"isBlockCoverage":false},{"functionName":"get type","ranges":[{"startOffset":3614,"endOffset":3648,"count":0}],"isBlockCoverage":false},{"functionName":"get size","ranges":[{"startOffset":3652,"endOffset":3688,"count":0}],"isBlockCoverage":false},{"functionName":"slice","ranges":[{"startOffset":3692,"endOffset":4394,"count":0}],"isBlockCoverage":false},{"functionName":"arrayBuffer","ranges":[{"startOffset":4398,"endOffset":4807,"count":0}],"isBlockCoverage":false},{"functionName":"text","ranges":[{"startOffset":4811,"endOffset":4913,"count":0}],"isBlockCoverage":false}]},{"scriptId":"21","url":"internal/encoding.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":16049,"count":1}],"isBlockCoverage":false},{"functionName":"lazyBuffer","ranges":[{"startOffset":1007,"endOffset":1116,"count":0}],"isBlockCoverage":false},{"functionName":"validateEncoder","ranges":[{"startOffset":1118,"endOffset":1243,"count":0}],"isBlockCoverage":false},{"functionName":"validateDecoder","ranges":[{"startOffset":1245,"endOffset":1370,"count":40},{"startOffset":1326,"endOffset":1368,"count":0}],"isBlockCoverage":true},{"functionName":"trimAsciiWhitespace","ranges":[{"startOffset":8116,"endOffset":8614,"count":0}],"isBlockCoverage":false},{"functionName":"getEncodingFromLabel","ranges":[{"startOffset":8616,"endOffset":8795,"count":1},{"startOffset":8727,"endOffset":8794,"count":0}],"isBlockCoverage":true},{"functionName":"TextEncoder","ranges":[{"startOffset":8866,"endOffset":8912,"count":0}],"isBlockCoverage":false},{"functionName":"get encoding","ranges":[{"startOffset":8916,"endOffset":8983,"count":0}],"isBlockCoverage":false},{"functionName":"encode","ranges":[{"startOffset":8987,"endOffset":9079,"count":0}],"isBlockCoverage":false},{"functionName":"encodeInto","ranges":[{"startOffset":9083,"endOffset":9393,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9397,"endOffset":9792,"count":0}],"isBlockCoverage":false},{"functionName":"makeTextDecoderICU","ranges":[{"startOffset":10150,"endOffset":11947,"count":1}],"isBlockCoverage":true},{"functionName":"TextDecoder","ranges":[{"startOffset":10288,"endOffset":11083,"count":1},{"startOffset":10588,"endOffset":10635,"count":0},{"startOffset":10719,"endOffset":10742,"count":0},{"startOffset":10783,"endOffset":10811,"count":0},{"startOffset":10913,"endOffset":10960,"count":0}],"isBlockCoverage":true},{"functionName":"decode","ranges":[{"startOffset":11090,"endOffset":11918,"count":40},{"startOffset":11192,"endOffset":11243,"count":0},{"startOffset":11280,"endOffset":11459,"count":0},{"startOffset":11674,"endOffset":11677,"count":0},{"startOffset":11795,"endOffset":11877,"count":0}],"isBlockCoverage":true},{"functionName":"makeTextDecoderJS","ranges":[{"startOffset":11949,"endOffset":14642,"count":0}],"isBlockCoverage":false},{"functionName":"get encoding","ranges":[{"startOffset":14767,"endOffset":14848,"count":0}],"isBlockCoverage":false},{"functionName":"get fatal","ranges":[{"startOffset":14855,"endOffset":14982,"count":0}],"isBlockCoverage":false},{"functionName":"get ignoreBOM","ranges":[{"startOffset":14989,"endOffset":15144,"count":0}],"isBlockCoverage":false},{"functionName":"ObjectGetOwnPropertyDescriptors","ranges":[{"startOffset":15151,"endOffset":15765,"count":0}],"isBlockCoverage":false}]},{"scriptId":"22","url":"internal/worker/js_transferable.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1359,"count":1}],"isBlockCoverage":false},{"functionName":"setup","ranges":[{"startOffset":331,"endOffset":1140,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":612,"endOffset":1136,"count":0}],"isBlockCoverage":false}]},{"scriptId":"23","url":"internal/process/per_thread.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10996,"count":1}],"isBlockCoverage":false},{"functionName":"assert","ranges":[{"startOffset":905,"endOffset":993,"count":0}],"isBlockCoverage":false},{"functionName":"wrapProcessMethods","ranges":[{"startOffset":1071,"endOffset":6893,"count":1}],"isBlockCoverage":true},{"functionName":"_rawDebug","ranges":[{"startOffset":1291,"endOffset":1373,"count":0}],"isBlockCoverage":false},{"functionName":"cpuUsage","ranges":[{"startOffset":1584,"endOffset":3143,"count":0}],"isBlockCoverage":false},{"functionName":"previousValueIsValid","ranges":[{"startOffset":3296,"endOffset":3433,"count":0}],"isBlockCoverage":false},{"functionName":"hrtime","ranges":[{"startOffset":3657,"endOffset":4261,"count":0}],"isBlockCoverage":false},{"functionName":"hrtimeBigInt","ranges":[{"startOffset":4448,"endOffset":4542,"count":0}],"isBlockCoverage":false},{"functionName":"memoryUsage","ranges":[{"startOffset":4587,"endOffset":4813,"count":0}],"isBlockCoverage":false},{"functionName":"exit","ranges":[{"startOffset":4843,"endOffset":5326,"count":0}],"isBlockCoverage":false},{"functionName":"kill","ranges":[{"startOffset":5330,"endOffset":5975,"count":0}],"isBlockCoverage":false},{"functionName":"resourceUsage","ranges":[{"startOffset":6026,"endOffset":6759,"count":0}],"isBlockCoverage":false},{"functionName":"buildAllowedFlags","ranges":[{"startOffset":7104,"endOffset":10372,"count":0}],"isBlockCoverage":false},{"functionName":"toggleTraceCategoryState","ranges":[{"startOffset":10562,"endOffset":10892,"count":1},{"startOffset":10642,"endOffset":10817,"count":0},{"startOffset":10849,"endOffset":10890,"count":0}],"isBlockCoverage":true}]},{"scriptId":"24","url":"internal/modules/esm/handle_process_exit.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":350,"count":1}],"isBlockCoverage":false},{"functionName":"handleProcessExit","ranges":[{"startOffset":218,"endOffset":305,"count":1},{"startOffset":281,"endOffset":303,"count":0}],"isBlockCoverage":true}]},{"scriptId":"25","url":"internal/async_hooks.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":19642,"count":1}],"isBlockCoverage":false},{"functionName":"useDomainTrampoline","ranges":[{"startOffset":5145,"endOffset":5199,"count":0}],"isBlockCoverage":false},{"functionName":"callbackTrampoline","ranges":[{"startOffset":5201,"endOffset":5750,"count":0}],"isBlockCoverage":false},{"functionName":"executionAsyncResource","ranges":[{"startOffset":5826,"endOffset":6324,"count":0}],"isBlockCoverage":false},{"functionName":"inspectExceptionValue","ranges":[{"startOffset":6326,"endOffset":6462,"count":0}],"isBlockCoverage":false},{"functionName":"fatalError","ranges":[{"startOffset":6523,"endOffset":6909,"count":0}],"isBlockCoverage":false},{"functionName":"lookupPublicResource","ranges":[{"startOffset":6911,"endOffset":7260,"count":0}],"isBlockCoverage":false},{"functionName":"emitInitNative","ranges":[{"startOffset":7451,"endOffset":8544,"count":0}],"isBlockCoverage":false},{"functionName":"emitHook","ranges":[{"startOffset":8645,"endOffset":9595,"count":0}],"isBlockCoverage":false},{"functionName":"emitHookFactory","ranges":[{"startOffset":9597,"endOffset":9839,"count":4}],"isBlockCoverage":true},{"functionName":"getHookArrays","ranges":[{"startOffset":9868,"endOffset":10358,"count":0}],"isBlockCoverage":false},{"functionName":"storeActiveHooks","ranges":[{"startOffset":10361,"endOffset":10661,"count":0}],"isBlockCoverage":false},{"functionName":"copyHooks","ranges":[{"startOffset":10663,"endOffset":10928,"count":0}],"isBlockCoverage":false},{"functionName":"restoreActiveHooks","ranges":[{"startOffset":11043,"endOffset":11248,"count":0}],"isBlockCoverage":false},{"functionName":"trackPromise","ranges":[{"startOffset":11250,"endOffset":11680,"count":0}],"isBlockCoverage":false},{"functionName":"promiseInitHook","ranges":[{"startOffset":11682,"endOffset":11926,"count":0}],"isBlockCoverage":false},{"functionName":"promiseInitHookWithDestroyTracking","ranges":[{"startOffset":11928,"endOffset":12064,"count":0}],"isBlockCoverage":false},{"functionName":"destroyTracking","ranges":[{"startOffset":12112,"endOffset":12368,"count":0}],"isBlockCoverage":false},{"functionName":"promiseBeforeHook","ranges":[{"startOffset":12370,"endOffset":12581,"count":0}],"isBlockCoverage":false},{"functionName":"promiseAfterHook","ranges":[{"startOffset":12583,"endOffset":13150,"count":0}],"isBlockCoverage":false},{"functionName":"promiseResolveHook","ranges":[{"startOffset":13152,"endOffset":13298,"count":0}],"isBlockCoverage":false},{"functionName":"enableHooks","ranges":[{"startOffset":13329,"endOffset":13389,"count":0}],"isBlockCoverage":false},{"functionName":"updatePromiseHookMode","ranges":[{"startOffset":13391,"endOffset":13812,"count":0}],"isBlockCoverage":false},{"functionName":"disableHooks","ranges":[{"startOffset":13814,"endOffset":14089,"count":0}],"isBlockCoverage":false},{"functionName":"disablePromiseHookIfNecessary","ranges":[{"startOffset":14091,"endOffset":14230,"count":0}],"isBlockCoverage":false},{"functionName":"newAsyncId","ranges":[{"startOffset":14431,"endOffset":14501,"count":0}],"isBlockCoverage":false},{"functionName":"getOrSetAsyncId","ranges":[{"startOffset":14503,"endOffset":14693,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultTriggerAsyncId","ranges":[{"startOffset":14876,"endOffset":15166,"count":0}],"isBlockCoverage":false},{"functionName":"clearDefaultTriggerAsyncId","ranges":[{"startOffset":15169,"endOffset":15258,"count":1}],"isBlockCoverage":true},{"functionName":"defaultTriggerAsyncIdScope","ranges":[{"startOffset":15261,"endOffset":15754,"count":0}],"isBlockCoverage":false},{"functionName":"hasHooks","ranges":[{"startOffset":15756,"endOffset":15819,"count":0}],"isBlockCoverage":false},{"functionName":"enabledHooksExist","ranges":[{"startOffset":15821,"endOffset":15880,"count":0}],"isBlockCoverage":false},{"functionName":"initHooksExist","ranges":[{"startOffset":15882,"endOffset":15937,"count":0}],"isBlockCoverage":false},{"functionName":"afterHooksExist","ranges":[{"startOffset":15939,"endOffset":15996,"count":0}],"isBlockCoverage":false},{"functionName":"destroyHooksExist","ranges":[{"startOffset":15998,"endOffset":16059,"count":0}],"isBlockCoverage":false},{"functionName":"promiseResolveHooksExist","ranges":[{"startOffset":16061,"endOffset":16136,"count":0}],"isBlockCoverage":false},{"functionName":"emitInitScript","ranges":[{"startOffset":16139,"endOffset":16547,"count":0}],"isBlockCoverage":false},{"functionName":"emitBeforeScript","ranges":[{"startOffset":16550,"endOffset":16726,"count":0}],"isBlockCoverage":false},{"functionName":"emitAfterScript","ranges":[{"startOffset":16729,"endOffset":16849,"count":0}],"isBlockCoverage":false},{"functionName":"emitDestroyScript","ranges":[{"startOffset":16852,"endOffset":17062,"count":0}],"isBlockCoverage":false},{"functionName":"hasAsyncIdStack","ranges":[{"startOffset":17065,"endOffset":17128,"count":0}],"isBlockCoverage":false},{"functionName":"pushAsyncContext","ranges":[{"startOffset":17194,"endOffset":17764,"count":0}],"isBlockCoverage":false},{"functionName":"popAsyncContext","ranges":[{"startOffset":17829,"endOffset":18440,"count":0}],"isBlockCoverage":false},{"functionName":"executionAsyncId","ranges":[{"startOffset":18443,"endOffset":18519,"count":0}],"isBlockCoverage":false},{"functionName":"triggerAsyncId","ranges":[{"startOffset":18521,"endOffset":18593,"count":0}],"isBlockCoverage":false}]},{"scriptId":"26","url":"internal/process/task_queues.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4409,"count":1}],"isBlockCoverage":false},{"functionName":"hasTickScheduled","ranges":[{"startOffset":1007,"endOffset":1082,"count":0}],"isBlockCoverage":false},{"functionName":"setHasTickScheduled","ranges":[{"startOffset":1084,"endOffset":1170,"count":0}],"isBlockCoverage":false},{"functionName":"runNextTicks","ranges":[{"startOffset":1272,"endOffset":1468,"count":0}],"isBlockCoverage":false},{"functionName":"processTicksAndRejections","ranges":[{"startOffset":1470,"endOffset":2438,"count":0}],"isBlockCoverage":false},{"functionName":"nextTick","ranges":[{"startOffset":2582,"endOffset":3497,"count":0}],"isBlockCoverage":false},{"functionName":"runMicrotask","ranges":[{"startOffset":3499,"endOffset":3675,"count":0}],"isBlockCoverage":false},{"functionName":"queueMicrotask","ranges":[{"startOffset":3747,"endOffset":4107,"count":0}],"isBlockCoverage":false},{"functionName":"setupTaskQueue","ranges":[{"startOffset":4130,"endOffset":4387,"count":1}],"isBlockCoverage":true}]},{"scriptId":"27","url":"internal/process/promises.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9605,"count":1}],"isBlockCoverage":false},{"functionName":"setHasRejectionToWarn","ranges":[{"startOffset":1918,"endOffset":2008,"count":0}],"isBlockCoverage":false},{"functionName":"hasRejectionToWarn","ranges":[{"startOffset":2010,"endOffset":2089,"count":0}],"isBlockCoverage":false},{"functionName":"getUnhandledRejectionsMode","ranges":[{"startOffset":2091,"endOffset":2626,"count":0}],"isBlockCoverage":false},{"functionName":"promiseRejectHandler","ranges":[{"startOffset":2628,"endOffset":3197,"count":0}],"isBlockCoverage":false},{"functionName":"resolveError","ranges":[{"startOffset":3199,"endOffset":3449,"count":0}],"isBlockCoverage":false},{"functionName":"unhandledRejection","ranges":[{"startOffset":3451,"endOffset":3745,"count":0}],"isBlockCoverage":false},{"functionName":"handledRejection","ranges":[{"startOffset":3747,"endOffset":4563,"count":0}],"isBlockCoverage":false},{"functionName":"emitUnhandledRejectionWarning","ranges":[{"startOffset":4635,"endOffset":5531,"count":0}],"isBlockCoverage":false},{"functionName":"emitDeprecationWarning","ranges":[{"startOffset":5564,"endOffset":5849,"count":0}],"isBlockCoverage":false},{"functionName":"processPromiseRejections","ranges":[{"startOffset":6022,"endOffset":8506,"count":0}],"isBlockCoverage":false},{"functionName":"getErrorWithoutStack","ranges":[{"startOffset":8508,"endOffset":8926,"count":0}],"isBlockCoverage":false},{"functionName":"generateUnhandledRejectionError","ranges":[{"startOffset":8928,"endOffset":9398,"count":0}],"isBlockCoverage":false},{"functionName":"listenForRejections","ranges":[{"startOffset":9400,"endOffset":9484,"count":1}],"isBlockCoverage":true}]},{"scriptId":"28","url":"internal/fixed_queue.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4184,"count":1}],"isBlockCoverage":false},{"functionName":"FixedCircularBuffer","ranges":[{"startOffset":2959,"endOffset":3073,"count":1}],"isBlockCoverage":true},{"functionName":"isEmpty","ranges":[{"startOffset":3077,"endOffset":3129,"count":0}],"isBlockCoverage":false},{"functionName":"isFull","ranges":[{"startOffset":3133,"endOffset":3200,"count":0}],"isBlockCoverage":false},{"functionName":"push","ranges":[{"startOffset":3204,"endOffset":3291,"count":0}],"isBlockCoverage":false},{"functionName":"shift","ranges":[{"startOffset":3295,"endOffset":3510,"count":0}],"isBlockCoverage":false},{"functionName":"FixedQueue","ranges":[{"startOffset":3552,"endOffset":3626,"count":1}],"isBlockCoverage":true},{"functionName":"isEmpty","ranges":[{"startOffset":3630,"endOffset":3677,"count":0}],"isBlockCoverage":false},{"functionName":"push","ranges":[{"startOffset":3681,"endOffset":3945,"count":0}],"isBlockCoverage":false},{"functionName":"shift","ranges":[{"startOffset":3949,"endOffset":4180,"count":0}],"isBlockCoverage":false}]},{"scriptId":"29","url":"async_hooks.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9365,"count":1}],"isBlockCoverage":false},{"functionName":"AsyncHook","ranges":[{"startOffset":1416,"endOffset":2250,"count":1},{"startOffset":1544,"endOffset":1586,"count":0},{"startOffset":1616,"endOffset":1647,"count":0},{"startOffset":1655,"endOffset":1699,"count":0},{"startOffset":1728,"endOffset":1758,"count":0},{"startOffset":1766,"endOffset":1809,"count":0},{"startOffset":1840,"endOffset":1872,"count":0},{"startOffset":1880,"endOffset":1925,"count":0},{"startOffset":1963,"endOffset":2002,"count":0},{"startOffset":2010,"endOffset":2062,"count":0}],"isBlockCoverage":true},{"functionName":"enable","ranges":[{"startOffset":2254,"endOffset":3499,"count":0}],"isBlockCoverage":false},{"functionName":"disable","ranges":[{"startOffset":3503,"endOffset":4287,"count":0}],"isBlockCoverage":false},{"functionName":"createHook","ranges":[{"startOffset":4292,"endOffset":4349,"count":1}],"isBlockCoverage":true},{"functionName":"AsyncResource","ranges":[{"startOffset":4442,"endOffset":5629,"count":0}],"isBlockCoverage":false},{"functionName":"runInAsyncScope","ranges":[{"startOffset":5633,"endOffset":5949,"count":0}],"isBlockCoverage":false},{"functionName":"emitDestroy","ranges":[{"startOffset":5953,"endOffset":6128,"count":0}],"isBlockCoverage":false},{"functionName":"asyncId","ranges":[{"startOffset":6132,"endOffset":6181,"count":0}],"isBlockCoverage":false},{"functionName":"triggerAsyncId","ranges":[{"startOffset":6185,"endOffset":6249,"count":0}],"isBlockCoverage":false},{"functionName":"bind","ranges":[{"startOffset":6253,"endOffset":6755,"count":0}],"isBlockCoverage":false},{"functionName":"bind","ranges":[{"startOffset":6766,"endOffset":6885,"count":0}],"isBlockCoverage":false},{"functionName":"init","ranges":[{"startOffset":6948,"endOffset":7230,"count":0}],"isBlockCoverage":false},{"functionName":"AsyncLocalStorage","ranges":[{"startOffset":7264,"endOffset":7361,"count":0}],"isBlockCoverage":false},{"functionName":"disable","ranges":[{"startOffset":7365,"endOffset":7690,"count":0}],"isBlockCoverage":false},{"functionName":"_enable","ranges":[{"startOffset":7694,"endOffset":7840,"count":0}],"isBlockCoverage":false},{"functionName":"_propagate","ranges":[{"startOffset":7909,"endOffset":8083,"count":0}],"isBlockCoverage":false},{"functionName":"enterWith","ranges":[{"startOffset":8087,"endOffset":8219,"count":0}],"isBlockCoverage":false},{"functionName":"run","ranges":[{"startOffset":8223,"endOffset":8721,"count":0}],"isBlockCoverage":false},{"functionName":"exit","ranges":[{"startOffset":8725,"endOffset":8957,"count":0}],"isBlockCoverage":false},{"functionName":"getStore","ranges":[{"startOffset":8961,"endOffset":9100,"count":0}],"isBlockCoverage":false}]},{"scriptId":"30","url":"internal/console/global.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1939,"count":1}],"isBlockCoverage":false}]},{"scriptId":"31","url":"internal/console/constructor.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":20237,"count":1}],"isBlockCoverage":false},{"functionName":"Console","ranges":[{"startOffset":2690,"endOffset":4866,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":5075,"endOffset":5129,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":5377,"endOffset":5583,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":5786,"endOffset":6374,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":5968,"endOffset":6063,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":6075,"endOffset":6105,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6207,"endOffset":6306,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":6318,"endOffset":6348,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":6444,"endOffset":7626,"count":1}],"isBlockCoverage":true},{"functionName":"value","ranges":[{"startOffset":7696,"endOffset":9142,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":9215,"endOffset":9705,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":9776,"endOffset":9956,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":10027,"endOffset":10207,"count":0}],"isBlockCoverage":false},{"functionName":"createWriteErrorHandler","ranges":[{"startOffset":10296,"endOffset":11185,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10364,"endOffset":11182,"count":0}],"isBlockCoverage":false},{"functionName":"log","ranges":[{"startOffset":11214,"endOffset":11301,"count":0}],"isBlockCoverage":false},{"functionName":"warn","ranges":[{"startOffset":11307,"endOffset":11395,"count":0}],"isBlockCoverage":false},{"functionName":"dir","ranges":[{"startOffset":11401,"endOffset":11586,"count":0}],"isBlockCoverage":false},{"functionName":"time","ranges":[{"startOffset":11591,"endOffset":11949,"count":0}],"isBlockCoverage":false},{"functionName":"timeEnd","ranges":[{"startOffset":11954,"endOffset":12243,"count":0}],"isBlockCoverage":false},{"functionName":"timeLog","ranges":[{"startOffset":12248,"endOffset":12486,"count":0}],"isBlockCoverage":false},{"functionName":"trace","ranges":[{"startOffset":12498,"endOffset":12684,"count":0}],"isBlockCoverage":false},{"functionName":"assert","ranges":[{"startOffset":12689,"endOffset":12929,"count":0}],"isBlockCoverage":false},{"functionName":"clear","ranges":[{"startOffset":12990,"endOffset":13420,"count":0}],"isBlockCoverage":false},{"functionName":"count","ranges":[{"startOffset":13481,"endOffset":13937,"count":0}],"isBlockCoverage":false},{"functionName":"countReset","ranges":[{"startOffset":14003,"endOffset":14291,"count":0}],"isBlockCoverage":false},{"functionName":"group","ranges":[{"startOffset":14296,"endOffset":14481,"count":0}],"isBlockCoverage":false},{"functionName":"groupEnd","ranges":[{"startOffset":14486,"endOffset":14654,"count":0}],"isBlockCoverage":false},{"functionName":"table","ranges":[{"startOffset":14703,"endOffset":18138,"count":0}],"isBlockCoverage":false},{"functionName":"timeLogImpl","ranges":[{"startOffset":18179,"endOffset":18698,"count":0}],"isBlockCoverage":false},{"functionName":"pad","ranges":[{"startOffset":18700,"endOffset":18777,"count":0}],"isBlockCoverage":false},{"functionName":"formatTime","ranges":[{"startOffset":18779,"endOffset":19551,"count":0}],"isBlockCoverage":false},{"functionName":"isArray","ranges":[{"startOffset":19685,"endOffset":19741,"count":0}],"isBlockCoverage":false},{"functionName":"noop","ranges":[{"startOffset":19744,"endOffset":19762,"count":0}],"isBlockCoverage":false}]},{"scriptId":"32","url":"internal/constants.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1582,"count":1}],"isBlockCoverage":false}]},{"scriptId":"33","url":"internal/util/inspector.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2215,"count":1}],"isBlockCoverage":false},{"functionName":"sendInspectorCommand","ranges":[{"startOffset":92,"endOffset":434,"count":0}],"isBlockCoverage":false},{"functionName":"installConsoleExtensions","ranges":[{"startOffset":508,"endOffset":1062,"count":0}],"isBlockCoverage":false},{"functionName":"wrapConsole","ranges":[{"startOffset":1141,"endOffset":1931,"count":1},{"startOffset":1299,"endOffset":1929,"count":23},{"startOffset":1514,"endOffset":1807,"count":19},{"startOffset":1807,"endOffset":1925,"count":4}],"isBlockCoverage":true},{"functionName":"get consoleFromVM","ranges":[{"startOffset":2103,"endOffset":2154,"count":0}],"isBlockCoverage":false},{"functionName":"set consoleFromVM","ranges":[{"startOffset":2158,"endOffset":2211,"count":1}],"isBlockCoverage":true}]},{"scriptId":"34","url":"internal/url.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":42299,"count":1}],"isBlockCoverage":false},{"functionName":"serializeTupleOrigin","ranges":[{"startOffset":2652,"endOffset":2770,"count":0}],"isBlockCoverage":false},{"functionName":"URLContext","ranges":[{"startOffset":3174,"endOffset":3397,"count":1289}],"isBlockCoverage":true},{"functionName":"URLSearchParams","ranges":[{"startOffset":3687,"endOffset":6095,"count":1152},{"startOffset":3802,"endOffset":6033,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6099,"endOffset":7274,"count":0}],"isBlockCoverage":false},{"functionName":"onParseComplete","ranges":[{"startOffset":7278,"endOffset":7971,"count":1152},{"startOffset":7533,"endOffset":7543,"count":0},{"startOffset":7606,"endOffset":7616,"count":0},{"startOffset":7697,"endOffset":7701,"count":0}],"isBlockCoverage":true},{"functionName":"onParseError","ranges":[{"startOffset":7973,"endOffset":8048,"count":137}],"isBlockCoverage":true},{"functionName":"onParseProtocolComplete","ranges":[{"startOffset":8050,"endOffset":8395,"count":0}],"isBlockCoverage":false},{"functionName":"onParseHostnameComplete","ranges":[{"startOffset":8397,"endOffset":8743,"count":0}],"isBlockCoverage":false},{"functionName":"onParsePortComplete","ranges":[{"startOffset":8745,"endOffset":8907,"count":0}],"isBlockCoverage":false},{"functionName":"onParseHostComplete","ranges":[{"startOffset":8909,"endOffset":9231,"count":0}],"isBlockCoverage":false},{"functionName":"onParsePathComplete","ranges":[{"startOffset":9233,"endOffset":9727,"count":139},{"startOffset":9499,"endOffset":9567,"count":0}],"isBlockCoverage":true},{"functionName":"onParseSearchComplete","ranges":[{"startOffset":9729,"endOffset":9897,"count":0}],"isBlockCoverage":false},{"functionName":"onParseHashComplete","ranges":[{"startOffset":9899,"endOffset":10069,"count":0}],"isBlockCoverage":false},{"functionName":"URL","ranges":[{"startOffset":10085,"endOffset":10431,"count":1289},{"startOffset":10220,"endOffset":10272,"count":412}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10435,"endOffset":10516,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10520,"endOffset":10613,"count":2972}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10688,"endOffset":10888,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10892,"endOffset":11825,"count":0}],"isBlockCoverage":false},{"functionName":"format","ranges":[{"startOffset":11994,"endOffset":13175,"count":944},{"startOffset":12079,"endOffset":12140,"count":0},{"startOffset":12550,"endOffset":12711,"count":0},{"startOffset":12743,"endOffset":12780,"count":0},{"startOffset":12834,"endOffset":12856,"count":0},{"startOffset":12864,"endOffset":12928,"count":0},{"startOffset":13040,"endOffset":13063,"count":0},{"startOffset":13125,"endOffset":13151,"count":0}],"isBlockCoverage":true},{"functionName":"toString","ranges":[{"startOffset":13449,"endOffset":13508,"count":241}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":13574,"endOffset":13619,"count":703}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":13625,"endOffset":13823,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":13904,"endOffset":14532,"count":520},{"startOffset":14044,"endOffset":14288,"count":0},{"startOffset":14297,"endOffset":14309,"count":0},{"startOffset":14318,"endOffset":14333,"count":0},{"startOffset":14342,"endOffset":14355,"count":0},{"startOffset":14364,"endOffset":14378,"count":0},{"startOffset":14387,"endOffset":14398,"count":0},{"startOffset":14407,"endOffset":14490,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":14602,"endOffset":14650,"count":736}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":14656,"endOffset":15043,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":15113,"endOffset":15163,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":15169,"endOffset":15567,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":15637,"endOffset":15687,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":15693,"endOffset":16091,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":16157,"endOffset":16313,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":16319,"endOffset":16640,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":16710,"endOffset":16762,"count":481}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":16768,"endOffset":17067,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":17133,"endOffset":17233,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":17239,"endOffset":17586,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":17656,"endOffset":17866,"count":2833},{"startOffset":17735,"endOffset":17754,"count":0},{"startOffset":17796,"endOffset":17806,"count":0}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":17872,"endOffset":18091,"count":139},{"startOffset":17982,"endOffset":17989,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":18159,"endOffset":18298,"count":103},{"startOffset":18231,"endOffset":18246,"count":0},{"startOffset":18266,"endOffset":18297,"count":0}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":18304,"endOffset":18846,"count":103},{"startOffset":18490,"endOffset":18788,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":18933,"endOffset":18979,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":19045,"endOffset":19196,"count":103},{"startOffset":19123,"endOffset":19141,"count":0},{"startOffset":19161,"endOffset":19195,"count":0}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":19202,"endOffset":19666,"count":103},{"startOffset":19424,"endOffset":19665,"count":0}],"isBlockCoverage":true},{"functionName":"toJSON","ranges":[{"startOffset":19812,"endOffset":19869,"count":0}],"isBlockCoverage":false},{"functionName":"update","ranges":[{"startOffset":19879,"endOffset":20184,"count":0}],"isBlockCoverage":false},{"functionName":"initSearchParams","ranges":[{"startOffset":20186,"endOffset":20326,"count":1255},{"startOffset":20283,"endOffset":20325,"count":0}],"isBlockCoverage":true},{"functionName":"parseParams","ranges":[{"startOffset":20435,"endOffset":22814,"count":0}],"isBlockCoverage":false},{"functionName":"serializeParams","ranges":[{"startOffset":23794,"endOffset":24354,"count":0}],"isBlockCoverage":false},{"functionName":"defineIDLClass","ranges":[{"startOffset":24409,"endOffset":25097,"count":2},{"startOffset":24747,"endOffset":24893,"count":13},{"startOffset":24948,"endOffset":25095,"count":1}],"isBlockCoverage":true},{"functionName":"merge","ranges":[{"startOffset":25117,"endOffset":25747,"count":0}],"isBlockCoverage":false},{"functionName":"append","ranges":[{"startOffset":25814,"endOffset":26216,"count":0}],"isBlockCoverage":false},{"functionName":"delete","ranges":[{"startOffset":26221,"endOffset":26720,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":26725,"endOffset":27159,"count":0}],"isBlockCoverage":false},{"functionName":"getAll","ranges":[{"startOffset":27164,"endOffset":27632,"count":0}],"isBlockCoverage":false},{"functionName":"has","ranges":[{"startOffset":27637,"endOffset":28065,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":28070,"endOffset":29111,"count":0}],"isBlockCoverage":false},{"functionName":"sort","ranges":[{"startOffset":29116,"endOffset":30293,"count":0}],"isBlockCoverage":false},{"functionName":"entries","ranges":[{"startOffset":30456,"endOffset":30665,"count":0}],"isBlockCoverage":false},{"functionName":"forEach","ranges":[{"startOffset":30670,"endOffset":31242,"count":0}],"isBlockCoverage":false},{"functionName":"keys","ranges":[{"startOffset":31297,"endOffset":31497,"count":0}],"isBlockCoverage":false},{"functionName":"values","ranges":[{"startOffset":31502,"endOffset":31706,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":31839,"endOffset":32039,"count":0}],"isBlockCoverage":false},{"functionName":"createSearchParamsIterator","ranges":[{"startOffset":32319,"endOffset":32522,"count":0}],"isBlockCoverage":false},{"functionName":"next","ranges":[{"startOffset":32746,"endOffset":33499,"count":0}],"isBlockCoverage":false},{"functionName":"defineIDLClass","ranges":[{"startOffset":33503,"endOffset":34881,"count":0}],"isBlockCoverage":false},{"functionName":"domainToASCII","ranges":[{"startOffset":34887,"endOffset":35062,"count":0}],"isBlockCoverage":false},{"functionName":"domainToUnicode","ranges":[{"startOffset":35064,"endOffset":35243,"count":0}],"isBlockCoverage":false},{"functionName":"urlToHttpOptions","ranges":[{"startOffset":35386,"endOffset":36019,"count":0}],"isBlockCoverage":false},{"functionName":"getPathFromURLWin32","ranges":[{"startOffset":36055,"endOffset":37448,"count":0}],"isBlockCoverage":false},{"functionName":"getPathFromURLPosix","ranges":[{"startOffset":37450,"endOffset":37954,"count":481},{"startOffset":37513,"endOffset":37569,"count":0},{"startOffset":37647,"endOffset":37913,"count":31233},{"startOffset":37678,"endOffset":37909,"count":0}],"isBlockCoverage":true},{"functionName":"fileURLToPath","ranges":[{"startOffset":37956,"endOffset":38303,"count":481},{"startOffset":38023,"endOffset":38044,"count":1},{"startOffset":38044,"endOffset":38146,"count":480},{"startOffset":38082,"endOffset":38146,"count":0},{"startOffset":38184,"endOffset":38225,"count":0},{"startOffset":38245,"endOffset":38272,"count":0}],"isBlockCoverage":true},{"functionName":"encodePathChars","ranges":[{"startOffset":39063,"endOffset":39779,"count":139},{"startOffset":39150,"endOffset":39215,"count":0},{"startOffset":39337,"endOffset":39404,"count":0},{"startOffset":39456,"endOffset":39521,"count":0},{"startOffset":39573,"endOffset":39645,"count":0},{"startOffset":39697,"endOffset":39758,"count":0}],"isBlockCoverage":true},{"functionName":"pathToFileURL","ranges":[{"startOffset":39781,"endOffset":41032,"count":139},{"startOffset":39869,"endOffset":39915,"count":0},{"startOffset":39917,"endOffset":40519,"count":0},{"startOffset":40818,"endOffset":40881,"count":138},{"startOffset":40841,"endOffset":40880,"count":0},{"startOffset":40883,"endOffset":40936,"count":1},{"startOffset":40944,"endOffset":40960,"count":1}],"isBlockCoverage":true},{"functionName":"isURLInstance","ranges":[{"startOffset":41034,"endOffset":41153,"count":811},{"startOffset":41127,"endOffset":41150,"count":520}],"isBlockCoverage":true},{"functionName":"toPathIfFileURL","ranges":[{"startOffset":41155,"endOffset":41300,"count":331},{"startOffset":41238,"endOffset":41259,"count":291},{"startOffset":41259,"endOffset":41299,"count":40}],"isBlockCoverage":true},{"functionName":"constructUrl","ranges":[{"startOffset":41302,"endOffset":42002,"count":0}],"isBlockCoverage":false}]},{"scriptId":"35","url":"internal/querystring.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3315,"count":1}],"isBlockCoverage":false},{"functionName":"encodeStr","ranges":[{"startOffset":1534,"endOffset":3253,"count":0}],"isBlockCoverage":false}]},{"scriptId":"36","url":"path.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":46143,"count":1}],"isBlockCoverage":false},{"functionName":"isPathSeparator","ranges":[{"startOffset":1655,"endOffset":1759,"count":0}],"isBlockCoverage":false},{"functionName":"isPosixPathSeparator","ranges":[{"startOffset":1761,"endOffset":1838,"count":15871}],"isBlockCoverage":true},{"functionName":"isWindowsDeviceRoot","ranges":[{"startOffset":1840,"endOffset":2010,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeString","ranges":[{"startOffset":2073,"endOffset":4021,"count":253},{"startOffset":2290,"endOffset":4005,"count":15871},{"startOffset":2323,"endOffset":2365,"count":15618},{"startOffset":2365,"endOffset":2456,"count":253},{"startOffset":2414,"endOffset":2456,"count":0},{"startOffset":2456,"endOffset":2489,"count":15618},{"startOffset":2489,"endOffset":3906,"count":1969},{"startOffset":2521,"endOffset":2534,"count":1714},{"startOffset":2536,"endOffset":2561,"count":256},{"startOffset":2561,"endOffset":3863,"count":1713},{"startOffset":2583,"endOffset":3618,"count":2},{"startOffset":2639,"endOffset":2713,"count":0},{"startOffset":2714,"endOffset":2788,"count":0},{"startOffset":2942,"endOffset":3018,"count":0},{"startOffset":3299,"endOffset":3468,"count":0},{"startOffset":3478,"endOffset":3610,"count":0},{"startOffset":3618,"endOffset":3863,"count":1711},{"startOffset":3664,"endOffset":3733,"count":1458},{"startOffset":3733,"endOffset":3808,"count":253},{"startOffset":3863,"endOffset":3906,"count":1967},{"startOffset":3906,"endOffset":4001,"count":13649},{"startOffset":3934,"endOffset":3948,"count":276},{"startOffset":3950,"endOffset":3971,"count":9},{"startOffset":3971,"endOffset":4001,"count":13640}],"isBlockCoverage":true},{"functionName":"_format","ranges":[{"startOffset":4199,"endOffset":4624,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":4742,"endOffset":9520,"count":0}],"isBlockCoverage":false},{"functionName":"normalize","ranges":[{"startOffset":9586,"endOffset":12657,"count":0}],"isBlockCoverage":false},{"functionName":"isAbsolute","ranges":[{"startOffset":12724,"endOffset":13140,"count":0}],"isBlockCoverage":false},{"functionName":"join","ranges":[{"startOffset":13209,"endOffset":15355,"count":0}],"isBlockCoverage":false},{"functionName":"relative","ranges":[{"startOffset":15652,"endOffset":19419,"count":0}],"isBlockCoverage":false},{"functionName":"toNamespacedPath","ranges":[{"startOffset":19424,"endOffset":20526,"count":0}],"isBlockCoverage":false},{"functionName":"dirname","ranges":[{"startOffset":20592,"endOffset":23138,"count":0}],"isBlockCoverage":false},{"functionName":"basename","ranges":[{"startOffset":23231,"endOffset":25978,"count":0}],"isBlockCoverage":false},{"functionName":"extname","ranges":[{"startOffset":26044,"endOffset":28117,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":28339,"endOffset":33095,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":33278,"endOffset":34198,"count":253},{"startOffset":33401,"endOffset":33421,"count":513},{"startOffset":33428,"endOffset":33752,"count":261},{"startOffset":33456,"endOffset":33465,"count":260},{"startOffset":33466,"endOffset":33481,"count":1},{"startOffset":33578,"endOffset":33605,"count":0},{"startOffset":34137,"endOffset":34187,"count":0},{"startOffset":34188,"endOffset":34193,"count":0}],"isBlockCoverage":true},{"functionName":"normalize","ranges":[{"startOffset":34264,"endOffset":34877,"count":0}],"isBlockCoverage":false},{"functionName":"isAbsolute","ranges":[{"startOffset":34944,"endOffset":35100,"count":42}],"isBlockCoverage":true},{"functionName":"join","ranges":[{"startOffset":35169,"endOffset":35583,"count":0}],"isBlockCoverage":false},{"functionName":"relative","ranges":[{"startOffset":35673,"endOffset":38033,"count":0}],"isBlockCoverage":false},{"functionName":"toNamespacedPath","ranges":[{"startOffset":38038,"endOffset":38114,"count":286}],"isBlockCoverage":true},{"functionName":"dirname","ranges":[{"startOffset":38180,"endOffset":38856,"count":0}],"isBlockCoverage":false},{"functionName":"basename","ranges":[{"startOffset":38949,"endOffset":41349,"count":0}],"isBlockCoverage":false},{"functionName":"extname","ranges":[{"startOffset":41415,"endOffset":43105,"count":103},{"startOffset":41748,"endOffset":42710,"count":1133},{"startOffset":41844,"endOffset":42090,"count":103},{"startOffset":42064,"endOffset":42090,"count":0},{"startOffset":42090,"endOffset":42113,"count":1030},{"startOffset":42113,"endOffset":42270,"count":103},{"startOffset":42270,"endOffset":42300,"count":1030},{"startOffset":42300,"endOffset":42500,"count":111},{"startOffset":42416,"endOffset":42429,"count":103},{"startOffset":42429,"endOffset":42492,"count":8},{"startOffset":42500,"endOffset":42704,"count":919},{"startOffset":42527,"endOffset":42704,"count":709},{"startOffset":42949,"endOffset":42981,"count":0},{"startOffset":42982,"endOffset":43020,"count":0},{"startOffset":43023,"endOffset":43047,"count":0}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":43332,"endOffset":45804,"count":0}],"isBlockCoverage":false}]},{"scriptId":"37","url":"timers.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9334,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1810,"endOffset":1835,"count":0}],"isBlockCoverage":false},{"functionName":"unenroll","ranges":[{"startOffset":2332,"endOffset":3516,"count":0}],"isBlockCoverage":false},{"functionName":"enroll","ranges":[{"startOffset":3723,"endOffset":3976,"count":0}],"isBlockCoverage":false},{"functionName":"setTimeout","ranges":[{"startOffset":4218,"endOffset":4863,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4939,"endOffset":5073,"count":0}],"isBlockCoverage":false},{"functionName":"clearTimeout","ranges":[{"startOffset":5172,"endOffset":5538,"count":0}],"isBlockCoverage":false},{"functionName":"setInterval","ranges":[{"startOffset":5775,"endOffset":6422,"count":0}],"isBlockCoverage":false},{"functionName":"clearInterval","ranges":[{"startOffset":6519,"endOffset":6817,"count":0}],"isBlockCoverage":false},{"functionName":"Timeout.close","ranges":[{"startOffset":6845,"endOffset":6896,"count":0}],"isBlockCoverage":false},{"functionName":"Timeout.<computed>","ranges":[{"startOffset":7006,"endOffset":7167,"count":0}],"isBlockCoverage":false},{"functionName":"setImmediate","ranges":[{"startOffset":7384,"endOffset":7925,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8003,"endOffset":8139,"count":0}],"isBlockCoverage":false},{"functionName":"clearImmediate","ranges":[{"startOffset":8229,"endOffset":8695,"count":0}],"isBlockCoverage":false}]},{"scriptId":"38","url":"internal/linkedlist.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1112,"count":1}],"isBlockCoverage":false},{"functionName":"init","ranges":[{"startOffset":15,"endOffset":88,"count":0}],"isBlockCoverage":false},{"functionName":"peek","ranges":[{"startOffset":118,"endOffset":210,"count":0}],"isBlockCoverage":false},{"functionName":"remove","ranges":[{"startOffset":245,"endOffset":472,"count":0}],"isBlockCoverage":false},{"functionName":"append","ranges":[{"startOffset":528,"endOffset":980,"count":0}],"isBlockCoverage":false},{"functionName":"isEmpty","ranges":[{"startOffset":982,"endOffset":1042,"count":0}],"isBlockCoverage":false}]},{"scriptId":"39","url":"internal/timers.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":18553,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4432,"endOffset":4457,"count":0}],"isBlockCoverage":false},{"functionName":"initAsyncResource","ranges":[{"startOffset":5400,"endOffset":5678,"count":0}],"isBlockCoverage":false},{"functionName":"Timeout","ranges":[{"startOffset":5763,"endOffset":6760,"count":0}],"isBlockCoverage":false},{"functionName":"Timeout.<computed>","ranges":[{"startOffset":6873,"endOffset":7044,"count":0}],"isBlockCoverage":false},{"functionName":"Timeout.refresh","ranges":[{"startOffset":7075,"endOffset":7173,"count":0}],"isBlockCoverage":false},{"functionName":"Timeout.unref","ranges":[{"startOffset":7202,"endOffset":7330,"count":0}],"isBlockCoverage":false},{"functionName":"Timeout.ref","ranges":[{"startOffset":7357,"endOffset":7485,"count":0}],"isBlockCoverage":false},{"functionName":"Timeout.hasRef","ranges":[{"startOffset":7515,"endOffset":7552,"count":0}],"isBlockCoverage":false},{"functionName":"TimersList","ranges":[{"startOffset":7555,"endOffset":7855,"count":0}],"isBlockCoverage":false},{"functionName":"TimersList.<computed>","ranges":[{"startOffset":7971,"endOffset":8142,"count":0}],"isBlockCoverage":false},{"functionName":"ImmediateList","ranges":[{"startOffset":8200,"endOffset":8268,"count":2}],"isBlockCoverage":true},{"functionName":"ImmediateList.append","ranges":[{"startOffset":8447,"endOffset":8614,"count":0}],"isBlockCoverage":false},{"functionName":"ImmediateList.remove","ranges":[{"startOffset":8792,"endOffset":9129,"count":0}],"isBlockCoverage":false},{"functionName":"incRefCount","ranges":[{"startOffset":9132,"endOffset":9208,"count":0}],"isBlockCoverage":false},{"functionName":"decRefCount","ranges":[{"startOffset":9210,"endOffset":9287,"count":0}],"isBlockCoverage":false},{"functionName":"active","ranges":[{"startOffset":9370,"endOffset":9424,"count":0}],"isBlockCoverage":false},{"functionName":"unrefActive","ranges":[{"startOffset":9571,"endOffset":9631,"count":0}],"isBlockCoverage":false},{"functionName":"insertGuarded","ranges":[{"startOffset":9852,"endOffset":10368,"count":0}],"isBlockCoverage":false},{"functionName":"insert","ranges":[{"startOffset":10370,"endOffset":11021,"count":0}],"isBlockCoverage":false},{"functionName":"setUnrefTimeout","ranges":[{"startOffset":11023,"endOffset":11329,"count":0}],"isBlockCoverage":false},{"functionName":"getTimerDuration","ranges":[{"startOffset":11396,"endOffset":11924,"count":0}],"isBlockCoverage":false},{"functionName":"compareTimersLists","ranges":[{"startOffset":11926,"endOffset":12131,"count":0}],"isBlockCoverage":false},{"functionName":"setPosition","ranges":[{"startOffset":12133,"endOffset":12204,"count":0}],"isBlockCoverage":false},{"functionName":"getTimerCallbacks","ranges":[{"startOffset":12206,"endOffset":17321,"count":1}],"isBlockCoverage":true},{"functionName":"processImmediate","ranges":[{"startOffset":12518,"endOffset":14319,"count":0}],"isBlockCoverage":false},{"functionName":"processTimers","ranges":[{"startOffset":14324,"endOffset":14798,"count":0}],"isBlockCoverage":false},{"functionName":"listOnTimeout","ranges":[{"startOffset":14802,"endOffset":17262,"count":0}],"isBlockCoverage":false},{"functionName":"Immediate","ranges":[{"startOffset":17343,"endOffset":17665,"count":0}],"isBlockCoverage":false},{"functionName":"ref","ranges":[{"startOffset":17669,"endOffset":17842,"count":0}],"isBlockCoverage":false},{"functionName":"unref","ranges":[{"startOffset":17846,"endOffset":18022,"count":0}],"isBlockCoverage":false},{"functionName":"hasRef","ranges":[{"startOffset":18026,"endOffset":18067,"count":0}],"isBlockCoverage":false}]},{"scriptId":"40","url":"internal/priority_queue.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2754,"count":1}],"isBlockCoverage":false},{"functionName":"PriorityQueue","ranges":[{"startOffset":570,"endOffset":811,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":815,"endOffset":855,"count":0}],"isBlockCoverage":false},{"functionName":"insert","ranges":[{"startOffset":859,"endOffset":1044,"count":0}],"isBlockCoverage":false},{"functionName":"peek","ranges":[{"startOffset":1048,"endOffset":1087,"count":0}],"isBlockCoverage":false},{"functionName":"percolateDown","ranges":[{"startOffset":1091,"endOffset":1759,"count":0}],"isBlockCoverage":false},{"functionName":"percolateUp","ranges":[{"startOffset":1763,"endOffset":2254,"count":0}],"isBlockCoverage":false},{"functionName":"removeAt","ranges":[{"startOffset":2258,"endOffset":2591,"count":0}],"isBlockCoverage":false},{"functionName":"shift","ranges":[{"startOffset":2595,"endOffset":2750,"count":0}],"isBlockCoverage":false}]},{"scriptId":"41","url":"internal/util/debuglog.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2882,"count":1}],"isBlockCoverage":false},{"functionName":"initializeDebugEnv","ranges":[{"startOffset":521,"endOffset":894,"count":1},{"startOffset":612,"endOffset":811,"count":0}],"isBlockCoverage":true},{"functionName":"emitWarningIfNeeded","ranges":[{"startOffset":968,"endOffset":1293,"count":0}],"isBlockCoverage":false},{"functionName":"noop","ranges":[{"startOffset":1295,"endOffset":1313,"count":89}],"isBlockCoverage":true},{"functionName":"debuglogImpl","ranges":[{"startOffset":1315,"endOffset":1880,"count":4},{"startOffset":1390,"endOffset":1852,"count":3},{"startOffset":1409,"endOffset":1805,"count":0}],"isBlockCoverage":true},{"functionName":"debug","ranges":[{"startOffset":1498,"endOffset":1798,"count":0}],"isBlockCoverage":false},{"functionName":"debuglog","ranges":[{"startOffset":2100,"endOffset":2825,"count":9}],"isBlockCoverage":true},{"functionName":"init","ranges":[{"startOffset":2131,"endOffset":2227,"count":4}],"isBlockCoverage":true},{"functionName":"debug","ranges":[{"startOffset":2242,"endOffset":2502,"count":4}],"isBlockCoverage":true},{"functionName":"test","ranges":[{"startOffset":2532,"endOffset":2601,"count":0}],"isBlockCoverage":false},{"functionName":"logger","ranges":[{"startOffset":2620,"endOffset":2670,"count":4}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":2720,"endOffset":2754,"count":0}],"isBlockCoverage":false}]},{"scriptId":"42","url":"internal/process/execution.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6984,"count":1}],"isBlockCoverage":false},{"functionName":"tryGetCwd","ranges":[{"startOffset":566,"endOffset":896,"count":1},{"startOffset":627,"endOffset":894,"count":0}],"isBlockCoverage":true},{"functionName":"evalModule","ranges":[{"startOffset":898,"endOffset":1338,"count":0}],"isBlockCoverage":false},{"functionName":"evalScript","ranges":[{"startOffset":1340,"endOffset":2722,"count":0}],"isBlockCoverage":false},{"functionName":"setUncaughtExceptionCaptureCallback","ranges":[{"startOffset":2799,"endOffset":3493,"count":0}],"isBlockCoverage":false},{"functionName":"hasUncaughtExceptionCaptureCallback","ranges":[{"startOffset":3495,"endOffset":3596,"count":1}],"isBlockCoverage":true},{"functionName":"noop","ranges":[{"startOffset":3598,"endOffset":3616,"count":0}],"isBlockCoverage":false},{"functionName":"createOnGlobalUncaughtException","ranges":[{"startOffset":4159,"endOffset":6558,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4428,"endOffset":6555,"count":1},{"startOffset":5056,"endOffset":5248,"count":0},{"startOffset":5257,"endOffset":5265,"count":0},{"startOffset":5388,"endOffset":5409,"count":0},{"startOffset":5517,"endOffset":5567,"count":0},{"startOffset":5939,"endOffset":6008,"count":0},{"startOffset":6034,"endOffset":6554,"count":0}],"isBlockCoverage":true},{"functionName":"readStdin","ranges":[{"startOffset":6560,"endOffset":6765,"count":0}],"isBlockCoverage":false}]},{"scriptId":"43","url":"internal/process/warning.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4775,"count":1}],"isBlockCoverage":false},{"functionName":"lazyOption","ranges":[{"startOffset":362,"endOffset":916,"count":0}],"isBlockCoverage":false},{"functionName":"writeOut","ranges":[{"startOffset":1017,"endOffset":1139,"count":0}],"isBlockCoverage":false},{"functionName":"writeToFile","ranges":[{"startOffset":1141,"endOffset":1525,"count":0}],"isBlockCoverage":false},{"functionName":"doEmitWarning","ranges":[{"startOffset":1527,"endOffset":1598,"count":0}],"isBlockCoverage":false},{"functionName":"onWarning","ranges":[{"startOffset":1637,"endOffset":2786,"count":0}],"isBlockCoverage":false},{"functionName":"emitWarning","ranges":[{"startOffset":2909,"endOffset":3939,"count":0}],"isBlockCoverage":false},{"functionName":"emitWarningSync","ranges":[{"startOffset":3941,"endOffset":4035,"count":0}],"isBlockCoverage":false},{"functionName":"createWarningObject","ranges":[{"startOffset":4037,"endOffset":4704,"count":0}],"isBlockCoverage":false}]},{"scriptId":"44","url":"internal/bootstrap/switches/is_main_thread.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6397,"count":1}],"isBlockCoverage":true},{"functionName":"process._startProfilerIdleNotifier","ranges":[{"startOffset":513,"endOffset":521,"count":0}],"isBlockCoverage":false},{"functionName":"process._stopProfilerIdleNotifier","ranges":[{"startOffset":559,"endOffset":567,"count":0}],"isBlockCoverage":false},{"functionName":"defineStream","ranges":[{"startOffset":570,"endOffset":717,"count":3}],"isBlockCoverage":true},{"functionName":"createWritableStdioStream","ranges":[{"startOffset":1278,"endOffset":2845,"count":0}],"isBlockCoverage":false},{"functionName":"dummyDestroy","ranges":[{"startOffset":2847,"endOffset":3230,"count":0}],"isBlockCoverage":false},{"functionName":"getStdout","ranges":[{"startOffset":3268,"endOffset":3599,"count":0}],"isBlockCoverage":false},{"functionName":"getStderr","ranges":[{"startOffset":3601,"endOffset":3932,"count":0}],"isBlockCoverage":false},{"functionName":"getStdin","ranges":[{"startOffset":3934,"endOffset":6253,"count":0}],"isBlockCoverage":false},{"functionName":"rawMethods.resetStdioForTesting","ranges":[{"startOffset":6316,"endOffset":6395,"count":0}],"isBlockCoverage":false}]},{"scriptId":"45","url":"internal/process/signal.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1124,"count":1}],"isBlockCoverage":false},{"functionName":"isSignal","ranges":[{"startOffset":205,"endOffset":301,"count":3}],"isBlockCoverage":true},{"functionName":"startListeningIfSignal","ranges":[{"startOffset":365,"endOffset":853,"count":3},{"startOffset":426,"endOffset":451,"count":0},{"startOffset":453,"endOffset":851,"count":0}],"isBlockCoverage":true},{"functionName":"stopListeningIfSignal","ranges":[{"startOffset":855,"endOffset":1050,"count":0}],"isBlockCoverage":false}]},{"scriptId":"46","url":"internal/bootstrap/switches/does_own_process_state.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3523,"count":1}],"isBlockCoverage":true},{"functionName":"wrapPosixCredentialSetters","ranges":[{"startOffset":817,"endOffset":2957,"count":1}],"isBlockCoverage":true},{"functionName":"initgroups","ranges":[{"startOffset":1278,"endOffset":1695,"count":0}],"isBlockCoverage":false},{"functionName":"setgroups","ranges":[{"startOffset":1699,"endOffset":2179,"count":0}],"isBlockCoverage":false},{"functionName":"wrapIdSetter","ranges":[{"startOffset":2183,"endOffset":2508,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2232,"endOffset":2503,"count":0}],"isBlockCoverage":false},{"functionName":"validateId","ranges":[{"startOffset":2512,"endOffset":2730,"count":0}],"isBlockCoverage":false},{"functionName":"wrappedChdir","ranges":[{"startOffset":3108,"endOffset":3279,"count":0}],"isBlockCoverage":false},{"functionName":"wrappedUmask","ranges":[{"startOffset":3281,"endOffset":3417,"count":0}],"isBlockCoverage":false},{"functionName":"wrappedCwd","ranges":[{"startOffset":3419,"endOffset":3522,"count":3},{"startOffset":3471,"endOffset":3500,"count":1}],"isBlockCoverage":true}]},{"scriptId":"47","url":"internal/main/run_main_module.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":632,"count":1}],"isBlockCoverage":true}]},{"scriptId":"48","url":"internal/bootstrap/pre_execution.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":15462,"count":1}],"isBlockCoverage":true},{"functionName":"prepareMainThreadExecution","ranges":[{"startOffset":424,"endOffset":2212,"count":1}],"isBlockCoverage":true},{"functionName":"patchProcessObject","ranges":[{"startOffset":2214,"endOffset":3791,"count":1},{"startOffset":2810,"endOffset":2818,"count":0}],"isBlockCoverage":true},{"functionName":"addReadOnlyProcessAlias","ranges":[{"startOffset":3793,"endOffset":4050,"count":13},{"startOffset":3914,"endOffset":4048,"count":1}],"isBlockCoverage":true},{"functionName":"setupWarningHandler","ranges":[{"startOffset":4052,"endOffset":4277,"count":1}],"isBlockCoverage":true},{"functionName":"setupCoverageHooks","ranges":[{"startOffset":4389,"endOffset":5066,"count":1},{"startOffset":4859,"endOffset":5036,"count":0}],"isBlockCoverage":true},{"functionName":"setupStacktracePrinterOnSigint","ranges":[{"startOffset":5068,"endOffset":5293,"count":1},{"startOffset":5170,"endOffset":5292,"count":0}],"isBlockCoverage":true},{"functionName":"initializeReport","ranges":[{"startOffset":5295,"endOffset":5519,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":5477,"endOffset":5511,"count":0}],"isBlockCoverage":false},{"functionName":"setupDebugEnv","ranges":[{"startOffset":5521,"endOffset":5753,"count":1},{"startOffset":5672,"endOffset":5751,"count":0}],"isBlockCoverage":true},{"functionName":"initializeReportSignalHandlers","ranges":[{"startOffset":5815,"endOffset":5950,"count":1}],"isBlockCoverage":true},{"functionName":"initializeHeapSnapshotSignalHandlers","ranges":[{"startOffset":5952,"endOffset":6259,"count":1},{"startOffset":6087,"endOffset":6258,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6219,"endOffset":6255,"count":0}],"isBlockCoverage":false},{"functionName":"setupTraceCategoryState","ranges":[{"startOffset":6261,"endOffset":6520,"count":1}],"isBlockCoverage":true},{"functionName":"setupInspectorHooks","ranges":[{"startOffset":6522,"endOffset":7103,"count":1}],"isBlockCoverage":true},{"functionName":"initializeDeprecations","ranges":[{"startOffset":7298,"endOffset":9828,"count":1},{"startOffset":8010,"endOffset":8312,"count":16},{"startOffset":8055,"endOffset":8287,"count":0},{"startOffset":8629,"endOffset":8802,"count":0},{"startOffset":8830,"endOffset":9224,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":9477,"endOffset":9513,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":9519,"endOffset":9561,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":9691,"endOffset":9726,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":9732,"endOffset":9773,"count":0}],"isBlockCoverage":false},{"functionName":"initializeAbortController","ranges":[{"startOffset":9830,"endOffset":10402,"count":1},{"startOffset":9968,"endOffset":10400,"count":0}],"isBlockCoverage":true},{"functionName":"setupChildProcessIpcChannel","ranges":[{"startOffset":10404,"endOffset":10969,"count":1},{"startOffset":10480,"endOffset":10967,"count":0}],"isBlockCoverage":true},{"functionName":"initializeClusterIPC","ranges":[{"startOffset":10971,"endOffset":11241,"count":1},{"startOffset":11058,"endOffset":11239,"count":0}],"isBlockCoverage":true},{"functionName":"initializePolicy","ranges":[{"startOffset":11243,"endOffset":13067,"count":1},{"startOffset":11369,"endOffset":13065,"count":0}],"isBlockCoverage":true},{"functionName":"initializeWASI","ranges":[{"startOffset":13069,"endOffset":13298,"count":1}],"isBlockCoverage":true},{"functionName":"initializeCJSLoader","ranges":[{"startOffset":13300,"endOffset":13586,"count":1}],"isBlockCoverage":true},{"functionName":"initializeESMLoader","ranges":[{"startOffset":13588,"endOffset":14256,"count":1},{"startOffset":13797,"endOffset":13804,"count":0}],"isBlockCoverage":true},{"functionName":"initializeSourceMapsHandlers","ranges":[{"startOffset":14258,"endOffset":14444,"count":1}],"isBlockCoverage":true},{"functionName":"initializeFrozenIntrinsics","ranges":[{"startOffset":14446,"endOffset":14703,"count":1},{"startOffset":14531,"endOffset":14701,"count":0}],"isBlockCoverage":true},{"functionName":"loadPreloadModules","ranges":[{"startOffset":14705,"endOffset":15052,"count":1},{"startOffset":14899,"endOffset":15050,"count":0}],"isBlockCoverage":true}]},{"scriptId":"49","url":"internal/options.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1612,"count":1}],"isBlockCoverage":false},{"functionName":"getOptionsFromBinding","ranges":[{"startOffset":409,"endOffset":537,"count":155},{"startOffset":463,"endOffset":514,"count":1}],"isBlockCoverage":true},{"functionName":"getAliasesFromBinding","ranges":[{"startOffset":539,"endOffset":667,"count":0}],"isBlockCoverage":false},{"functionName":"getOptionValue","ranges":[{"startOffset":669,"endOffset":932,"count":155},{"startOffset":788,"endOffset":889,"count":4},{"startOffset":889,"endOffset":931,"count":151}],"isBlockCoverage":true},{"functionName":"getAllowUnauthorized","ranges":[{"startOffset":934,"endOffset":1399,"count":0}],"isBlockCoverage":false},{"functionName":"get options","ranges":[{"startOffset":1422,"endOffset":1477,"count":0}],"isBlockCoverage":false},{"functionName":"get aliases","ranges":[{"startOffset":1481,"endOffset":1536,"count":0}],"isBlockCoverage":false}]},{"scriptId":"50","url":"internal/inspector_async_hook.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1972,"count":1}],"isBlockCoverage":false},{"functionName":"lazyHookCreation","ranges":[{"startOffset":75,"endOffset":1257,"count":0}],"isBlockCoverage":false},{"functionName":"enable","ranges":[{"startOffset":1259,"endOffset":1840,"count":0}],"isBlockCoverage":false},{"functionName":"disable","ranges":[{"startOffset":1842,"endOffset":1928,"count":0}],"isBlockCoverage":false}]},{"scriptId":"51","url":"internal/source_map/source_map_cache.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7654,"count":1}],"isBlockCoverage":false},{"functionName":"ObjectGetValueSafe","ranges":[{"startOffset":254,"endOffset":432,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":614,"endOffset":639,"count":1}],"isBlockCoverage":true},{"functionName":"getSourceMapsEnabled","ranges":[{"startOffset":1389,"endOffset":1563,"count":41},{"startOffset":1462,"endOffset":1533,"count":1}],"isBlockCoverage":true},{"functionName":"setSourceMapsEnabled","ranges":[{"startOffset":1565,"endOffset":2209,"count":1},{"startOffset":1776,"endOffset":1930,"count":0},{"startOffset":1973,"endOffset":2179,"count":0}],"isBlockCoverage":true},{"functionName":"maybeCacheSourceMap","ranges":[{"startOffset":2211,"endOffset":3273,"count":40},{"startOffset":2369,"endOffset":2389,"count":0},{"startOffset":2392,"endOffset":2399,"count":0},{"startOffset":2459,"endOffset":2597,"count":0},{"startOffset":2728,"endOffset":3271,"count":1},{"startOffset":2829,"endOffset":2860,"count":0},{"startOffset":2889,"endOffset":3042,"count":0}],"isBlockCoverage":true},{"functionName":"dataFromUrl","ranges":[{"startOffset":3275,"endOffset":3801,"count":1},{"startOffset":3412,"endOffset":3487,"count":0},{"startOffset":3494,"endOffset":3574,"count":0}],"isBlockCoverage":true},{"functionName":"lineLengths","ranges":[{"startOffset":3991,"endOffset":4330,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4287,"endOffset":4326,"count":9878}],"isBlockCoverage":true},{"functionName":"sourceMapFromFile","ranges":[{"startOffset":4332,"endOffset":4588,"count":1},{"startOffset":4530,"endOffset":4586,"count":0}],"isBlockCoverage":true},{"functionName":"sourceMapFromDataUrl","ranges":[{"startOffset":4682,"endOffset":5359,"count":0}],"isBlockCoverage":false},{"functionName":"sourcesToAbsolute","ranges":[{"startOffset":5544,"endOffset":5871,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5622,"endOffset":5728,"count":41}],"isBlockCoverage":true},{"functionName":"sourceMapCacheToObject","ranges":[{"startOffset":6309,"endOffset":6556,"count":0}],"isBlockCoverage":false},{"functionName":"appendCJSCache","ranges":[{"startOffset":6558,"endOffset":6847,"count":0}],"isBlockCoverage":false},{"functionName":"findSourceMap","ranges":[{"startOffset":6849,"endOffset":7516,"count":0}],"isBlockCoverage":false}]},{"scriptId":"52","url":"fs.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":59652,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3627,"endOffset":3787,"count":0}],"isBlockCoverage":false},{"functionName":"showTruncateDeprecation","ranges":[{"startOffset":4022,"endOffset":4309,"count":0}],"isBlockCoverage":false},{"functionName":"maybeCallback","ranges":[{"startOffset":4311,"endOffset":4427,"count":0}],"isBlockCoverage":false},{"functionName":"makeCallback","ranges":[{"startOffset":4630,"endOffset":4773,"count":0}],"isBlockCoverage":false},{"functionName":"makeStatsCallback","ranges":[{"startOffset":4954,"endOffset":5169,"count":0}],"isBlockCoverage":false},{"functionName":"isFileType","ranges":[{"startOffset":5195,"endOffset":5455,"count":503},{"startOffset":5394,"endOffset":5414,"count":54}],"isBlockCoverage":true},{"functionName":"access","ranges":[{"startOffset":5457,"endOffset":5815,"count":0}],"isBlockCoverage":false},{"functionName":"accessSync","ranges":[{"startOffset":5817,"endOffset":6055,"count":0}],"isBlockCoverage":false},{"functionName":"exists","ranges":[{"startOffset":6057,"endOffset":6295,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":6368,"endOffset":6446,"count":0}],"isBlockCoverage":false},{"functionName":"existsSync","ranges":[{"startOffset":6863,"endOffset":7393,"count":0}],"isBlockCoverage":false},{"functionName":"readFileAfterOpen","ranges":[{"startOffset":7395,"endOffset":7675,"count":0}],"isBlockCoverage":false},{"functionName":"readFileAfterStat","ranges":[{"startOffset":7677,"endOffset":8178,"count":0}],"isBlockCoverage":false},{"functionName":"readFile","ranges":[{"startOffset":8180,"endOffset":9196,"count":0}],"isBlockCoverage":false},{"functionName":"tryStatSync","ranges":[{"startOffset":9198,"endOffset":9428,"count":1},{"startOffset":9341,"endOffset":9353,"count":0},{"startOffset":9355,"endOffset":9410,"count":0}],"isBlockCoverage":true},{"functionName":"tryCreateBuffer","ranges":[{"startOffset":9430,"endOffset":9741,"count":1},{"startOffset":9548,"endOffset":9600,"count":0},{"startOffset":9687,"endOffset":9699,"count":0},{"startOffset":9701,"endOffset":9718,"count":0}],"isBlockCoverage":true},{"functionName":"tryReadSync","ranges":[{"startOffset":9743,"endOffset":9998,"count":1},{"startOffset":9941,"endOffset":9953,"count":0},{"startOffset":9955,"endOffset":9972,"count":0}],"isBlockCoverage":true},{"functionName":"readFileSync","ranges":[{"startOffset":10000,"endOffset":11383,"count":1},{"startOffset":10169,"endOffset":10175,"count":0},{"startOffset":10315,"endOffset":10318,"count":0},{"startOffset":10448,"endOffset":10471,"count":0},{"startOffset":10723,"endOffset":11077,"count":0},{"startOffset":11137,"endOffset":11233,"count":0},{"startOffset":11255,"endOffset":11295,"count":0}],"isBlockCoverage":true},{"functionName":"defaultCloseCallback","ranges":[{"startOffset":11385,"endOffset":11453,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":11455,"endOffset":11711,"count":0}],"isBlockCoverage":false},{"functionName":"closeSync","ranges":[{"startOffset":11713,"endOffset":11856,"count":1}],"isBlockCoverage":true},{"functionName":"open","ranges":[{"startOffset":11858,"endOffset":12435,"count":0}],"isBlockCoverage":false},{"functionName":"openSync","ranges":[{"startOffset":12438,"endOffset":12834,"count":1}],"isBlockCoverage":true},{"functionName":"read","ranges":[{"startOffset":12941,"endOffset":14475,"count":0}],"isBlockCoverage":false},{"functionName":"readSync","ranges":[{"startOffset":14744,"endOffset":15695,"count":1},{"startOffset":14889,"endOffset":15042,"count":0},{"startOffset":15066,"endOffset":15087,"count":0},{"startOffset":15178,"endOffset":15197,"count":0},{"startOffset":15230,"endOffset":15360,"count":0}],"isBlockCoverage":true},{"functionName":"readv","ranges":[{"startOffset":15697,"endOffset":16127,"count":0}],"isBlockCoverage":false},{"functionName":"readvSync","ranges":[{"startOffset":16270,"endOffset":16580,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":16726,"endOffset":18001,"count":0}],"isBlockCoverage":false},{"functionName":"writeSync","ranges":[{"startOffset":18278,"endOffset":19156,"count":0}],"isBlockCoverage":false},{"functionName":"writev","ranges":[{"startOffset":19217,"endOffset":19645,"count":0}],"isBlockCoverage":false},{"functionName":"writevSync","ranges":[{"startOffset":19774,"endOffset":20087,"count":0}],"isBlockCoverage":false},{"functionName":"rename","ranges":[{"startOffset":20089,"endOffset":20470,"count":0}],"isBlockCoverage":false},{"functionName":"renameSync","ranges":[{"startOffset":20472,"endOffset":20819,"count":0}],"isBlockCoverage":false},{"functionName":"truncate","ranges":[{"startOffset":20821,"endOffset":21464,"count":0}],"isBlockCoverage":false},{"functionName":"truncateSync","ranges":[{"startOffset":21466,"endOffset":21869,"count":0}],"isBlockCoverage":false},{"functionName":"ftruncate","ranges":[{"startOffset":21871,"endOffset":22211,"count":0}],"isBlockCoverage":false},{"functionName":"ftruncateSync","ranges":[{"startOffset":22213,"endOffset":22433,"count":0}],"isBlockCoverage":false},{"functionName":"lazyLoadRimraf","ranges":[{"startOffset":22436,"endOffset":22555,"count":0}],"isBlockCoverage":false},{"functionName":"rmdir","ranges":[{"startOffset":22557,"endOffset":23197,"count":0}],"isBlockCoverage":false},{"functionName":"rmdirSync","ranges":[{"startOffset":23199,"endOffset":23637,"count":0}],"isBlockCoverage":false},{"functionName":"rm","ranges":[{"startOffset":23639,"endOffset":23977,"count":0}],"isBlockCoverage":false},{"functionName":"rmSync","ranges":[{"startOffset":23979,"endOffset":24149,"count":0}],"isBlockCoverage":false},{"functionName":"fdatasync","ranges":[{"startOffset":24151,"endOffset":24325,"count":0}],"isBlockCoverage":false},{"functionName":"fdatasyncSync","ranges":[{"startOffset":24327,"endOffset":24477,"count":0}],"isBlockCoverage":false},{"functionName":"fsync","ranges":[{"startOffset":24479,"endOffset":24645,"count":0}],"isBlockCoverage":false},{"functionName":"fsyncSync","ranges":[{"startOffset":24647,"endOffset":24789,"count":0}],"isBlockCoverage":false},{"functionName":"mkdir","ranges":[{"startOffset":24791,"endOffset":25572,"count":0}],"isBlockCoverage":false},{"functionName":"mkdirSync","ranges":[{"startOffset":25574,"endOffset":26346,"count":0}],"isBlockCoverage":false},{"functionName":"readdir","ranges":[{"startOffset":26348,"endOffset":26929,"count":0}],"isBlockCoverage":false},{"functionName":"readdirSync","ranges":[{"startOffset":26931,"endOffset":27357,"count":0}],"isBlockCoverage":false},{"functionName":"fstat","ranges":[{"startOffset":27359,"endOffset":27698,"count":0}],"isBlockCoverage":false},{"functionName":"lstat","ranges":[{"startOffset":27700,"endOffset":28075,"count":0}],"isBlockCoverage":false},{"functionName":"stat","ranges":[{"startOffset":28077,"endOffset":28450,"count":0}],"isBlockCoverage":false},{"functionName":"hasNoEntryError","ranges":[{"startOffset":28452,"endOffset":28674,"count":185},{"startOffset":28501,"endOffset":28591,"count":51},{"startOffset":28591,"endOffset":28610,"count":134},{"startOffset":28610,"endOffset":28655,"count":0},{"startOffset":28655,"endOffset":28673,"count":134}],"isBlockCoverage":true},{"functionName":"fstatSync","ranges":[{"startOffset":28676,"endOffset":28940,"count":0}],"isBlockCoverage":false},{"functionName":"lstatSync","ranges":[{"startOffset":28942,"endOffset":29366,"count":0}],"isBlockCoverage":false},{"functionName":"statSync","ranges":[{"startOffset":29368,"endOffset":29789,"count":185},{"startOffset":29692,"endOffset":29719,"count":51},{"startOffset":29719,"endOffset":29788,"count":134}],"isBlockCoverage":true},{"functionName":"readlink","ranges":[{"startOffset":29791,"endOffset":30139,"count":0}],"isBlockCoverage":false},{"functionName":"readlinkSync","ranges":[{"startOffset":30141,"endOffset":30472,"count":0}],"isBlockCoverage":false},{"functionName":"symlink","ranges":[{"startOffset":30474,"endOffset":32084,"count":0}],"isBlockCoverage":false},{"functionName":"symlinkSync","ranges":[{"startOffset":32086,"endOffset":32743,"count":0}],"isBlockCoverage":false},{"functionName":"link","ranges":[{"startOffset":32745,"endOffset":33146,"count":0}],"isBlockCoverage":false},{"functionName":"linkSync","ranges":[{"startOffset":33148,"endOffset":33597,"count":0}],"isBlockCoverage":false},{"functionName":"unlink","ranges":[{"startOffset":33599,"endOffset":33826,"count":0}],"isBlockCoverage":false},{"functionName":"unlinkSync","ranges":[{"startOffset":33828,"endOffset":34014,"count":0}],"isBlockCoverage":false},{"functionName":"fchmod","ranges":[{"startOffset":34016,"endOffset":34258,"count":0}],"isBlockCoverage":false},{"functionName":"fchmodSync","ranges":[{"startOffset":34260,"endOffset":34454,"count":0}],"isBlockCoverage":false},{"functionName":"lchmod","ranges":[{"startOffset":34456,"endOffset":34893,"count":0}],"isBlockCoverage":false},{"functionName":"lchmodSync","ranges":[{"startOffset":34895,"endOffset":35217,"count":0}],"isBlockCoverage":false},{"functionName":"chmod","ranges":[{"startOffset":35220,"endOffset":35496,"count":0}],"isBlockCoverage":false},{"functionName":"chmodSync","ranges":[{"startOffset":35498,"endOffset":35733,"count":0}],"isBlockCoverage":false},{"functionName":"lchown","ranges":[{"startOffset":35735,"endOffset":36076,"count":0}],"isBlockCoverage":false},{"functionName":"lchownSync","ranges":[{"startOffset":36078,"endOffset":36378,"count":0}],"isBlockCoverage":false},{"functionName":"fchown","ranges":[{"startOffset":36380,"endOffset":36686,"count":0}],"isBlockCoverage":false},{"functionName":"fchownSync","ranges":[{"startOffset":36688,"endOffset":36947,"count":0}],"isBlockCoverage":false},{"functionName":"chown","ranges":[{"startOffset":36949,"endOffset":37289,"count":0}],"isBlockCoverage":false},{"functionName":"chownSync","ranges":[{"startOffset":37291,"endOffset":37589,"count":0}],"isBlockCoverage":false},{"functionName":"utimes","ranges":[{"startOffset":37591,"endOffset":37932,"count":0}],"isBlockCoverage":false},{"functionName":"utimesSync","ranges":[{"startOffset":37934,"endOffset":38216,"count":0}],"isBlockCoverage":false},{"functionName":"futimes","ranges":[{"startOffset":38218,"endOffset":38526,"count":0}],"isBlockCoverage":false},{"functionName":"futimesSync","ranges":[{"startOffset":38528,"endOffset":38788,"count":0}],"isBlockCoverage":false},{"functionName":"lutimes","ranges":[{"startOffset":38790,"endOffset":39136,"count":0}],"isBlockCoverage":false},{"functionName":"lutimesSync","ranges":[{"startOffset":39138,"endOffset":39442,"count":0}],"isBlockCoverage":false},{"functionName":"writeAll","ranges":[{"startOffset":39444,"endOffset":40388,"count":0}],"isBlockCoverage":false},{"functionName":"writeFile","ranges":[{"startOffset":40390,"endOffset":41329,"count":0}],"isBlockCoverage":false},{"functionName":"writeFileSync","ranges":[{"startOffset":41331,"endOffset":42041,"count":0}],"isBlockCoverage":false},{"functionName":"appendFile","ranges":[{"startOffset":42043,"endOffset":42483,"count":0}],"isBlockCoverage":false},{"functionName":"appendFileSync","ranges":[{"startOffset":42485,"endOffset":42864,"count":0}],"isBlockCoverage":false},{"functionName":"watch","ranges":[{"startOffset":42866,"endOffset":44099,"count":0}],"isBlockCoverage":false},{"functionName":"watchFile","ranges":[{"startOffset":44135,"endOffset":45248,"count":0}],"isBlockCoverage":false},{"functionName":"unwatchFile","ranges":[{"startOffset":45250,"endOffset":45938,"count":0}],"isBlockCoverage":false},{"functionName":"splitRoot","ranges":[{"startOffset":46154,"endOffset":46220,"count":0}],"isBlockCoverage":false},{"functionName":"splitRoot","ranges":[{"startOffset":46245,"endOffset":46423,"count":41},{"startOffset":46312,"endOffset":46403,"count":82},{"startOffset":46374,"endOffset":46397,"count":41},{"startOffset":46403,"endOffset":46422,"count":0}],"isBlockCoverage":true},{"functionName":"encodeRealpathResult","ranges":[{"startOffset":46428,"endOffset":46715,"count":41},{"startOffset":46513,"endOffset":46543,"count":0},{"startOffset":46563,"endOffset":46714,"count":0}],"isBlockCoverage":true},{"functionName":"nextPart","ranges":[{"startOffset":46838,"endOffset":47081,"count":0}],"isBlockCoverage":false},{"functionName":"nextPart","ranges":[{"startOffset":47105,"endOffset":47158,"count":278}],"isBlockCoverage":true},{"functionName":"realpathSync","ranges":[{"startOffset":47200,"endOffset":51066,"count":105},{"startOffset":47334,"endOffset":47352,"count":0},{"startOffset":47521,"endOffset":47556,"count":64},{"startOffset":47556,"endOffset":48128,"count":41},{"startOffset":48128,"endOffset":48303,"count":0},{"startOffset":48303,"endOffset":48440,"count":41},{"startOffset":48440,"endOffset":50983,"count":278},{"startOffset":48552,"endOffset":48667,"count":41},{"startOffset":48667,"endOffset":48793,"count":237},{"startOffset":48916,"endOffset":49053,"count":224},{"startOffset":49007,"endOffset":49031,"count":0},{"startOffset":49053,"endOffset":49133,"count":54},{"startOffset":49164,"endOffset":49213,"count":0},{"startOffset":49213,"endOffset":50497,"count":54},{"startOffset":49666,"endOffset":50491,"count":0},{"startOffset":50497,"endOffset":50792,"count":0},{"startOffset":50794,"endOffset":50979,"count":0},{"startOffset":50983,"endOffset":51065,"count":41}],"isBlockCoverage":true},{"functionName":"realpathSync.native","ranges":[{"startOffset":51091,"endOffset":51330,"count":0}],"isBlockCoverage":false},{"functionName":"realpath","ranges":[{"startOffset":51334,"endOffset":54769,"count":0}],"isBlockCoverage":false},{"functionName":"realpath.native","ranges":[{"startOffset":54790,"endOffset":55060,"count":0}],"isBlockCoverage":false},{"functionName":"mkdtemp","ranges":[{"startOffset":55063,"endOffset":55456,"count":0}],"isBlockCoverage":false},{"functionName":"mkdtempSync","ranges":[{"startOffset":55459,"endOffset":55855,"count":0}],"isBlockCoverage":false},{"functionName":"copyFile","ranges":[{"startOffset":55858,"endOffset":56412,"count":0}],"isBlockCoverage":false},{"functionName":"copyFileSync","ranges":[{"startOffset":56415,"endOffset":56787,"count":0}],"isBlockCoverage":false},{"functionName":"lazyLoadStreams","ranges":[{"startOffset":56789,"endOffset":56980,"count":0}],"isBlockCoverage":false},{"functionName":"createReadStream","ranges":[{"startOffset":56982,"endOffset":57087,"count":0}],"isBlockCoverage":false},{"functionName":"createWriteStream","ranges":[{"startOffset":57089,"endOffset":57196,"count":0}],"isBlockCoverage":false},{"functionName":"get ReadStream","ranges":[{"startOffset":58419,"endOffset":58487,"count":0}],"isBlockCoverage":false},{"functionName":"set ReadStream","ranges":[{"startOffset":58492,"endOffset":58539,"count":0}],"isBlockCoverage":false},{"functionName":"get WriteStream","ranges":[{"startOffset":58544,"endOffset":58614,"count":0}],"isBlockCoverage":false},{"functionName":"set WriteStream","ranges":[{"startOffset":58619,"endOffset":58668,"count":0}],"isBlockCoverage":false},{"functionName":"get FileReadStream","ranges":[{"startOffset":58806,"endOffset":58882,"count":0}],"isBlockCoverage":false},{"functionName":"set FileReadStream","ranges":[{"startOffset":58887,"endOffset":58942,"count":0}],"isBlockCoverage":false},{"functionName":"get FileWriteStream","ranges":[{"startOffset":58947,"endOffset":59025,"count":0}],"isBlockCoverage":false},{"functionName":"set FileWriteStream","ranges":[{"startOffset":59030,"endOffset":59087,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":59518,"endOffset":59643,"count":0}],"isBlockCoverage":false}]},{"scriptId":"53","url":"internal/fs/utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":23710,"count":1}],"isBlockCoverage":false},{"functionName":"lazyLoadFs","ranges":[{"startOffset":3260,"endOffset":3339,"count":0}],"isBlockCoverage":false},{"functionName":"assertEncoding","ranges":[{"startOffset":3341,"endOffset":3488,"count":106},{"startOffset":3392,"endOffset":3423,"count":1},{"startOffset":3425,"endOffset":3486,"count":0}],"isBlockCoverage":true},{"functionName":"Dirent","ranges":[{"startOffset":3507,"endOffset":3582,"count":0}],"isBlockCoverage":false},{"functionName":"isDirectory","ranges":[{"startOffset":3586,"endOffset":3647,"count":0}],"isBlockCoverage":false},{"functionName":"isFile","ranges":[{"startOffset":3651,"endOffset":3708,"count":0}],"isBlockCoverage":false},{"functionName":"isBlockDevice","ranges":[{"startOffset":3712,"endOffset":3777,"count":0}],"isBlockCoverage":false},{"functionName":"isCharacterDevice","ranges":[{"startOffset":3781,"endOffset":3849,"count":0}],"isBlockCoverage":false},{"functionName":"isSymbolicLink","ranges":[{"startOffset":3853,"endOffset":3918,"count":0}],"isBlockCoverage":false},{"functionName":"isFIFO","ranges":[{"startOffset":3922,"endOffset":3979,"count":0}],"isBlockCoverage":false},{"functionName":"isSocket","ranges":[{"startOffset":3983,"endOffset":4044,"count":0}],"isBlockCoverage":false},{"functionName":"DirentFromStats","ranges":[{"startOffset":4089,"endOffset":4168,"count":0}],"isBlockCoverage":false},{"functionName":"DirentFromStats.<computed>","ranges":[{"startOffset":4313,"endOffset":4362,"count":0}],"isBlockCoverage":false},{"functionName":"copyObject","ranges":[{"startOffset":4367,"endOffset":4495,"count":0}],"isBlockCoverage":false},{"functionName":"join","ranges":[{"startOffset":4545,"endOffset":5152,"count":0}],"isBlockCoverage":false},{"functionName":"getDirents","ranges":[{"startOffset":5154,"endOffset":6249,"count":0}],"isBlockCoverage":false},{"functionName":"getDirent","ranges":[{"startOffset":6251,"endOffset":6973,"count":0}],"isBlockCoverage":false},{"functionName":"getOptions","ranges":[{"startOffset":6975,"endOffset":7617,"count":146},{"startOffset":7070,"endOffset":7108,"count":106},{"startOffset":7110,"endOffset":7142,"count":40},{"startOffset":7142,"endOffset":7179,"count":106},{"startOffset":7179,"endOffset":7297,"count":1},{"startOffset":7297,"endOffset":7419,"count":105},{"startOffset":7336,"endOffset":7419,"count":0},{"startOffset":7419,"endOffset":7533,"count":106},{"startOffset":7533,"endOffset":7597,"count":0},{"startOffset":7597,"endOffset":7616,"count":106}],"isBlockCoverage":true},{"functionName":"handleErrorFromBinding","ranges":[{"startOffset":7619,"endOffset":8148,"count":191},{"startOffset":7689,"endOffset":7824,"count":0},{"startOffset":7856,"endOffset":8146,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8289,"endOffset":8842,"count":331},{"startOffset":8519,"endOffset":8539,"count":0},{"startOffset":8593,"endOffset":8641,"count":0},{"startOffset":8660,"endOffset":8841,"count":0}],"isBlockCoverage":true},{"functionName":"preprocessSymlinkDestination","ranges":[{"startOffset":8846,"endOffset":9530,"count":0}],"isBlockCoverage":false},{"functionName":"StatsBase","ranges":[{"startOffset":9563,"endOffset":9870,"count":185}],"isBlockCoverage":true},{"functionName":"StatsBase.isDirectory","ranges":[{"startOffset":9906,"endOffset":9963,"count":185}],"isBlockCoverage":true},{"functionName":"StatsBase.isFile","ranges":[{"startOffset":9995,"endOffset":10052,"count":103}],"isBlockCoverage":true},{"functionName":"StatsBase.isBlockDevice","ranges":[{"startOffset":10091,"endOffset":10148,"count":0}],"isBlockCoverage":false},{"functionName":"StatsBase.isCharacterDevice","ranges":[{"startOffset":10191,"endOffset":10248,"count":0}],"isBlockCoverage":false},{"functionName":"StatsBase.isSymbolicLink","ranges":[{"startOffset":10288,"endOffset":10345,"count":0}],"isBlockCoverage":false},{"functionName":"StatsBase.isFIFO","ranges":[{"startOffset":10377,"endOffset":10434,"count":0}],"isBlockCoverage":false},{"functionName":"StatsBase.isSocket","ranges":[{"startOffset":10468,"endOffset":10526,"count":0}],"isBlockCoverage":false},{"functionName":"msFromTimeSpec","ranges":[{"startOffset":10651,"endOffset":10733,"count":536}],"isBlockCoverage":true},{"functionName":"nsFromTimeSpecBigInt","ranges":[{"startOffset":10735,"endOffset":10818,"count":0}],"isBlockCoverage":false},{"functionName":"dateFromMs","ranges":[{"startOffset":11167,"endOffset":11231,"count":740}],"isBlockCoverage":true},{"functionName":"BigIntStats","ranges":[{"startOffset":11233,"endOffset":11969,"count":0}],"isBlockCoverage":false},{"functionName":"BigIntStats._checkModeProperty","ranges":[{"startOffset":12127,"endOffset":12373,"count":0}],"isBlockCoverage":false},{"functionName":"Stats","ranges":[{"startOffset":12376,"endOffset":12893,"count":185}],"isBlockCoverage":true},{"functionName":"Stats._checkModeProperty","ranges":[{"startOffset":13234,"endOffset":13464,"count":288},{"startOffset":13271,"endOffset":13349,"count":0},{"startOffset":13351,"endOffset":13418,"count":0}],"isBlockCoverage":true},{"functionName":"getStatsFromBinding","ranges":[{"startOffset":13467,"endOffset":14545,"count":134},{"startOffset":13548,"endOffset":14073,"count":0}],"isBlockCoverage":true},{"functionName":"stringToFlags","ranges":[{"startOffset":14547,"endOffset":15755,"count":41},{"startOffset":14612,"endOffset":14635,"count":0},{"startOffset":14658,"endOffset":14684,"count":0},{"startOffset":14741,"endOffset":14752,"count":0},{"startOffset":14774,"endOffset":14811,"count":0},{"startOffset":14816,"endOffset":14842,"count":0},{"startOffset":14847,"endOffset":14859,"count":0},{"startOffset":14881,"endOffset":14917,"count":0},{"startOffset":14923,"endOffset":14970,"count":0},{"startOffset":14975,"endOffset":14986,"count":0},{"startOffset":15008,"endOffset":15065,"count":0},{"startOffset":15071,"endOffset":15117,"count":0},{"startOffset":15122,"endOffset":15133,"count":0},{"startOffset":15155,"endOffset":15210,"count":0},{"startOffset":15216,"endOffset":15264,"count":0},{"startOffset":15269,"endOffset":15280,"count":0},{"startOffset":15302,"endOffset":15360,"count":0},{"startOffset":15365,"endOffset":15376,"count":0},{"startOffset":15398,"endOffset":15456,"count":0},{"startOffset":15462,"endOffset":15509,"count":0},{"startOffset":15514,"endOffset":15525,"count":0},{"startOffset":15547,"endOffset":15603,"count":0},{"startOffset":15608,"endOffset":15619,"count":0},{"startOffset":15641,"endOffset":15697,"count":0},{"startOffset":15701,"endOffset":15754,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15801,"endOffset":16161,"count":0}],"isBlockCoverage":false},{"functionName":"toUnixTimestamp","ranges":[{"startOffset":16223,"endOffset":16666,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16720,"endOffset":17099,"count":1},{"startOffset":16776,"endOffset":16843,"count":0},{"startOffset":16864,"endOffset":16931,"count":0},{"startOffset":16972,"endOffset":17095,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":17157,"endOffset":17561,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":17603,"endOffset":17873,"count":331},{"startOffset":17665,"endOffset":17687,"count":0},{"startOffset":17689,"endOffset":17775,"count":0},{"startOffset":17851,"endOffset":17871,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":17918,"endOffset":18053,"count":226}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":18101,"endOffset":18432,"count":0}],"isBlockCoverage":false},{"functionName":"warnOnNonPortableTemplate","ranges":[{"startOffset":18473,"endOffset":18931,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":19167,"endOffset":19787,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":19837,"endOffset":20419,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":20471,"endOffset":20953,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":20994,"endOffset":21571,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":21634,"endOffset":22006,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":22080,"endOffset":22279,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":22324,"endOffset":22882,"count":1},{"startOffset":22430,"endOffset":22880,"count":0}],"isBlockCoverage":true}]},{"scriptId":"54","url":"internal/fs/dir.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6714,"count":1}],"isBlockCoverage":false},{"functionName":"Dir","ranges":[{"startOffset":1109,"endOffset":1881,"count":0}],"isBlockCoverage":false},{"functionName":"get path","ranges":[{"startOffset":1885,"endOffset":1928,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":1932,"endOffset":1999,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2003,"endOffset":3375,"count":0}],"isBlockCoverage":false},{"functionName":"readSync","ranges":[{"startOffset":3379,"endOffset":4135,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":4139,"endOffset":4865,"count":0}],"isBlockCoverage":false},{"functionName":"closeSync","ranges":[{"startOffset":4869,"endOffset":5246,"count":0}],"isBlockCoverage":false},{"functionName":"entries","ranges":[{"startOffset":5250,"endOffset":5513,"count":0}],"isBlockCoverage":false},{"functionName":"opendir","ranges":[{"startOffset":5674,"endOffset":6299,"count":0}],"isBlockCoverage":false},{"functionName":"opendirSync","ranges":[{"startOffset":6301,"endOffset":6658,"count":0}],"isBlockCoverage":false}]},{"scriptId":"55","url":"internal/util/iterable_weak_map.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2306,"count":1}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":747,"endOffset":864,"count":1}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":869,"endOffset":1380,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1384,"endOffset":1440,"count":0}],"isBlockCoverage":false},{"functionName":"has","ranges":[{"startOffset":1444,"endOffset":1493,"count":0}],"isBlockCoverage":false},{"functionName":"delete","ranges":[{"startOffset":1497,"endOffset":1735,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1739,"endOffset":2164,"count":0}],"isBlockCoverage":false},{"functionName":"cleanup","ranges":[{"startOffset":2168,"endOffset":2221,"count":0}],"isBlockCoverage":false}]},{"scriptId":"56","url":"internal/modules/cjs/helpers.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6101,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":905,"endOffset":930,"count":1}],"isBlockCoverage":true},{"functionName":"loadNativeModule","ranges":[{"startOffset":1221,"endOffset":1526,"count":2}],"isBlockCoverage":true},{"functionName":"makeRequireFunction","ranges":[{"startOffset":1775,"endOffset":3911,"count":0}],"isBlockCoverage":false},{"functionName":"stripBOM","ranges":[{"startOffset":4096,"endOffset":4251,"count":0}],"isBlockCoverage":false},{"functionName":"addBuiltinLibsToObject","ranges":[{"startOffset":4253,"endOffset":5765,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeReferrerURL","ranges":[{"startOffset":5767,"endOffset":5955,"count":40},{"startOffset":5874,"endOffset":5920,"count":0}],"isBlockCoverage":true}]},{"scriptId":"57","url":"internal/process/report.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2945,"count":1}],"isBlockCoverage":false},{"functionName":"writeReport","ranges":[{"startOffset":298,"endOffset":805,"count":0}],"isBlockCoverage":false},{"functionName":"getReport","ranges":[{"startOffset":809,"endOffset":1045,"count":0}],"isBlockCoverage":false},{"functionName":"get directory","ranges":[{"startOffset":1049,"endOffset":1100,"count":0}],"isBlockCoverage":false},{"functionName":"set directory","ranges":[{"startOffset":1104,"endOffset":1192,"count":0}],"isBlockCoverage":false},{"functionName":"get filename","ranges":[{"startOffset":1196,"endOffset":1245,"count":0}],"isBlockCoverage":false},{"functionName":"set filename","ranges":[{"startOffset":1249,"endOffset":1337,"count":0}],"isBlockCoverage":false},{"functionName":"get compact","ranges":[{"startOffset":1341,"endOffset":1388,"count":0}],"isBlockCoverage":false},{"functionName":"set compact","ranges":[{"startOffset":1392,"endOffset":1469,"count":0}],"isBlockCoverage":false},{"functionName":"get signal","ranges":[{"startOffset":1473,"endOffset":1518,"count":0}],"isBlockCoverage":false},{"functionName":"set signal","ranges":[{"startOffset":1522,"endOffset":1659,"count":0}],"isBlockCoverage":false},{"functionName":"get reportOnFatalError","ranges":[{"startOffset":1663,"endOffset":1735,"count":0}],"isBlockCoverage":false},{"functionName":"set reportOnFatalError","ranges":[{"startOffset":1739,"endOffset":1923,"count":0}],"isBlockCoverage":false},{"functionName":"get reportOnSignal","ranges":[{"startOffset":1927,"endOffset":1991,"count":0}],"isBlockCoverage":false},{"functionName":"set reportOnSignal","ranges":[{"startOffset":1995,"endOffset":2222,"count":0}],"isBlockCoverage":false},{"functionName":"get reportOnUncaughtException","ranges":[{"startOffset":2226,"endOffset":2312,"count":0}],"isBlockCoverage":false},{"functionName":"set reportOnUncaughtException","ranges":[{"startOffset":2316,"endOffset":2514,"count":0}],"isBlockCoverage":false},{"functionName":"addSignalHandler","ranges":[{"startOffset":2519,"endOffset":2690,"count":1},{"startOffset":2585,"endOffset":2688,"count":0}],"isBlockCoverage":true},{"functionName":"removeSignalHandler","ranges":[{"startOffset":2692,"endOffset":2816,"count":0}],"isBlockCoverage":false},{"functionName":"signalHandler","ranges":[{"startOffset":2818,"endOffset":2892,"count":0}],"isBlockCoverage":false}]},{"scriptId":"58","url":"internal/modules/cjs/loader.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":39892,"count":1}],"isBlockCoverage":false},{"functionName":"get hasLoadedAnyUserCJSModule","ranges":[{"startOffset":2199,"endOffset":2268,"count":1}],"isBlockCoverage":true},{"functionName":"internalRequire","ranges":[{"startOffset":4673,"endOffset":4998,"count":0}],"isBlockCoverage":false},{"functionName":"stat","ranges":[{"startOffset":5000,"endOffset":5317,"count":1},{"startOffset":5098,"endOffset":5192,"count":0},{"startOffset":5266,"endOffset":5298,"count":0}],"isBlockCoverage":true},{"functionName":"updateChildren","ranges":[{"startOffset":5319,"endOffset":5524,"count":0}],"isBlockCoverage":false},{"functionName":"Module","ranges":[{"startOffset":5526,"endOffset":6118,"count":0}],"isBlockCoverage":false},{"functionName":"wrap","ranges":[{"startOffset":6592,"endOffset":6669,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":6815,"endOffset":6937,"count":0}],"isBlockCoverage":false},{"functionName":"defineProperty","ranges":[{"startOffset":6942,"endOffset":7075,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7122,"endOffset":7150,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":7155,"endOffset":7209,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7259,"endOffset":7295,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":7300,"endOffset":7362,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7395,"endOffset":7425,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7649,"endOffset":7674,"count":0}],"isBlockCoverage":false},{"functionName":"readPackage","ranges":[{"startOffset":8022,"endOffset":8774,"count":1},{"startOffset":8202,"endOffset":8218,"count":0},{"startOffset":8316,"endOffset":8322,"count":0},{"startOffset":8366,"endOffset":8432,"count":0},{"startOffset":8657,"endOffset":8772,"count":0}],"isBlockCoverage":true},{"functionName":"readPackageScope","ranges":[{"startOffset":8776,"endOffset":9319,"count":1},{"startOffset":9118,"endOffset":9131,"count":0},{"startOffset":9256,"endOffset":9318,"count":0}],"isBlockCoverage":true},{"functionName":"tryPackage","ranges":[{"startOffset":9321,"endOffset":10622,"count":0}],"isBlockCoverage":false},{"functionName":"tryFile","ranges":[{"startOffset":10967,"endOffset":11177,"count":0}],"isBlockCoverage":false},{"functionName":"toRealPath","ranges":[{"startOffset":11179,"endOffset":11310,"count":2}],"isBlockCoverage":true},{"functionName":"tryExtensions","ranges":[{"startOffset":11385,"endOffset":11591,"count":0}],"isBlockCoverage":false},{"functionName":"findLongestRegisteredExtension","ranges":[{"startOffset":11680,"endOffset":12148,"count":0}],"isBlockCoverage":false},{"functionName":"trySelfParentPath","ranges":[{"startOffset":12150,"endOffset":12439,"count":0}],"isBlockCoverage":false},{"functionName":"trySelf","ranges":[{"startOffset":12441,"endOffset":13290,"count":0}],"isBlockCoverage":false},{"functionName":"resolveExports","ranges":[{"startOffset":13451,"endOffset":14195,"count":0}],"isBlockCoverage":false},{"functionName":"Module._findPath","ranges":[{"startOffset":14261,"endOffset":16873,"count":1},{"startOffset":14394,"endOffset":14457,"count":0},{"startOffset":14594,"endOffset":14607,"count":0},{"startOffset":15009,"endOffset":15029,"count":0},{"startOffset":15031,"endOffset":15040,"count":0},{"startOffset":15068,"endOffset":15198,"count":0},{"startOffset":15382,"endOffset":15550,"count":0},{"startOffset":15582,"endOffset":16214,"count":0},{"startOffset":16305,"endOffset":16499,"count":0},{"startOffset":16525,"endOffset":16536,"count":0},{"startOffset":16538,"endOffset":16754,"count":0},{"startOffset":16854,"endOffset":16872,"count":0}],"isBlockCoverage":true},{"functionName":"Module._nodeModulePaths","ranges":[{"startOffset":17117,"endOffset":18633,"count":0}],"isBlockCoverage":false},{"functionName":"Module._nodeModulePaths","ranges":[{"startOffset":18725,"endOffset":19864,"count":0}],"isBlockCoverage":false},{"functionName":"Module._resolveLookupPaths","ranges":[{"startOffset":19898,"endOffset":21115,"count":0}],"isBlockCoverage":false},{"functionName":"emitCircularRequireWarning","ranges":[{"startOffset":21118,"endOffset":21301,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":21494,"endOffset":21866,"count":0}],"isBlockCoverage":false},{"functionName":"getOwnPropertyDescriptor","ranges":[{"startOffset":21871,"endOffset":22112,"count":0}],"isBlockCoverage":false},{"functionName":"getExportsForCircularRequire","ranges":[{"startOffset":22118,"endOffset":22762,"count":0}],"isBlockCoverage":false},{"functionName":"Module._load","ranges":[{"startOffset":23174,"endOffset":26179,"count":0}],"isBlockCoverage":false},{"functionName":"Module._resolveFilename","ranges":[{"startOffset":26208,"endOffset":29262,"count":0}],"isBlockCoverage":false},{"functionName":"finalizeEsmResolution","ranges":[{"startOffset":29265,"endOffset":29978,"count":0}],"isBlockCoverage":false},{"functionName":"createEsmNotFoundErr","ranges":[{"startOffset":29980,"endOffset":30270,"count":0}],"isBlockCoverage":false},{"functionName":"Module.load","ranges":[{"startOffset":30359,"endOffset":31174,"count":0}],"isBlockCoverage":false},{"functionName":"Module.require","ranges":[{"startOffset":31367,"endOffset":31666,"count":0}],"isBlockCoverage":false},{"functionName":"wrapSafe","ranges":[{"startOffset":31845,"endOffset":32961,"count":0}],"isBlockCoverage":false},{"functionName":"Module._compile","ranges":[{"startOffset":33161,"endOffset":35025,"count":0}],"isBlockCoverage":false},{"functionName":"Module._extensions..js","ranges":[{"startOffset":35084,"endOffset":35874,"count":0}],"isBlockCoverage":false},{"functionName":"Module._extensions..json","ranges":[{"startOffset":35938,"endOffset":36320,"count":0}],"isBlockCoverage":false},{"functionName":"Module._extensions..node","ranges":[{"startOffset":36384,"endOffset":36702,"count":0}],"isBlockCoverage":false},{"functionName":"createRequireFromPath","ranges":[{"startOffset":36705,"endOffset":37166,"count":0}],"isBlockCoverage":false},{"functionName":"createRequire","ranges":[{"startOffset":37451,"endOffset":38004,"count":0}],"isBlockCoverage":false},{"functionName":"Module._initPaths","ranges":[{"startOffset":38065,"endOffset":39029,"count":1},{"startOffset":38106,"endOffset":38131,"count":0},{"startOffset":38183,"endOffset":38206,"count":0},{"startOffset":38414,"endOffset":38456,"count":0},{"startOffset":38753,"endOffset":38896,"count":0}],"isBlockCoverage":true},{"functionName":"Module._preloadModules","ranges":[{"startOffset":39057,"endOffset":39648,"count":0}],"isBlockCoverage":false},{"functionName":"syncBuiltinESMExports","ranges":[{"startOffset":39682,"endOffset":39838,"count":0}],"isBlockCoverage":false}]},{"scriptId":"59","url":"vm.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12927,"count":1}],"isBlockCoverage":false},{"functionName":"Script","ranges":[{"startOffset":2017,"endOffset":4177,"count":0}],"isBlockCoverage":false},{"functionName":"runInThisContext","ranges":[{"startOffset":4181,"endOffset":4478,"count":0}],"isBlockCoverage":false},{"functionName":"runInContext","ranges":[{"startOffset":4482,"endOffset":4881,"count":0}],"isBlockCoverage":false},{"functionName":"runInNewContext","ranges":[{"startOffset":4885,"endOffset":5056,"count":0}],"isBlockCoverage":false},{"functionName":"validateContext","ranges":[{"startOffset":5060,"endOffset":5279,"count":0}],"isBlockCoverage":false},{"functionName":"getRunInContextArgs","ranges":[{"startOffset":5281,"endOffset":5872,"count":0}],"isBlockCoverage":false},{"functionName":"getContextOptions","ranges":[{"startOffset":5874,"endOffset":6942,"count":0}],"isBlockCoverage":false},{"functionName":"isContext","ranges":[{"startOffset":6944,"endOffset":7062,"count":0}],"isBlockCoverage":false},{"functionName":"createContext","ranges":[{"startOffset":7097,"endOffset":8232,"count":0}],"isBlockCoverage":false},{"functionName":"createScript","ranges":[{"startOffset":8234,"endOffset":8310,"count":0}],"isBlockCoverage":false},{"functionName":"sigintHandlersWrap","ranges":[{"startOffset":8464,"endOffset":8925,"count":0}],"isBlockCoverage":false},{"functionName":"runInContext","ranges":[{"startOffset":8927,"endOffset":9324,"count":0}],"isBlockCoverage":false},{"functionName":"runInNewContext","ranges":[{"startOffset":9326,"endOffset":9678,"count":0}],"isBlockCoverage":false},{"functionName":"runInThisContext","ranges":[{"startOffset":9680,"endOffset":9866,"count":0}],"isBlockCoverage":false},{"functionName":"compileFunction","ranges":[{"startOffset":9868,"endOffset":11601,"count":0}],"isBlockCoverage":false},{"functionName":"measureMemory","ranges":[{"startOffset":11878,"endOffset":12440,"count":0}],"isBlockCoverage":false}]},{"scriptId":"60","url":"internal/modules/package_json_reader.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":975,"count":1}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":279,"endOffset":946,"count":6},{"startOffset":332,"endOffset":369,"count":1},{"startOffset":369,"endOffset":593,"count":5},{"startOffset":593,"endOffset":896,"count":3},{"startOffset":627,"endOffset":761,"count":1},{"startOffset":686,"endOffset":739,"count":0},{"startOffset":789,"endOffset":892,"count":0},{"startOffset":896,"endOffset":945,"count":5}],"isBlockCoverage":true}]},{"scriptId":"61","url":"url.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":30193,"count":1}],"isBlockCoverage":false},{"functionName":"Url","ranges":[{"startOffset":1922,"endOffset":2198,"count":0}],"isBlockCoverage":false},{"functionName":"urlParse","ranges":[{"startOffset":3879,"endOffset":4093,"count":0}],"isBlockCoverage":false},{"functionName":"isIpv6Hostname","ranges":[{"startOffset":4095,"endOffset":4318,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":4342,"endOffset":13663,"count":0}],"isBlockCoverage":false},{"functionName":"getHostname","ranges":[{"startOffset":13666,"endOffset":14391,"count":0}],"isBlockCoverage":false},{"functionName":"autoEscapeStr","ranges":[{"startOffset":15448,"endOffset":16154,"count":0}],"isBlockCoverage":false},{"functionName":"urlFormat","ranges":[{"startOffset":16200,"endOffset":16910,"count":0}],"isBlockCoverage":false},{"functionName":"format","ranges":[{"startOffset":17618,"endOffset":20068,"count":0}],"isBlockCoverage":false},{"functionName":"urlResolve","ranges":[{"startOffset":20071,"endOffset":20170,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":20196,"endOffset":20297,"count":0}],"isBlockCoverage":false},{"functionName":"urlResolveObject","ranges":[{"startOffset":20300,"endOffset":20443,"count":0}],"isBlockCoverage":false},{"functionName":"resolveObject","ranges":[{"startOffset":20475,"endOffset":29594,"count":0}],"isBlockCoverage":false},{"functionName":"parseHost","ranges":[{"startOffset":29623,"endOffset":29896,"count":0}],"isBlockCoverage":false}]},{"scriptId":"62","url":"internal/idna.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":264,"count":1}],"isBlockCoverage":false}]},{"scriptId":"63","url":"internal/process/esm_loader.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2326,"count":1}],"isBlockCoverage":false},{"functionName":"exports.initializeImportMetaObject","ranges":[{"startOffset":405,"endOffset":701,"count":0}],"isBlockCoverage":false},{"functionName":"exports.importModuleDynamicallyCallback","ranges":[{"startOffset":746,"endOffset":1137,"count":0}],"isBlockCoverage":false},{"functionName":"initializeLoader","ranges":[{"startOffset":1202,"endOffset":1969,"count":1},{"startOffset":1388,"endOffset":1968,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1722,"endOffset":1963,"count":0}],"isBlockCoverage":true},{"functionName":"loadESM","ranges":[{"startOffset":1989,"endOffset":2324,"count":1},{"startOffset":2092,"endOffset":2097,"count":0},{"startOffset":2158,"endOffset":2215,"count":0}],"isBlockCoverage":true}]},{"scriptId":"64","url":"internal/modules/esm/loader.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8716,"count":1}],"isBlockCoverage":false},{"functionName":"Loader","ranges":[{"startOffset":1410,"endOffset":3183,"count":1}],"isBlockCoverage":true},{"functionName":"resolve","ranges":[{"startOffset":3187,"endOffset":3907,"count":106},{"startOffset":3285,"endOffset":3317,"count":105},{"startOffset":3318,"endOffset":3346,"count":0},{"startOffset":3354,"endOffset":3428,"count":0},{"startOffset":3605,"endOffset":3708,"count":0},{"startOffset":3780,"endOffset":3887,"count":0}],"isBlockCoverage":true},{"functionName":"getFormat","ranges":[{"startOffset":3911,"endOffset":5219,"count":106},{"startOffset":4068,"endOffset":4175,"count":0},{"startOffset":4244,"endOffset":4501,"count":0},{"startOffset":4538,"endOffset":4653,"count":0},{"startOffset":4685,"endOffset":4713,"count":3},{"startOffset":4713,"endOffset":4757,"count":103},{"startOffset":4757,"endOffset":4926,"count":0},{"startOffset":4926,"endOffset":5018,"count":103},{"startOffset":5019,"endOffset":5068,"count":0},{"startOffset":5075,"endOffset":5195,"count":0},{"startOffset":5195,"endOffset":5218,"count":103}],"isBlockCoverage":true},{"functionName":"eval","ranges":[{"startOffset":5223,"endOffset":5898,"count":0}],"isBlockCoverage":false},{"functionName":"import","ranges":[{"startOffset":5902,"endOffset":6073,"count":1},{"startOffset":6035,"endOffset":6072,"count":0}],"isBlockCoverage":true},{"functionName":"hook","ranges":[{"startOffset":6077,"endOffset":7038,"count":0}],"isBlockCoverage":false},{"functionName":"runGlobalPreloadCode","ranges":[{"startOffset":7042,"endOffset":7846,"count":0}],"isBlockCoverage":false},{"functionName":"getModuleJob","ranges":[{"startOffset":7850,"endOffset":8640,"count":105},{"startOffset":8137,"endOffset":8174,"count":0},{"startOffset":8208,"endOffset":8219,"count":63},{"startOffset":8219,"endOffset":8261,"count":42},{"startOffset":8261,"endOffset":8305,"count":0},{"startOffset":8305,"endOffset":8407,"count":42},{"startOffset":8407,"endOffset":8437,"count":1},{"startOffset":8438,"endOffset":8472,"count":1}],"isBlockCoverage":true}]},{"scriptId":"65","url":"internal/modules/esm/module_map.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":878,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":175,"endOffset":200,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":419,"endOffset":492,"count":105}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":495,"endOffset":771,"count":42},{"startOffset":585,"endOffset":621,"count":0},{"startOffset":623,"endOffset":693,"count":0}],"isBlockCoverage":true},{"functionName":"has","ranges":[{"startOffset":774,"endOffset":847,"count":0}],"isBlockCoverage":false}]},{"scriptId":"66","url":"internal/modules/esm/module_job.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7676,"count":1}],"isBlockCoverage":false},{"functionName":"isCommonJSGlobalLikeNotDefinedError","ranges":[{"startOffset":917,"endOffset":1047,"count":0}],"isBlockCoverage":false},{"functionName":"ModuleJob","ranges":[{"startOffset":1285,"endOffset":2977,"count":42}],"isBlockCoverage":true},{"functionName":"link","ranges":[{"startOffset":1754,"endOffset":2604,"count":42}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2210,"endOffset":2437,"count":104}],"isBlockCoverage":true},{"functionName":"instantiate","ranges":[{"startOffset":2981,"endOffset":3126,"count":1}],"isBlockCoverage":true},{"functionName":"_instantiate","ranges":[{"startOffset":3130,"endOffset":6410,"count":1},{"startOffset":3627,"endOffset":3804,"count":0},{"startOffset":4913,"endOffset":6134,"count":0},{"startOffset":6163,"endOffset":6409,"count":0}],"isBlockCoverage":true},{"functionName":"addJobsToDependencyGraph","ranges":[{"startOffset":3229,"endOffset":3526,"count":105},{"startOffset":3290,"endOffset":3315,"count":63},{"startOffset":3315,"endOffset":3525,"count":42}],"isBlockCoverage":true},{"functionName":"run","ranges":[{"startOffset":6414,"endOffset":7596,"count":1},{"startOffset":6457,"endOffset":7595,"count":0}],"isBlockCoverage":true}]},{"scriptId":"67","url":"internal/modules/esm/resolve.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":32251,"count":1}],"isBlockCoverage":false},{"functionName":"emitLegacyIndexDeprecation","ranges":[{"startOffset":2120,"endOffset":3245,"count":0}],"isBlockCoverage":false},{"functionName":"getConditionsSet","ranges":[{"startOffset":3247,"endOffset":3599,"count":103},{"startOffset":3356,"endOffset":3564,"count":0}],"isBlockCoverage":true},{"functionName":"tryStatSync","ranges":[{"startOffset":3732,"endOffset":3798,"count":185},{"startOffset":3784,"endOffset":3798,"count":51}],"isBlockCoverage":true},{"functionName":"getPackageConfig","ranges":[{"startOffset":3801,"endOffset":5139,"count":183},{"startOffset":3929,"endOffset":3955,"count":178},{"startOffset":3955,"endOffset":4038,"count":5},{"startOffset":4038,"endOffset":4313,"count":2},{"startOffset":4313,"endOffset":4383,"count":3},{"startOffset":4383,"endOffset":4562,"count":0},{"startOffset":4562,"endOffset":4684,"count":3},{"startOffset":4684,"endOffset":4703,"count":0},{"startOffset":4705,"endOffset":4758,"count":3},{"startOffset":4758,"endOffset":4775,"count":1},{"startOffset":4775,"endOffset":4808,"count":3},{"startOffset":4808,"endOffset":4825,"count":0},{"startOffset":4825,"endOffset":4903,"count":3},{"startOffset":4903,"endOffset":4925,"count":0},{"startOffset":4927,"endOffset":4941,"count":0},{"startOffset":4941,"endOffset":5138,"count":3}],"isBlockCoverage":true},{"functionName":"getPackageScopeConfig","ranges":[{"startOffset":5141,"endOffset":6241,"count":133},{"startOffset":5259,"endOffset":5912,"count":152},{"startOffset":5399,"endOffset":5405,"count":0},{"startOffset":5564,"endOffset":5585,"count":133},{"startOffset":5585,"endOffset":5902,"count":19},{"startOffset":5902,"endOffset":5908,"count":0},{"startOffset":5912,"endOffset":6240,"count":0}],"isBlockCoverage":true},{"functionName":"fileExists","ranges":[{"startOffset":6549,"endOffset":6647,"count":0}],"isBlockCoverage":false},{"functionName":"legacyMainResolve","ranges":[{"startOffset":6649,"endOffset":8488,"count":0}],"isBlockCoverage":false},{"functionName":"resolveExtensionsWithTryExactName","ranges":[{"startOffset":8490,"endOffset":8621,"count":0}],"isBlockCoverage":false},{"functionName":"resolveExtensions","ranges":[{"startOffset":8677,"endOffset":8934,"count":0}],"isBlockCoverage":false},{"functionName":"resolveDirectoryEntry","ranges":[{"startOffset":8936,"endOffset":9467,"count":0}],"isBlockCoverage":false},{"functionName":"finalizeResolution","ranges":[{"startOffset":9505,"endOffset":10730,"count":103},{"startOffset":9618,"endOffset":9761,"count":0},{"startOffset":9875,"endOffset":10302,"count":0},{"startOffset":10367,"endOffset":10403,"count":0},{"startOffset":10440,"endOffset":10567,"count":0},{"startOffset":10594,"endOffset":10708,"count":0}],"isBlockCoverage":true},{"functionName":"throwImportNotDefined","ranges":[{"startOffset":10732,"endOffset":10947,"count":0}],"isBlockCoverage":false},{"functionName":"throwExportsNotFound","ranges":[{"startOffset":10949,"endOffset":11148,"count":0}],"isBlockCoverage":false},{"functionName":"throwInvalidSubpath","ranges":[{"startOffset":11150,"endOffset":11500,"count":0}],"isBlockCoverage":false},{"functionName":"throwInvalidPackageTarget","ranges":[{"startOffset":11502,"endOffset":11884,"count":0}],"isBlockCoverage":false},{"functionName":"resolvePackageTargetString","ranges":[{"startOffset":11985,"endOffset":13648,"count":34},{"startOffset":12124,"endOffset":12135,"count":0},{"startOffset":12136,"endOffset":12172,"count":0},{"startOffset":12178,"endOffset":12251,"count":0},{"startOffset":12301,"endOffset":12841,"count":0},{"startOffset":12928,"endOffset":13001,"count":0},{"startOffset":13224,"endOffset":13297,"count":0},{"startOffset":13337,"endOffset":13647,"count":0}],"isBlockCoverage":true},{"functionName":"isArrayIndex","ranges":[{"startOffset":13703,"endOffset":13843,"count":156},{"startOffset":13795,"endOffset":13840,"count":0}],"isBlockCoverage":true},{"functionName":"resolvePackageTarget","ranges":[{"startOffset":13845,"endOffset":15977,"count":73},{"startOffset":14027,"endOffset":14170,"count":34},{"startOffset":14170,"endOffset":15862,"count":39},{"startOffset":14202,"endOffset":14974,"count":0},{"startOffset":15127,"endOffset":15355,"count":156},{"startOffset":15185,"endOffset":15349,"count":0},{"startOffset":15398,"endOffset":15787,"count":122},{"startOffset":15455,"endOffset":15477,"count":117},{"startOffset":15479,"endOffset":15781,"count":39},{"startOffset":15739,"endOffset":15748,"count":0},{"startOffset":15787,"endOffset":15862,"count":0},{"startOffset":15862,"endOffset":15976,"count":0}],"isBlockCoverage":true},{"functionName":"isConditionalExportsMainSugar","ranges":[{"startOffset":15979,"endOffset":16914,"count":34},{"startOffset":16111,"endOffset":16123,"count":0},{"startOffset":16179,"endOffset":16192,"count":0},{"startOffset":16332,"endOffset":16883,"count":4250},{"startOffset":16442,"endOffset":16499,"count":34},{"startOffset":16499,"endOffset":16879,"count":4216},{"startOffset":16555,"endOffset":16879,"count":0}],"isBlockCoverage":true},{"functionName":"packageExportsResolve","ranges":[{"startOffset":17099,"endOffset":19549,"count":34},{"startOffset":17311,"endOffset":17338,"count":0},{"startOffset":17748,"endOffset":17807,"count":0},{"startOffset":17849,"endOffset":19548,"count":0}],"isBlockCoverage":true},{"functionName":"patternKeyCompare","ranges":[{"startOffset":19551,"endOffset":20082,"count":0}],"isBlockCoverage":false},{"functionName":"packageImportsResolve","ranges":[{"startOffset":20084,"endOffset":22817,"count":0}],"isBlockCoverage":false},{"functionName":"getPackageType","ranges":[{"startOffset":22819,"endOffset":22932,"count":99}],"isBlockCoverage":true},{"functionName":"packageResolve","ranges":[{"startOffset":23045,"endOffset":25877,"count":34},{"startOffset":23246,"endOffset":23474,"count":0},{"startOffset":23520,"endOffset":23535,"count":4},{"startOffset":23536,"endOffset":23588,"count":30},{"startOffset":23731,"endOffset":23848,"count":132},{"startOffset":23792,"endOffset":23844,"count":0},{"startOffset":23875,"endOffset":23994,"count":0},{"startOffset":24050,"endOffset":24054,"count":4},{"startOffset":24055,"endOffset":24108,"count":30},{"startOffset":24322,"endOffset":24368,"count":3},{"startOffset":24369,"endOffset":24402,"count":3},{"startOffset":24404,"endOffset":24537,"count":3},{"startOffset":24541,"endOffset":24712,"count":31},{"startOffset":24712,"endOffset":25668,"count":82},{"startOffset":24894,"endOffset":25171,"count":51},{"startOffset":24971,"endOffset":25008,"count":0},{"startOffset":25171,"endOffset":25350,"count":31},{"startOffset":25358,"endOffset":25477,"count":31},{"startOffset":25477,"endOffset":25668,"count":0},{"startOffset":25668,"endOffset":25876,"count":0}],"isBlockCoverage":true},{"functionName":"isBareSpecifier","ranges":[{"startOffset":25879,"endOffset":25989,"count":0}],"isBlockCoverage":false},{"functionName":"isRelativeSpecifier","ranges":[{"startOffset":25991,"endOffset":26262,"count":103},{"startOffset":26061,"endOffset":26244,"count":68},{"startOffset":26119,"endOffset":26131,"count":66},{"startOffset":26131,"endOffset":26240,"count":2},{"startOffset":26244,"endOffset":26261,"count":35}],"isBlockCoverage":true},{"functionName":"shouldBeTreatedAsRelativeOrAbsolutePath","ranges":[{"startOffset":26264,"endOffset":26447,"count":103},{"startOffset":26350,"endOffset":26363,"count":0},{"startOffset":26392,"endOffset":26404,"count":0}],"isBlockCoverage":true},{"functionName":"moduleResolve","ranges":[{"startOffset":26560,"endOffset":27131,"count":103},{"startOffset":26788,"endOffset":26834,"count":68},{"startOffset":26834,"endOffset":27084,"count":35},{"startOffset":26866,"endOffset":26944,"count":0},{"startOffset":27005,"endOffset":27080,"count":34}],"isBlockCoverage":true},{"functionName":"resolveAsCommonJS","ranges":[{"startOffset":27277,"endOffset":28685,"count":0}],"isBlockCoverage":false},{"functionName":"defaultResolve","ranges":[{"startOffset":28687,"endOffset":31993,"count":106},{"startOffset":28819,"endOffset":28838,"count":105},{"startOffset":28840,"endOffset":29443,"count":0},{"startOffset":29536,"endOffset":29590,"count":0},{"startOffset":29595,"endOffset":29603,"count":102},{"startOffset":29617,"endOffset":29647,"count":4},{"startOffset":29653,"endOffset":29679,"count":3},{"startOffset":29679,"endOffset":29693,"count":103},{"startOffset":29693,"endOffset":29723,"count":1},{"startOffset":29724,"endOffset":29754,"count":0},{"startOffset":29760,"endOffset":29809,"count":0},{"startOffset":29809,"endOffset":29862,"count":103},{"startOffset":29862,"endOffset":29918,"count":0},{"startOffset":29918,"endOffset":29935,"count":103},{"startOffset":29935,"endOffset":29983,"count":102},{"startOffset":29985,"endOffset":30073,"count":0},{"startOffset":30073,"endOffset":30131,"count":103},{"startOffset":30131,"endOffset":30658,"count":1},{"startOffset":30615,"endOffset":30654,"count":0},{"startOffset":30658,"endOffset":30787,"count":103},{"startOffset":30787,"endOffset":31591,"count":0},{"startOffset":31591,"endOffset":31606,"count":103},{"startOffset":31606,"endOffset":31629,"count":1},{"startOffset":31630,"endOffset":31649,"count":102},{"startOffset":31651,"endOffset":31962,"count":103},{"startOffset":31891,"endOffset":31896,"count":0},{"startOffset":31962,"endOffset":31992,"count":103}],"isBlockCoverage":true}]},{"scriptId":"68","url":"internal/modules/esm/get_format.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2546,"count":1}],"isBlockCoverage":false},{"functionName":"defaultGetFormat","ranges":[{"startOffset":1132,"endOffset":2452,"count":106},{"startOffset":1245,"endOffset":1284,"count":3},{"startOffset":1284,"endOffset":1351,"count":103},{"startOffset":1351,"endOffset":1761,"count":0},{"startOffset":1761,"endOffset":2423,"count":103},{"startOffset":1883,"endOffset":1971,"count":99},{"startOffset":1952,"endOffset":1964,"count":0},{"startOffset":1971,"endOffset":2024,"count":4},{"startOffset":2042,"endOffset":2380,"count":0},{"startOffset":2409,"endOffset":2416,"count":0},{"startOffset":2423,"endOffset":2451,"count":0}],"isBlockCoverage":true}]},{"scriptId":"69","url":"internal/modules/esm/get_source.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1353,"count":1}],"isBlockCoverage":false},{"functionName":"defaultGetSource","ranges":[{"startOffset":631,"endOffset":1307,"count":40},{"startOffset":832,"endOffset":1201,"count":0},{"startOffset":1226,"endOffset":1284,"count":0}],"isBlockCoverage":true}]},{"scriptId":"70","url":"internal/fs/promises.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":21335,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2225,"endOffset":2385,"count":0}],"isBlockCoverage":false},{"functionName":"FileHandle","ranges":[{"startOffset":2433,"endOffset":2610,"count":40},{"startOffset":2547,"endOffset":2551,"count":0}],"isBlockCoverage":true},{"functionName":"getAsyncId","ranges":[{"startOffset":2614,"endOffset":2671,"count":0}],"isBlockCoverage":false},{"functionName":"get fd","ranges":[{"startOffset":2675,"endOffset":2711,"count":80}],"isBlockCoverage":true},{"functionName":"appendFile","ranges":[{"startOffset":2715,"endOffset":2797,"count":0}],"isBlockCoverage":false},{"functionName":"chmod","ranges":[{"startOffset":2801,"endOffset":2857,"count":0}],"isBlockCoverage":false},{"functionName":"chown","ranges":[{"startOffset":2861,"endOffset":2925,"count":0}],"isBlockCoverage":false},{"functionName":"datasync","ranges":[{"startOffset":2929,"endOffset":2981,"count":0}],"isBlockCoverage":false},{"functionName":"sync","ranges":[{"startOffset":2985,"endOffset":3029,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":3033,"endOffset":3142,"count":0}],"isBlockCoverage":false},{"functionName":"readv","ranges":[{"startOffset":3146,"endOffset":3227,"count":0}],"isBlockCoverage":false},{"functionName":"readFile","ranges":[{"startOffset":3231,"endOffset":3298,"count":0}],"isBlockCoverage":false},{"functionName":"stat","ranges":[{"startOffset":3302,"endOffset":3362,"count":0}],"isBlockCoverage":false},{"functionName":"truncate","ranges":[{"startOffset":3366,"endOffset":3430,"count":0}],"isBlockCoverage":false},{"functionName":"utimes","ranges":[{"startOffset":3434,"endOffset":3508,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":3512,"endOffset":3623,"count":0}],"isBlockCoverage":false},{"functionName":"writev","ranges":[{"startOffset":3627,"endOffset":3710,"count":0}],"isBlockCoverage":false},{"functionName":"writeFile","ranges":[{"startOffset":3714,"endOffset":3795,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":3799,"endOffset":4491,"count":40}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":3807,"endOffset":4491,"count":40},{"startOffset":3841,"endOffset":3879,"count":0},{"startOffset":3910,"endOffset":3951,"count":0},{"startOffset":4145,"endOffset":4454,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4081,"endOffset":4137,"count":40}],"isBlockCoverage":true},{"functionName":"<computed>.Promise.finally.<computed>","ranges":[{"startOffset":4193,"endOffset":4299,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4309,"endOffset":4446,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4495,"endOffset":4964,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4968,"endOffset":5021,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5025,"endOffset":5112,"count":0}],"isBlockCoverage":false},{"functionName":"fsCall","ranges":[{"startOffset":5116,"endOffset":5734,"count":0}],"isBlockCoverage":false},{"functionName":"checkAborted","ranges":[{"startOffset":5736,"endOffset":5829,"count":0}],"isBlockCoverage":false},{"functionName":"writeFileHandle","ranges":[{"startOffset":5831,"endOffset":6761,"count":0}],"isBlockCoverage":false},{"functionName":"readFileHandle","ranges":[{"startOffset":6763,"endOffset":8832,"count":40},{"startOffset":6874,"endOffset":6891,"count":0},{"startOffset":6893,"endOffset":6969,"count":0},{"startOffset":7062,"endOffset":7079,"count":0},{"startOffset":7081,"endOffset":7157,"count":0},{"startOffset":7266,"endOffset":7291,"count":0},{"startOffset":7324,"endOffset":7362,"count":0},{"startOffset":7489,"endOffset":7500,"count":0},{"startOffset":7555,"endOffset":7572,"count":0},{"startOffset":7574,"endOffset":7654,"count":0},{"startOffset":7719,"endOffset":7858,"count":0},{"startOffset":8133,"endOffset":8137,"count":0},{"startOffset":8237,"endOffset":8253,"count":0},{"startOffset":8255,"endOffset":8459,"count":0},{"startOffset":8562,"endOffset":8594,"count":0},{"startOffset":8599,"endOffset":8757,"count":0},{"startOffset":8785,"endOffset":8820,"count":0}],"isBlockCoverage":true},{"functionName":"access","ranges":[{"startOffset":8985,"endOffset":9206,"count":0}],"isBlockCoverage":false},{"functionName":"copyFile","ranges":[{"startOffset":9208,"endOffset":9566,"count":0}],"isBlockCoverage":false},{"functionName":"open","ranges":[{"startOffset":9686,"endOffset":10011,"count":40}],"isBlockCoverage":true},{"functionName":"read","ranges":[{"startOffset":10013,"endOffset":11157,"count":0}],"isBlockCoverage":false},{"functionName":"readv","ranges":[{"startOffset":11159,"endOffset":11479,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":11481,"endOffset":12432,"count":0}],"isBlockCoverage":false},{"functionName":"writev","ranges":[{"startOffset":12434,"endOffset":12766,"count":0}],"isBlockCoverage":false},{"functionName":"rename","ranges":[{"startOffset":12768,"endOffset":13074,"count":0}],"isBlockCoverage":false},{"functionName":"truncate","ranges":[{"startOffset":13076,"endOffset":13219,"count":0}],"isBlockCoverage":false},{"functionName":"ftruncate","ranges":[{"startOffset":13221,"endOffset":13380,"count":0}],"isBlockCoverage":false},{"functionName":"rm","ranges":[{"startOffset":13382,"endOffset":13579,"count":0}],"isBlockCoverage":false},{"functionName":"rmdir","ranges":[{"startOffset":13581,"endOffset":13844,"count":0}],"isBlockCoverage":false},{"functionName":"fdatasync","ranges":[{"startOffset":13846,"endOffset":13935,"count":0}],"isBlockCoverage":false},{"functionName":"fsync","ranges":[{"startOffset":13937,"endOffset":14018,"count":0}],"isBlockCoverage":false},{"functionName":"mkdir","ranges":[{"startOffset":14020,"endOffset":14552,"count":0}],"isBlockCoverage":false},{"functionName":"readdir","ranges":[{"startOffset":14554,"endOffset":15006,"count":0}],"isBlockCoverage":false},{"functionName":"readlink","ranges":[{"startOffset":15008,"endOffset":15251,"count":0}],"isBlockCoverage":false},{"functionName":"symlink","ranges":[{"startOffset":15253,"endOffset":15666,"count":0}],"isBlockCoverage":false},{"functionName":"fstat","ranges":[{"startOffset":15668,"endOffset":15846,"count":0}],"isBlockCoverage":false},{"functionName":"lstat","ranges":[{"startOffset":15848,"endOffset":16118,"count":0}],"isBlockCoverage":false},{"functionName":"stat","ranges":[{"startOffset":16120,"endOffset":16387,"count":0}],"isBlockCoverage":false},{"functionName":"link","ranges":[{"startOffset":16389,"endOffset":16712,"count":0}],"isBlockCoverage":false},{"functionName":"unlink","ranges":[{"startOffset":16714,"endOffset":16852,"count":0}],"isBlockCoverage":false},{"functionName":"fchmod","ranges":[{"startOffset":16854,"endOffset":16987,"count":0}],"isBlockCoverage":false},{"functionName":"chmod","ranges":[{"startOffset":16989,"endOffset":17175,"count":0}],"isBlockCoverage":false},{"functionName":"lchmod","ranges":[{"startOffset":17177,"endOffset":17415,"count":0}],"isBlockCoverage":false},{"functionName":"lchown","ranges":[{"startOffset":17417,"endOffset":17693,"count":0}],"isBlockCoverage":false},{"functionName":"fchown","ranges":[{"startOffset":17695,"endOffset":17892,"count":0}],"isBlockCoverage":false},{"functionName":"chown","ranges":[{"startOffset":17894,"endOffset":18167,"count":0}],"isBlockCoverage":false},{"functionName":"utimes","ranges":[{"startOffset":18169,"endOffset":18441,"count":0}],"isBlockCoverage":false},{"functionName":"futimes","ranges":[{"startOffset":18443,"endOffset":18642,"count":0}],"isBlockCoverage":false},{"functionName":"lutimes","ranges":[{"startOffset":18644,"endOffset":18921,"count":0}],"isBlockCoverage":false},{"functionName":"realpath","ranges":[{"startOffset":18923,"endOffset":19100,"count":0}],"isBlockCoverage":false},{"functionName":"mkdtemp","ranges":[{"startOffset":19102,"endOffset":19354,"count":0}],"isBlockCoverage":false},{"functionName":"writeFile","ranges":[{"startOffset":19356,"endOffset":20126,"count":0}],"isBlockCoverage":false},{"functionName":"isCustomIterable","ranges":[{"startOffset":20128,"endOffset":20242,"count":0}],"isBlockCoverage":false},{"functionName":"appendFile","ranges":[{"startOffset":20244,"endOffset":20485,"count":0}],"isBlockCoverage":false},{"functionName":"readFile","ranges":[{"startOffset":20487,"endOffset":20917,"count":40},{"startOffset":20604,"endOffset":20610,"count":0},{"startOffset":20651,"endOffset":20688,"count":0},{"startOffset":20721,"endOffset":20797,"count":0}],"isBlockCoverage":true}]},{"scriptId":"71","url":"internal/fs/rimraf.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7039,"count":1}],"isBlockCoverage":false},{"functionName":"rimraf","ranges":[{"startOffset":1137,"endOffset":1597,"count":0}],"isBlockCoverage":false},{"functionName":"_rimraf","ranges":[{"startOffset":1600,"endOffset":2458,"count":0}],"isBlockCoverage":false},{"functionName":"fixWinEPERM","ranges":[{"startOffset":2461,"endOffset":2896,"count":0}],"isBlockCoverage":false},{"functionName":"_rmdir","ranges":[{"startOffset":2899,"endOffset":3197,"count":0}],"isBlockCoverage":false},{"functionName":"_rmchildren","ranges":[{"startOffset":3200,"endOffset":3872,"count":0}],"isBlockCoverage":false},{"functionName":"rimrafPromises","ranges":[{"startOffset":3875,"endOffset":4073,"count":0}],"isBlockCoverage":false},{"functionName":"rimrafSync","ranges":[{"startOffset":4076,"endOffset":4781,"count":0}],"isBlockCoverage":false},{"functionName":"_unlinkSync","ranges":[{"startOffset":4784,"endOffset":5267,"count":0}],"isBlockCoverage":false},{"functionName":"_rmdirSync","ranges":[{"startOffset":5270,"endOffset":6540,"count":0}],"isBlockCoverage":false},{"functionName":"fixWinEPERMSync","ranges":[{"startOffset":6543,"endOffset":6979,"count":0}],"isBlockCoverage":false}]},{"scriptId":"72","url":"internal/fs/watchers.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10885,"count":1}],"isBlockCoverage":false},{"functionName":"emitStop","ranges":[{"startOffset":1324,"endOffset":1372,"count":0}],"isBlockCoverage":false},{"functionName":"StatWatcher","ranges":[{"startOffset":1374,"endOffset":1586,"count":0}],"isBlockCoverage":false},{"functionName":"onchange","ranges":[{"startOffset":1706,"endOffset":2063,"count":0}],"isBlockCoverage":false},{"functionName":"StatWatcher.<computed>","ranges":[{"startOffset":2451,"endOffset":3284,"count":0}],"isBlockCoverage":false},{"functionName":"StatWatcher.start","ranges":[{"startOffset":3505,"endOffset":3513,"count":0}],"isBlockCoverage":false},{"functionName":"StatWatcher.stop","ranges":[{"startOffset":3759,"endOffset":4040,"count":0}],"isBlockCoverage":false},{"functionName":"StatWatcher.<computed>","ranges":[{"startOffset":4129,"endOffset":4571,"count":0}],"isBlockCoverage":false},{"functionName":"StatWatcher.ref","ranges":[{"startOffset":4602,"endOffset":4884,"count":0}],"isBlockCoverage":false},{"functionName":"StatWatcher.unref","ranges":[{"startOffset":4917,"endOffset":5167,"count":0}],"isBlockCoverage":false},{"functionName":"FSWatcher","ranges":[{"startOffset":5171,"endOffset":6120,"count":0}],"isBlockCoverage":false},{"functionName":"FSWatcher.<computed>","ranges":[{"startOffset":6657,"endOffset":7566,"count":0}],"isBlockCoverage":false},{"functionName":"FSWatcher.start","ranges":[{"startOffset":7783,"endOffset":7791,"count":0}],"isBlockCoverage":false},{"functionName":"FSWatcher.close","ranges":[{"startOffset":7914,"endOffset":8251,"count":0}],"isBlockCoverage":false},{"functionName":"FSWatcher.ref","ranges":[{"startOffset":8280,"endOffset":8349,"count":0}],"isBlockCoverage":false},{"functionName":"FSWatcher.unref","ranges":[{"startOffset":8380,"endOffset":8451,"count":0}],"isBlockCoverage":false},{"functionName":"emitCloseNT","ranges":[{"startOffset":8454,"endOffset":8506,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8711,"endOffset":8747,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":8751,"endOffset":8792,"count":0}],"isBlockCoverage":false},{"functionName":"watch","ranges":[{"startOffset":8798,"endOffset":10753,"count":0}],"isBlockCoverage":false}]},{"scriptId":"73","url":"internal/streams/utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":795,"count":1}],"isBlockCoverage":false},{"functionName":"isReadable","ranges":[{"startOffset":82,"endOffset":206,"count":0}],"isBlockCoverage":false},{"functionName":"isWritable","ranges":[{"startOffset":208,"endOffset":333,"count":0}],"isBlockCoverage":false},{"functionName":"isStream","ranges":[{"startOffset":335,"endOffset":406,"count":0}],"isBlockCoverage":false},{"functionName":"isIterable","ranges":[{"startOffset":408,"endOffset":731,"count":0}],"isBlockCoverage":false}]},{"scriptId":"74","url":"internal/modules/esm/transform_source.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":215,"count":1}],"isBlockCoverage":false},{"functionName":"defaultTransformSource","ranges":[{"startOffset":15,"endOffset":157,"count":40}],"isBlockCoverage":true}]},{"scriptId":"75","url":"internal/modules/esm/translators.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12207,"count":1}],"isBlockCoverage":false},{"functionName":"lazyTypes","ranges":[{"startOffset":421,"endOffset":533,"count":80},{"startOffset":467,"endOffset":481,"count":79},{"startOffset":481,"endOffset":532,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1207,"endOffset":1232,"count":1}],"isBlockCoverage":true},{"functionName":"initCJSParse","ranges":[{"startOffset":1919,"endOffset":2317,"count":0}],"isBlockCoverage":false},{"functionName":"assertBufferSource","ranges":[{"startOffset":2451,"endOffset":2871,"count":80},{"startOffset":2528,"endOffset":2555,"count":40},{"startOffset":2557,"endOffset":2574,"count":0},{"startOffset":2668,"endOffset":2693,"count":0},{"startOffset":2712,"endOffset":2791,"count":0},{"startOffset":2792,"endOffset":2796,"count":0}],"isBlockCoverage":true},{"functionName":"stringify","ranges":[{"startOffset":2873,"endOffset":3091,"count":40},{"startOffset":2932,"endOffset":2944,"count":0},{"startOffset":3028,"endOffset":3047,"count":1},{"startOffset":3048,"endOffset":3057,"count":39}],"isBlockCoverage":true},{"functionName":"errPath","ranges":[{"startOffset":3093,"endOffset":3238,"count":0}],"isBlockCoverage":false},{"functionName":"importModuleDynamically","ranges":[{"startOffset":3240,"endOffset":3354,"count":0}],"isBlockCoverage":false},{"functionName":"createImportMetaResolve","ranges":[{"startOffset":3356,"endOffset":3704,"count":0}],"isBlockCoverage":false},{"functionName":"initializeImportMeta","ranges":[{"startOffset":3706,"endOffset":3876,"count":0}],"isBlockCoverage":false},{"functionName":"moduleStrategy","ranges":[{"startOffset":3958,"endOffset":4539,"count":40}],"isBlockCoverage":true},{"functionName":"enrichCJSError","ranges":[{"startOffset":4543,"endOffset":5442,"count":0}],"isBlockCoverage":false},{"functionName":"commonjsStrategy","ranges":[{"startOffset":5600,"endOffset":6906,"count":0}],"isBlockCoverage":false},{"functionName":"cjsPreparseModuleExports","ranges":[{"startOffset":6910,"endOffset":8354,"count":0}],"isBlockCoverage":false},{"functionName":"builtinStrategy","ranges":[{"startOffset":8478,"endOffset":8860,"count":2},{"startOffset":8733,"endOffset":8785,"count":0}],"isBlockCoverage":true},{"functionName":"jsonStrategy","ranges":[{"startOffset":8924,"endOffset":11043,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11109,"endOffset":12204,"count":0}],"isBlockCoverage":false}]},{"scriptId":"76","url":"internal/modules/esm/create_dynamic_module.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1756,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":190,"endOffset":215,"count":0}],"isBlockCoverage":false},{"functionName":"createImport","ranges":[{"startOffset":219,"endOffset":409,"count":0}],"isBlockCoverage":false},{"functionName":"createExport","ranges":[{"startOffset":411,"endOffset":612,"count":0}],"isBlockCoverage":false},{"functionName":"createDynamicModule","ranges":[{"startOffset":642,"endOffset":1715,"count":0}],"isBlockCoverage":false}]},{"scriptId":"77","url":"internal/vm/module.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12930,"count":1}],"isBlockCoverage":false},{"functionName":"Module","ranges":[{"startOffset":1655,"endOffset":3841,"count":0}],"isBlockCoverage":false},{"functionName":"get identifier","ranges":[{"startOffset":3845,"endOffset":3982,"count":0}],"isBlockCoverage":false},{"functionName":"get context","ranges":[{"startOffset":3986,"endOffset":4119,"count":0}],"isBlockCoverage":false},{"functionName":"get namespace","ranges":[{"startOffset":4123,"endOffset":4400,"count":0}],"isBlockCoverage":false},{"functionName":"get status","ranges":[{"startOffset":4404,"endOffset":4557,"count":0}],"isBlockCoverage":false},{"functionName":"get error","ranges":[{"startOffset":4561,"endOffset":4811,"count":0}],"isBlockCoverage":false},{"functionName":"link","ranges":[{"startOffset":4815,"endOffset":5294,"count":0}],"isBlockCoverage":false},{"functionName":"evaluate","ranges":[{"startOffset":5298,"endOffset":6250,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6254,"endOffset":6981,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":7128,"endOffset":7164,"count":0}],"isBlockCoverage":false},{"functionName":"SourceTextModule","ranges":[{"startOffset":7169,"endOffset":9595,"count":0}],"isBlockCoverage":false},{"functionName":"get dependencySpecifiers","ranges":[{"startOffset":9599,"endOffset":9898,"count":0}],"isBlockCoverage":false},{"functionName":"get status","ranges":[{"startOffset":9902,"endOffset":10171,"count":0}],"isBlockCoverage":false},{"functionName":"get error","ranges":[{"startOffset":10175,"endOffset":10371,"count":0}],"isBlockCoverage":false},{"functionName":"createCachedData","ranges":[{"startOffset":10375,"endOffset":10637,"count":0}],"isBlockCoverage":false},{"functionName":"SyntheticModule","ranges":[{"startOffset":10682,"endOffset":11979,"count":0}],"isBlockCoverage":false},{"functionName":"setExport","ranges":[{"startOffset":11983,"endOffset":12285,"count":0}],"isBlockCoverage":false},{"functionName":"importModuleDynamicallyWrap","ranges":[{"startOffset":12289,"endOffset":12768,"count":0}],"isBlockCoverage":false},{"functionName":"getModuleFromWrap","ranges":[{"startOffset":12890,"endOffset":12925,"count":0}],"isBlockCoverage":false}]},{"scriptId":"78","url":"internal/modules/run_main.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2497,"count":1}],"isBlockCoverage":false},{"functionName":"resolveMainPath","ranges":[{"startOffset":358,"endOffset":796,"count":1},{"startOffset":625,"endOffset":632,"count":0}],"isBlockCoverage":true},{"functionName":"shouldUseESMLoader","ranges":[{"startOffset":798,"endOffset":1385,"count":1},{"startOffset":922,"endOffset":934,"count":0},{"startOffset":1082,"endOffset":1094,"count":0},{"startOffset":1205,"endOffset":1217,"count":0},{"startOffset":1284,"endOffset":1297,"count":0}],"isBlockCoverage":true},{"functionName":"runMainESM","ranges":[{"startOffset":1387,"endOffset":1722,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1570,"endOffset":1717,"count":1},{"startOffset":1667,"endOffset":1677,"count":0}],"isBlockCoverage":true},{"functionName":"handleMainPromise","ranges":[{"startOffset":1724,"endOffset":1906,"count":1},{"startOffset":1847,"endOffset":1904,"count":0}],"isBlockCoverage":true},{"functionName":"executeUserEntryPoint","ranges":[{"startOffset":2092,"endOffset":2427,"count":1},{"startOffset":2302,"endOffset":2309,"count":0},{"startOffset":2315,"endOffset":2425,"count":0}],"isBlockCoverage":true}]},{"scriptId":"82","url":"file:///Users/andrewheumann/Dev/y-utility/node_modules/lib0/environment.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3483,"count":1},{"startOffset":390,"endOffset":408,"count":0},{"startOffset":409,"endOffset":454,"count":0},{"startOffset":531,"endOffset":565,"count":0},{"startOffset":566,"endOffset":576,"count":0},{"startOffset":656,"endOffset":688,"count":0},{"startOffset":691,"endOffset":698,"count":0},{"startOffset":3128,"endOffset":3187,"count":0},{"startOffset":3263,"endOffset":3315,"count":0},{"startOffset":3316,"endOffset":3461,"count":0}],"isBlockCoverage":true},{"functionName":"computeParams","ranges":[{"startOffset":810,"endOffset":2063,"count":0}],"isBlockCoverage":false},{"functionName":"hasParam","ranges":[{"startOffset":2184,"endOffset":2219,"count":0}],"isBlockCoverage":false},{"functionName":"getParam","ranges":[{"startOffset":2350,"endOffset":2413,"count":0}],"isBlockCoverage":false},{"functionName":"getVariable","ranges":[{"startOffset":2522,"endOffset":2673,"count":0}],"isBlockCoverage":false},{"functionName":"getConf","ranges":[{"startOffset":2778,"endOffset":2843,"count":0}],"isBlockCoverage":false},{"functionName":"hasConf","ranges":[{"startOffset":2944,"endOffset":3007,"count":0}],"isBlockCoverage":false}]},{"scriptId":"84","url":"file:///Users/andrewheumann/Dev/y-utility/node_modules/lib0/logging.node.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3628,"count":1},{"startOffset":1586,"endOffset":1610,"count":0},{"startOffset":1613,"endOffset":1647,"count":0}],"isBlockCoverage":true},{"functionName":"computeNodeLoggingArgs","ranges":[{"startOffset":732,"endOffset":1494,"count":0}],"isBlockCoverage":false},{"functionName":"print","ranges":[{"startOffset":1751,"endOffset":1810,"count":0}],"isBlockCoverage":false},{"functionName":"warn","ranges":[{"startOffset":1914,"endOffset":1974,"count":0}],"isBlockCoverage":false},{"functionName":"printError","ranges":[{"startOffset":2075,"endOffset":2108,"count":0}],"isBlockCoverage":false},{"functionName":"printImg","ranges":[{"startOffset":2280,"endOffset":2402,"count":0}],"isBlockCoverage":false},{"functionName":"printImgBase64","ranges":[{"startOffset":2538,"endOffset":2611,"count":0}],"isBlockCoverage":false},{"functionName":"group","ranges":[{"startOffset":2717,"endOffset":2778,"count":0}],"isBlockCoverage":false},{"functionName":"groupCollapsed","ranges":[{"startOffset":2893,"endOffset":2963,"count":0}],"isBlockCoverage":false},{"functionName":"groupEnd","ranges":[{"startOffset":3012,"endOffset":3042,"count":0}],"isBlockCoverage":false},{"functionName":"printDom","ranges":[{"startOffset":3139,"endOffset":3158,"count":0}],"isBlockCoverage":false},{"functionName":"printCanvas","ranges":[{"startOffset":3281,"endOffset":3339,"count":0}],"isBlockCoverage":false},{"functionName":"createVConsole","ranges":[{"startOffset":3425,"endOffset":3437,"count":0}],"isBlockCoverage":false},{"functionName":"createModuleLogger","ranges":[{"startOffset":3567,"endOffset":3627,"count":0}],"isBlockCoverage":false}]},{"scriptId":"86","url":"file:///Users/andrewheumann/Dev/y-utility/node_modules/lib0/map.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2107,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":196,"endOffset":211,"count":0}],"isBlockCoverage":false},{"functionName":"copy","ranges":[{"startOffset":365,"endOffset":444,"count":0}],"isBlockCoverage":false},{"functionName":"setIfUndefined","ranges":[{"startOffset":823,"endOffset":952,"count":0}],"isBlockCoverage":false},{"functionName":"map","ranges":[{"startOffset":1230,"endOffset":1339,"count":0}],"isBlockCoverage":false},{"functionName":"any","ranges":[{"startOffset":1637,"endOffset":1752,"count":0}],"isBlockCoverage":false},{"functionName":"all","ranges":[{"startOffset":1990,"endOffset":2106,"count":0}],"isBlockCoverage":false}]},{"scriptId":"89","url":"file:///Users/andrewheumann/Dev/y-utility/node_modules/lib0/string.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3505,"count":1},{"startOffset":1271,"endOffset":1290,"count":0},{"startOffset":1291,"endOffset":1297,"count":0},{"startOffset":1542,"endOffset":1561,"count":0},{"startOffset":1562,"endOffset":1583,"count":0},{"startOffset":2265,"endOffset":2271,"count":0},{"startOffset":2272,"endOffset":2332,"count":0},{"startOffset":2376,"endOffset":2432,"count":0},{"startOffset":2434,"endOffset":3167,"count":0},{"startOffset":3168,"endOffset":3189,"count":0}],"isBlockCoverage":true},{"functionName":"toLowerCase","ranges":[{"startOffset":238,"endOffset":258,"count":0}],"isBlockCoverage":false},{"functionName":"trimLeft","ranges":[{"startOffset":364,"endOffset":397,"count":0}],"isBlockCoverage":false},{"functionName":"fromCamelCase","ranges":[{"startOffset":545,"endOffset":648,"count":0}],"isBlockCoverage":false},{"functionName":"utf8ByteLength","ranges":[{"startOffset":761,"endOffset":808,"count":0}],"isBlockCoverage":false},{"functionName":"_encodeUtf8Polyfill","ranges":[{"startOffset":900,"endOffset":1154,"count":0}],"isBlockCoverage":false},{"functionName":"_encodeUtf8Native","ranges":[{"startOffset":1388,"endOffset":1422,"count":0}],"isBlockCoverage":false},{"functionName":"_decodeUtf8Polyfill","ranges":[{"startOffset":1675,"endOffset":2178,"count":0}],"isBlockCoverage":false},{"functionName":"_decodeUtf8Native","ranges":[{"startOffset":2965,"endOffset":3028,"count":0}],"isBlockCoverage":false},{"functionName":"splice","ranges":[{"startOffset":3411,"endOffset":3504,"count":0}],"isBlockCoverage":false}]},{"scriptId":"91","url":"file:///Users/andrewheumann/Dev/y-utility/node_modules/lib0/storage.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1739,"count":1},{"startOffset":754,"endOffset":816,"count":0},{"startOffset":819,"endOffset":1738,"count":0}],"isBlockCoverage":true},{"functionName":"VarStoragePolyfill","ranges":[{"startOffset":216,"endOffset":261,"count":0}],"isBlockCoverage":false},{"functionName":"setItem","ranges":[{"startOffset":329,"endOffset":390,"count":0}],"isBlockCoverage":false},{"functionName":"getItem","ranges":[{"startOffset":431,"endOffset":479,"count":0}],"isBlockCoverage":false},{"functionName":"onChange","ranges":[{"startOffset":1269,"endOffset":1362,"count":0}],"isBlockCoverage":false},{"functionName":"offChange","ranges":[{"startOffset":1642,"endOffset":1738,"count":0}],"isBlockCoverage":false}]},{"scriptId":"92","url":"file:///Users/andrewheumann/Dev/y-utility/node_modules/lib0/conditions.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":218,"count":1}],"isBlockCoverage":true},{"functionName":"undefinedToNull","ranges":[{"startOffset":186,"endOffset":217,"count":0}],"isBlockCoverage":false}]},{"scriptId":"93","url":"file:///Users/andrewheumann/Dev/y-utility/node_modules/lib0/diff.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4774,"count":1}],"isBlockCoverage":true},{"functionName":"simpleDiffString","ranges":[{"startOffset":1221,"endOffset":2026,"count":0}],"isBlockCoverage":false},{"functionName":"simpleDiffArray","ranges":[{"startOffset":2688,"endOffset":3199,"count":0}],"isBlockCoverage":false},{"functionName":"simpleDiffStringWithCursor","ranges":[{"startOffset":3443,"endOffset":4773,"count":0}],"isBlockCoverage":false}]},{"scriptId":"94","url":"file:///Users/andrewheumann/Dev/y-utility/node_modules/lib0/function.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3025,"count":1}],"isBlockCoverage":true},{"functionName":"callAll","ranges":[{"startOffset":334,"endOffset":506,"count":0}],"isBlockCoverage":false},{"functionName":"nop","ranges":[{"startOffset":527,"endOffset":535,"count":0}],"isBlockCoverage":false},{"functionName":"apply","ranges":[{"startOffset":623,"endOffset":631,"count":0}],"isBlockCoverage":false},{"functionName":"id","ranges":[{"startOffset":708,"endOffset":714,"count":0}],"isBlockCoverage":false},{"functionName":"equalityStrict","ranges":[{"startOffset":825,"endOffset":842,"count":0}],"isBlockCoverage":false},{"functionName":"equalityFlat","ranges":[{"startOffset":979,"endOffset":1189,"count":0}],"isBlockCoverage":false},{"functionName":"equalityDeep","ranges":[{"startOffset":1307,"endOffset":2821,"count":0}],"isBlockCoverage":false},{"functionName":"isOneOf","ranges":[{"startOffset":2960,"endOffset":3003,"count":0}],"isBlockCoverage":false}]},{"scriptId":"95","url":"file:///Users/andrewheumann/Dev/y-utility/node_modules/lib0/math.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1249,"count":1}],"isBlockCoverage":true},{"functionName":"add","ranges":[{"startOffset":450,"endOffset":465,"count":0}],"isBlockCoverage":false},{"functionName":"min","ranges":[{"startOffset":600,"endOffset":623,"count":0}],"isBlockCoverage":false},{"functionName":"max","ranges":[{"startOffset":757,"endOffset":780,"count":0}],"isBlockCoverage":false},{"functionName":"exp10","ranges":[{"startOffset":1005,"endOffset":1029,"count":0}],"isBlockCoverage":false},{"functionName":"isNegativeZero","ranges":[{"startOffset":1216,"endOffset":1248,"count":0}],"isBlockCoverage":false}]},{"scriptId":"98","url":"file:///Users/andrewheumann/Dev/y-utility/node_modules/lib0/array.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2699,"count":1}],"isBlockCoverage":true},{"functionName":"last","ranges":[{"startOffset":254,"endOffset":280,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":349,"endOffset":383,"count":0}],"isBlockCoverage":false},{"functionName":"copy","ranges":[{"startOffset":473,"endOffset":513,"count":0}],"isBlockCoverage":false},{"functionName":"appendTo","ranges":[{"startOffset":652,"endOffset":737,"count":0}],"isBlockCoverage":false},{"functionName":"every","ranges":[{"startOffset":1178,"endOffset":1307,"count":0}],"isBlockCoverage":false},{"functionName":"some","ranges":[{"startOffset":1546,"endOffset":1674,"count":0}],"isBlockCoverage":false},{"functionName":"equalFlat","ranges":[{"startOffset":1811,"endOffset":1890,"count":0}],"isBlockCoverage":false},{"functionName":"flatten","ranges":[{"startOffset":2001,"endOffset":2053,"count":0}],"isBlockCoverage":false},{"functionName":"unique","ranges":[{"startOffset":2185,"endOffset":2211,"count":0}],"isBlockCoverage":false},{"functionName":"uniqueBy","ranges":[{"startOffset":2359,"endOffset":2698,"count":0}],"isBlockCoverage":false}]},{"scriptId":"100","url":"file:///Users/andrewheumann/Dev/y-utility/node_modules/lib0/time.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1229,"count":1}],"isBlockCoverage":true},{"functionName":"getDate","ranges":[{"startOffset":214,"endOffset":230,"count":0}],"isBlockCoverage":false},{"functionName":"humanizeDuration","ranges":[{"startOffset":570,"endOffset":1228,"count":0}],"isBlockCoverage":false}]},{"scriptId":"101","url":"file:///Users/andrewheumann/Dev/y-utility/node_modules/lib0/object.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2001,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":154,"endOffset":179,"count":0}],"isBlockCoverage":false},{"functionName":"forEach","ranges":[{"startOffset":433,"endOffset":500,"count":0}],"isBlockCoverage":false},{"functionName":"map","ranges":[{"startOffset":677,"endOffset":796,"count":0}],"isBlockCoverage":false},{"functionName":"length","ranges":[{"startOffset":883,"endOffset":906,"count":0}],"isBlockCoverage":false},{"functionName":"some","ranges":[{"startOffset":1035,"endOffset":1148,"count":0}],"isBlockCoverage":false},{"functionName":"isEmpty","ranges":[{"startOffset":1214,"endOffset":1285,"count":0}],"isBlockCoverage":false},{"functionName":"every","ranges":[{"startOffset":1415,"endOffset":1529,"count":0}],"isBlockCoverage":false},{"functionName":"hasProperty","ranges":[{"startOffset":1684,"endOffset":1744,"count":0}],"isBlockCoverage":false},{"functionName":"equalFlat","ranges":[{"startOffset":1866,"endOffset":2000,"count":0}],"isBlockCoverage":false}]},{"scriptId":"103","url":"perf_hooks.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":17887,"count":1}],"isBlockCoverage":false},{"functionName":"collectHttp2Stats","ranges":[{"startOffset":2975,"endOffset":4586,"count":0}],"isBlockCoverage":false},{"functionName":"now","ranges":[{"startOffset":4588,"endOffset":4674,"count":0}],"isBlockCoverage":false},{"functionName":"getMilestoneTimestamp","ranges":[{"startOffset":4676,"endOffset":4827,"count":0}],"isBlockCoverage":false},{"functionName":"PerformanceNodeTiming","ranges":[{"startOffset":4886,"endOffset":6705,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":5336,"endOffset":5390,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5482,"endOffset":5578,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5668,"endOffset":5762,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5856,"endOffset":5953,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6045,"endOffset":6141,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6232,"endOffset":6327,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6427,"endOffset":6544,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6635,"endOffset":6685,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6708,"endOffset":7066,"count":0}],"isBlockCoverage":false},{"functionName":"PerformanceObserverEntryList","ranges":[{"startOffset":7233,"endOffset":7420,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7424,"endOffset":7515,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7519,"endOffset":7987,"count":0}],"isBlockCoverage":false},{"functionName":"getEntries","ranges":[{"startOffset":8110,"endOffset":8160,"count":0}],"isBlockCoverage":false},{"functionName":"getEntriesByType","ranges":[{"startOffset":8164,"endOffset":8244,"count":0}],"isBlockCoverage":false},{"functionName":"getEntriesByName","ranges":[{"startOffset":8248,"endOffset":8362,"count":0}],"isBlockCoverage":false},{"functionName":"PerformanceObserver","ranges":[{"startOffset":8418,"endOffset":9150,"count":0}],"isBlockCoverage":false},{"functionName":"disconnect","ranges":[{"startOffset":9154,"endOffset":9623,"count":0}],"isBlockCoverage":false},{"functionName":"observe","ranges":[{"startOffset":9627,"endOffset":10826,"count":0}],"isBlockCoverage":false},{"functionName":"Performance","ranges":[{"startOffset":10852,"endOffset":10929,"count":1}],"isBlockCoverage":true},{"functionName":"get nodeTiming","ranges":[{"startOffset":10933,"endOffset":10978,"count":0}],"isBlockCoverage":false},{"functionName":"get timeOrigin","ranges":[{"startOffset":10982,"endOffset":11036,"count":0}],"isBlockCoverage":false},{"functionName":"now","ranges":[{"startOffset":11040,"endOffset":11082,"count":0}],"isBlockCoverage":false},{"functionName":"mark","ranges":[{"startOffset":11086,"endOffset":11177,"count":0}],"isBlockCoverage":false},{"functionName":"measure","ranges":[{"startOffset":11181,"endOffset":11583,"count":0}],"isBlockCoverage":false},{"functionName":"clearMarks","ranges":[{"startOffset":11587,"endOffset":11803,"count":0}],"isBlockCoverage":false},{"functionName":"timerify","ranges":[{"startOffset":11807,"endOffset":12496,"count":0}],"isBlockCoverage":false},{"functionName":"eventLoopUtilization","ranges":[{"startOffset":12500,"endOffset":13255,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":13259,"endOffset":13398,"count":0}],"isBlockCoverage":false},{"functionName":"getObserversList","ranges":[{"startOffset":13442,"endOffset":13605,"count":0}],"isBlockCoverage":false},{"functionName":"doNotify","ranges":[{"startOffset":13607,"endOffset":13911,"count":0}],"isBlockCoverage":false},{"functionName":"observersCallback","ranges":[{"startOffset":13986,"endOffset":14913,"count":0}],"isBlockCoverage":false},{"functionName":"filterTypes","ranges":[{"startOffset":14950,"endOffset":15037,"count":0}],"isBlockCoverage":false},{"functionName":"mapTypes","ranges":[{"startOffset":15039,"endOffset":15500,"count":0}],"isBlockCoverage":false},{"functionName":"getInsertLocation","ranges":[{"startOffset":15784,"endOffset":16132,"count":0}],"isBlockCoverage":false},{"functionName":"sortedInsert","ranges":[{"startOffset":16134,"endOffset":16577,"count":0}],"isBlockCoverage":false},{"functionName":"ELDHistogram","ranges":[{"startOffset":16620,"endOffset":16834,"count":0}],"isBlockCoverage":false},{"functionName":"enable","ranges":[{"startOffset":16837,"endOffset":16960,"count":0}],"isBlockCoverage":false},{"functionName":"disable","ranges":[{"startOffset":16963,"endOffset":17088,"count":0}],"isBlockCoverage":false},{"functionName":"monitorEventLoopDelay","ranges":[{"startOffset":17092,"endOffset":17662,"count":0}],"isBlockCoverage":false}]},{"scriptId":"104","url":"internal/histogram.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3912,"count":1}],"isBlockCoverage":false},{"functionName":"Histogram","ranges":[{"startOffset":716,"endOffset":818,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":822,"endOffset":1208,"count":0}],"isBlockCoverage":false},{"functionName":"get min","ranges":[{"startOffset":1212,"endOffset":1260,"count":0}],"isBlockCoverage":false},{"functionName":"get max","ranges":[{"startOffset":1264,"endOffset":1312,"count":0}],"isBlockCoverage":false},{"functionName":"get mean","ranges":[{"startOffset":1316,"endOffset":1366,"count":0}],"isBlockCoverage":false},{"functionName":"get exceeds","ranges":[{"startOffset":1370,"endOffset":1426,"count":0}],"isBlockCoverage":false},{"functionName":"get stddev","ranges":[{"startOffset":1430,"endOffset":1484,"count":0}],"isBlockCoverage":false},{"functionName":"percentile","ranges":[{"startOffset":1488,"endOffset":1830,"count":0}],"isBlockCoverage":false},{"functionName":"get percentiles","ranges":[{"startOffset":1834,"endOffset":1948,"count":0}],"isBlockCoverage":false},{"functionName":"reset","ranges":[{"startOffset":1952,"endOffset":1993,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1997,"endOffset":2046,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2050,"endOffset":2206,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2210,"endOffset":2270,"count":0}],"isBlockCoverage":false},{"functionName":"RecordableHistogram","ranges":[{"startOffset":2322,"endOffset":2442,"count":0}],"isBlockCoverage":false},{"functionName":"record","ranges":[{"startOffset":2446,"endOffset":2819,"count":0}],"isBlockCoverage":false},{"functionName":"recordDelta","ranges":[{"startOffset":2823,"endOffset":2876,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2880,"endOffset":3046,"count":0}],"isBlockCoverage":false},{"functionName":"InternalHistogram","ranges":[{"startOffset":3101,"endOffset":3199,"count":0}],"isBlockCoverage":false},{"functionName":"InternalRecordableHistogram","ranges":[{"startOffset":3264,"endOffset":3362,"count":0}],"isBlockCoverage":false},{"functionName":"createHistogram","ranges":[{"startOffset":3668,"endOffset":3758,"count":0}],"isBlockCoverage":false}]},{"scriptId":"105","url":"util.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9755,"count":1}],"isBlockCoverage":false},{"functionName":"isBoolean","ranges":[{"startOffset":2206,"endOffset":2268,"count":0}],"isBlockCoverage":false},{"functionName":"isNull","ranges":[{"startOffset":2352,"endOffset":2399,"count":0}],"isBlockCoverage":false},{"functionName":"isNullOrUndefined","ranges":[{"startOffset":2497,"endOffset":2576,"count":0}],"isBlockCoverage":false},{"functionName":"isNumber","ranges":[{"startOffset":2662,"endOffset":2722,"count":0}],"isBlockCoverage":false},{"functionName":"isString","ranges":[{"startOffset":2780,"endOffset":2840,"count":0}],"isBlockCoverage":false},{"functionName":"isSymbol","ranges":[{"startOffset":2926,"endOffset":2986,"count":0}],"isBlockCoverage":false},{"functionName":"isUndefined","ranges":[{"startOffset":3075,"endOffset":3132,"count":0}],"isBlockCoverage":false},{"functionName":"isObject","ranges":[{"startOffset":3229,"endOffset":3305,"count":0}],"isBlockCoverage":false},{"functionName":"isError","ranges":[{"startOffset":3388,"endOffset":3491,"count":0}],"isBlockCoverage":false},{"functionName":"isFunction","ranges":[{"startOffset":3579,"endOffset":3643,"count":0}],"isBlockCoverage":false},{"functionName":"isPrimitive","ranges":[{"startOffset":3778,"endOffset":3897,"count":0}],"isBlockCoverage":false},{"functionName":"pad","ranges":[{"startOffset":3949,"endOffset":4008,"count":0}],"isBlockCoverage":false},{"functionName":"timestamp","ranges":[{"startOffset":4174,"endOffset":4404,"count":0}],"isBlockCoverage":false},{"functionName":"log","ranges":[{"startOffset":4562,"endOffset":4715,"count":0}],"isBlockCoverage":false},{"functionName":"inherits","ranges":[{"startOffset":5451,"endOffset":6067,"count":0}],"isBlockCoverage":false},{"functionName":"_extend","ranges":[{"startOffset":6220,"endOffset":6508,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6556,"endOffset":6981,"count":0}],"isBlockCoverage":false},{"functionName":"callbackify","ranges":[{"startOffset":7234,"endOffset":8615,"count":0}],"isBlockCoverage":false},{"functionName":"getSystemErrorName","ranges":[{"startOffset":8669,"endOffset":8885,"count":0}],"isBlockCoverage":false},{"functionName":"isDeepStrictEqual","ranges":[{"startOffset":9286,"endOffset":9491,"count":0}],"isBlockCoverage":false}]},{"scriptId":"107","url":"file:///Users/andrewheumann/Dev/y-utility/node_modules/lib0/logging.common.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2177,"count":1}],"isBlockCoverage":true},{"functionName":"computeNoColorLoggingArgs","ranges":[{"startOffset":649,"endOffset":1042,"count":0}],"isBlockCoverage":false},{"functionName":"createModuleLogger","ranges":[{"startOffset":1347,"endOffset":2155,"count":0}],"isBlockCoverage":false}]},{"scriptId":"111","url":"file:///Users/andrewheumann/Dev/y-utility/node_modules/lib0/binary.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2038,"count":1}],"isBlockCoverage":true}]},{"scriptId":"112","url":"file:///Users/andrewheumann/Dev/y-utility/node_modules/lib0/set.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":472,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":86,"endOffset":101,"count":0}],"isBlockCoverage":false},{"functionName":"toArray","ranges":[{"startOffset":194,"endOffset":216,"count":0}],"isBlockCoverage":false},{"functionName":"first","ranges":[{"startOffset":300,"endOffset":347,"count":0}],"isBlockCoverage":false},{"functionName":"from","ranges":[{"startOffset":444,"endOffset":471,"count":0}],"isBlockCoverage":false}]},{"scriptId":"116","url":"file:///Users/andrewheumann/Dev/y-utility/node_modules/lib0/metric.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1563,"count":1}],"isBlockCoverage":true},{"functionName":"prefix","ranges":[{"startOffset":1077,"endOffset":1562,"count":0}],"isBlockCoverage":false}]},{"scriptId":"117","url":"file:///Users/andrewheumann/Dev/y-utility/node_modules/lib0/symbol.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":264,"count":1}],"isBlockCoverage":true},{"functionName":"isSymbol","ranges":[{"startOffset":237,"endOffset":263,"count":0}],"isBlockCoverage":false}]},{"scriptId":"119","url":"crypto.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7010,"count":1}],"isBlockCoverage":false},{"functionName":"createHash","ranges":[{"startOffset":3060,"endOffset":3142,"count":0}],"isBlockCoverage":false},{"functionName":"createCipher","ranges":[{"startOffset":3144,"endOffset":3244,"count":0}],"isBlockCoverage":false},{"functionName":"createCipheriv","ranges":[{"startOffset":3246,"endOffset":3348,"count":0}],"isBlockCoverage":false},{"functionName":"createDecipher","ranges":[{"startOffset":3350,"endOffset":3454,"count":0}],"isBlockCoverage":false},{"functionName":"createDecipheriv","ranges":[{"startOffset":3456,"endOffset":3562,"count":0}],"isBlockCoverage":false},{"functionName":"createDiffieHellman","ranges":[{"startOffset":3564,"endOffset":3720,"count":0}],"isBlockCoverage":false},{"functionName":"createDiffieHellmanGroup","ranges":[{"startOffset":3722,"endOffset":3804,"count":0}],"isBlockCoverage":false},{"functionName":"createECDH","ranges":[{"startOffset":3806,"endOffset":3862,"count":0}],"isBlockCoverage":false},{"functionName":"createHmac","ranges":[{"startOffset":3864,"endOffset":3946,"count":0}],"isBlockCoverage":false},{"functionName":"createSign","ranges":[{"startOffset":3948,"endOffset":4030,"count":0}],"isBlockCoverage":false},{"functionName":"createVerify","ranges":[{"startOffset":4032,"endOffset":4118,"count":0}],"isBlockCoverage":false},{"functionName":"setFipsForced","ranges":[{"startOffset":5070,"endOffset":5158,"count":0}],"isBlockCoverage":false},{"functionName":"getFipsForced","ranges":[{"startOffset":5160,"endOffset":5200,"count":0}],"isBlockCoverage":false}]},{"scriptId":"120","url":"internal/crypto/random.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9109,"count":1}],"isBlockCoverage":false},{"functionName":"assertOffset","ranges":[{"startOffset":751,"endOffset":1117,"count":0}],"isBlockCoverage":false},{"functionName":"assertSize","ranges":[{"startOffset":1119,"endOffset":1580,"count":0}],"isBlockCoverage":false},{"functionName":"randomBytes","ranges":[{"startOffset":1582,"endOffset":2136,"count":0}],"isBlockCoverage":false},{"functionName":"randomFillSync","ranges":[{"startOffset":2138,"endOffset":2613,"count":0}],"isBlockCoverage":false},{"functionName":"randomFill","ranges":[{"startOffset":2615,"endOffset":3592,"count":0}],"isBlockCoverage":false},{"functionName":"randomInt","ranges":[{"startOffset":3830,"endOffset":5710,"count":0}],"isBlockCoverage":false},{"functionName":"handleError","ranges":[{"startOffset":5712,"endOffset":5779,"count":0}],"isBlockCoverage":false},{"functionName":"getBufferedUUID","ranges":[{"startOffset":6242,"endOffset":6599,"count":0}],"isBlockCoverage":false},{"functionName":"randomUUID","ranges":[{"startOffset":6601,"endOffset":9011,"count":0}],"isBlockCoverage":false}]},{"scriptId":"121","url":"internal/crypto/pbkdf2.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2373,"count":1}],"isBlockCoverage":false},{"functionName":"pbkdf2","ranges":[{"startOffset":471,"endOffset":1342,"count":0}],"isBlockCoverage":false},{"functionName":"pbkdf2Sync","ranges":[{"startOffset":1344,"endOffset":1755,"count":0}],"isBlockCoverage":false},{"functionName":"check","ranges":[{"startOffset":1757,"endOffset":2160,"count":0}],"isBlockCoverage":false},{"functionName":"handleError","ranges":[{"startOffset":2162,"endOffset":2326,"count":0}],"isBlockCoverage":false}]},{"scriptId":"122","url":"internal/crypto/util.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2336,"count":1}],"isBlockCoverage":false},{"functionName":"setDefaultEncoding","ranges":[{"startOffset":704,"endOffset":765,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultEncoding","ranges":[{"startOffset":767,"endOffset":826,"count":0}],"isBlockCoverage":false},{"functionName":"toBuf","ranges":[{"startOffset":1001,"endOffset":1180,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1214,"endOffset":1257,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1291,"endOffset":1333,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1367,"endOffset":1409,"count":0}],"isBlockCoverage":false},{"functionName":"setEngine","ranges":[{"startOffset":1413,"endOffset":1779,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1824,"endOffset":2172,"count":0}],"isBlockCoverage":false}]},{"scriptId":"123","url":"internal/crypto/scrypt.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3695,"count":1}],"isBlockCoverage":false},{"functionName":"scrypt","ranges":[{"startOffset":587,"endOffset":1424,"count":0}],"isBlockCoverage":false},{"functionName":"scryptSync","ranges":[{"startOffset":1426,"endOffset":1851,"count":0}],"isBlockCoverage":false},{"functionName":"handleError","ranges":[{"startOffset":1853,"endOffset":2095,"count":0}],"isBlockCoverage":false},{"functionName":"check","ranges":[{"startOffset":2097,"endOffset":3652,"count":0}],"isBlockCoverage":false}]},{"scriptId":"124","url":"internal/crypto/keygen.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10082,"count":1}],"isBlockCoverage":false},{"functionName":"wrapKey","ranges":[{"startOffset":954,"endOffset":1082,"count":0}],"isBlockCoverage":false},{"functionName":"generateKeyPair","ranges":[{"startOffset":1084,"endOffset":1739,"count":0}],"isBlockCoverage":false},{"functionName":"generateKeyPairSync","ranges":[{"startOffset":1865,"endOffset":1979,"count":0}],"isBlockCoverage":false},{"functionName":"handleError","ranges":[{"startOffset":1981,"endOffset":2324,"count":0}],"isBlockCoverage":false},{"functionName":"parseKeyEncoding","ranges":[{"startOffset":2326,"endOffset":3450,"count":0}],"isBlockCoverage":false},{"functionName":"check","ranges":[{"startOffset":3452,"endOffset":10021,"count":0}],"isBlockCoverage":false}]},{"scriptId":"125","url":"internal/crypto/keys.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11160,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1526,"endOffset":3496,"count":1}],"isBlockCoverage":true},{"functionName":"KeyObject","ranges":[{"startOffset":1636,"endOffset":2152,"count":0}],"isBlockCoverage":false},{"functionName":"get type","ranges":[{"startOffset":2158,"endOffset":2205,"count":0}],"isBlockCoverage":false},{"functionName":"SecretKeyObject","ranges":[{"startOffset":2259,"endOffset":2317,"count":0}],"isBlockCoverage":false},{"functionName":"get symmetricKeySize","ranges":[{"startOffset":2323,"endOffset":2403,"count":0}],"isBlockCoverage":false},{"functionName":"export","ranges":[{"startOffset":2409,"endOffset":2462,"count":0}],"isBlockCoverage":false},{"functionName":"get asymmetricKeyType","ranges":[{"startOffset":2580,"endOffset":2732,"count":0}],"isBlockCoverage":false},{"functionName":"PublicKeyObject","ranges":[{"startOffset":2796,"endOffset":2854,"count":0}],"isBlockCoverage":false},{"functionName":"export","ranges":[{"startOffset":2860,"endOffset":3044,"count":0}],"isBlockCoverage":false},{"functionName":"PrivateKeyObject","ranges":[{"startOffset":3109,"endOffset":3168,"count":0}],"isBlockCoverage":false},{"functionName":"export","ranges":[{"startOffset":3174,"endOffset":3415,"count":0}],"isBlockCoverage":false},{"functionName":"parseKeyFormat","ranges":[{"startOffset":3500,"endOffset":3827,"count":0}],"isBlockCoverage":false},{"functionName":"parseKeyType","ranges":[{"startOffset":3829,"endOffset":4681,"count":0}],"isBlockCoverage":false},{"functionName":"option","ranges":[{"startOffset":4683,"endOffset":4779,"count":0}],"isBlockCoverage":false},{"functionName":"parseKeyFormatAndType","ranges":[{"startOffset":4781,"endOffset":5375,"count":0}],"isBlockCoverage":false},{"functionName":"isStringOrBuffer","ranges":[{"startOffset":5377,"endOffset":5471,"count":0}],"isBlockCoverage":false},{"functionName":"parseKeyEncoding","ranges":[{"startOffset":5473,"endOffset":6773,"count":0}],"isBlockCoverage":false},{"functionName":"parsePublicKeyEncoding","ranges":[{"startOffset":6972,"endOffset":7108,"count":0}],"isBlockCoverage":false},{"functionName":"parsePrivateKeyEncoding","ranges":[{"startOffset":7308,"endOffset":7424,"count":0}],"isBlockCoverage":false},{"functionName":"getKeyObjectHandle","ranges":[{"startOffset":7426,"endOffset":7988,"count":0}],"isBlockCoverage":false},{"functionName":"prepareAsymmetricKey","ranges":[{"startOffset":7990,"endOffset":9236,"count":0}],"isBlockCoverage":false},{"functionName":"preparePrivateKey","ranges":[{"startOffset":9238,"endOffset":9326,"count":0}],"isBlockCoverage":false},{"functionName":"preparePublicOrPrivateKey","ranges":[{"startOffset":9328,"endOffset":9423,"count":0}],"isBlockCoverage":false},{"functionName":"prepareSecretKey","ranges":[{"startOffset":9425,"endOffset":9916,"count":0}],"isBlockCoverage":false},{"functionName":"createSecretKey","ranges":[{"startOffset":9918,"endOffset":10203,"count":0}],"isBlockCoverage":false},{"functionName":"createPublicKey","ranges":[{"startOffset":10205,"endOffset":10442,"count":0}],"isBlockCoverage":false},{"functionName":"createPrivateKey","ranges":[{"startOffset":10444,"endOffset":10713,"count":0}],"isBlockCoverage":false},{"functionName":"isKeyObject","ranges":[{"startOffset":10715,"endOffset":10779,"count":0}],"isBlockCoverage":false}]},{"scriptId":"126","url":"internal/crypto/diffiehellman.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8338,"count":1}],"isBlockCoverage":false},{"functionName":"DiffieHellman","ranges":[{"startOffset":970,"endOffset":2743,"count":0}],"isBlockCoverage":false},{"functionName":"DiffieHellmanGroup","ranges":[{"startOffset":2746,"endOffset":3050,"count":0}],"isBlockCoverage":false},{"functionName":"dhGenerateKeys","ranges":[{"startOffset":3161,"endOffset":3323,"count":0}],"isBlockCoverage":false},{"functionName":"dhComputeSecret","ranges":[{"startOffset":3437,"endOffset":3761,"count":0}],"isBlockCoverage":false},{"functionName":"dhGetPrime","ranges":[{"startOffset":3860,"endOffset":4016,"count":0}],"isBlockCoverage":false},{"functionName":"dhGetGenerator","ranges":[{"startOffset":4127,"endOffset":4299,"count":0}],"isBlockCoverage":false},{"functionName":"dhGetPublicKey","ranges":[{"startOffset":4410,"endOffset":4570,"count":0}],"isBlockCoverage":false},{"functionName":"dhGetPrivateKey","ranges":[{"startOffset":4684,"endOffset":4846,"count":0}],"isBlockCoverage":false},{"functionName":"setPublicKey","ranges":[{"startOffset":4888,"endOffset":5042,"count":0}],"isBlockCoverage":false},{"functionName":"setPrivateKey","ranges":[{"startOffset":5086,"endOffset":5242,"count":0}],"isBlockCoverage":false},{"functionName":"ECDH","ranges":[{"startOffset":5246,"endOffset":5400,"count":0}],"isBlockCoverage":false},{"functionName":"generateKeys","ranges":[{"startOffset":5711,"endOffset":5833,"count":0}],"isBlockCoverage":false},{"functionName":"getPublicKey","ranges":[{"startOffset":5866,"endOffset":6064,"count":0}],"isBlockCoverage":false},{"functionName":"convertKey","ranges":[{"startOffset":6085,"endOffset":6603,"count":0}],"isBlockCoverage":false},{"functionName":"encode","ranges":[{"startOffset":6606,"endOffset":6741,"count":0}],"isBlockCoverage":false},{"functionName":"getFormat","ranges":[{"startOffset":6743,"endOffset":7066,"count":0}],"isBlockCoverage":false},{"functionName":"diffieHellman","ranges":[{"startOffset":7136,"endOffset":8251,"count":0}],"isBlockCoverage":false}]},{"scriptId":"127","url":"internal/crypto/cipher.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8473,"count":1}],"isBlockCoverage":false},{"functionName":"rsaFunctionFor","ranges":[{"startOffset":1054,"endOffset":1914,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1122,"endOffset":1911,"count":0}],"isBlockCoverage":false},{"functionName":"getDecoder","ranges":[{"startOffset":2415,"endOffset":2732,"count":0}],"isBlockCoverage":false},{"functionName":"getUIntOption","ranges":[{"startOffset":2734,"endOffset":2955,"count":0}],"isBlockCoverage":false},{"functionName":"createCipherBase","ranges":[{"startOffset":2957,"endOffset":3366,"count":0}],"isBlockCoverage":false},{"functionName":"createCipher","ranges":[{"startOffset":3368,"endOffset":3590,"count":0}],"isBlockCoverage":false},{"functionName":"createCipherWithIV","ranges":[{"startOffset":3592,"endOffset":3851,"count":0}],"isBlockCoverage":false},{"functionName":"Cipher","ranges":[{"startOffset":3853,"endOffset":4043,"count":0}],"isBlockCoverage":false},{"functionName":"_transform","ranges":[{"startOffset":4186,"endOffset":4302,"count":0}],"isBlockCoverage":false},{"functionName":"_flush","ranges":[{"startOffset":4331,"endOffset":4469,"count":0}],"isBlockCoverage":false},{"functionName":"update","ranges":[{"startOffset":4498,"endOffset":5148,"count":0}],"isBlockCoverage":false},{"functionName":"final","ranges":[{"startOffset":5177,"endOffset":5480,"count":0}],"isBlockCoverage":false},{"functionName":"setAutoPadding","ranges":[{"startOffset":5518,"endOffset":5665,"count":0}],"isBlockCoverage":false},{"functionName":"getAuthTag","ranges":[{"startOffset":5698,"endOffset":5858,"count":0}],"isBlockCoverage":false},{"functionName":"setAuthTag","ranges":[{"startOffset":5862,"endOffset":6205,"count":0}],"isBlockCoverage":false},{"functionName":"setAAD","ranges":[{"startOffset":6233,"endOffset":6660,"count":0}],"isBlockCoverage":false},{"functionName":"Cipheriv","ranges":[{"startOffset":6663,"endOffset":6862,"count":0}],"isBlockCoverage":false},{"functionName":"addCipherPrototypeFunctions","ranges":[{"startOffset":6864,"endOffset":7455,"count":3},{"startOffset":7260,"endOffset":7333,"count":1},{"startOffset":7333,"endOffset":7395,"count":2}],"isBlockCoverage":true},{"functionName":"Decipher","ranges":[{"startOffset":7611,"endOffset":7808,"count":0}],"isBlockCoverage":false},{"functionName":"Decipheriv","ranges":[{"startOffset":7965,"endOffset":8171,"count":0}],"isBlockCoverage":false}]},{"scriptId":"128","url":"internal/streams/lazy_transform.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1669,"count":1}],"isBlockCoverage":false},{"functionName":"LazyTransform","ranges":[{"startOffset":468,"endOffset":530,"count":0}],"isBlockCoverage":false},{"functionName":"makeGetter","ranges":[{"startOffset":662,"endOffset":970,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":699,"endOffset":967,"count":0}],"isBlockCoverage":false},{"functionName":"makeSetter","ranges":[{"startOffset":972,"endOffset":1167,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1009,"endOffset":1164,"count":0}],"isBlockCoverage":false}]},{"scriptId":"129","url":"stream.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2089,"count":1}],"isBlockCoverage":false},{"functionName":"_uint8ArrayToBuffer","ranges":[{"startOffset":1880,"endOffset":2087,"count":0}],"isBlockCoverage":false}]},{"scriptId":"130","url":"internal/streams/pipeline.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7139,"count":1}],"isBlockCoverage":false},{"functionName":"destroyer","ranges":[{"startOffset":613,"endOffset":2005,"count":0}],"isBlockCoverage":false},{"functionName":"popCallback","ranges":[{"startOffset":2007,"endOffset":2378,"count":0}],"isBlockCoverage":false},{"functionName":"makeAsyncIterable","ranges":[{"startOffset":2380,"endOffset":2656,"count":0}],"isBlockCoverage":false},{"functionName":"fromReadable","ranges":[{"startOffset":2658,"endOffset":2822,"count":0}],"isBlockCoverage":false},{"functionName":"pump","ranges":[{"startOffset":2824,"endOffset":3301,"count":0}],"isBlockCoverage":false},{"functionName":"pipeline","ranges":[{"startOffset":3303,"endOffset":7110,"count":0}],"isBlockCoverage":false}]},{"scriptId":"131","url":"internal/streams/destroy.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4089,"count":1}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":123,"endOffset":1484,"count":0}],"isBlockCoverage":false},{"functionName":"emitErrorCloseNT","ranges":[{"startOffset":1486,"endOffset":1573,"count":0}],"isBlockCoverage":false},{"functionName":"emitCloseNT","ranges":[{"startOffset":1575,"endOffset":1793,"count":0}],"isBlockCoverage":false},{"functionName":"emitErrorNT","ranges":[{"startOffset":1795,"endOffset":2082,"count":0}],"isBlockCoverage":false},{"functionName":"undestroy","ranges":[{"startOffset":2084,"endOffset":2647,"count":0}],"isBlockCoverage":false},{"functionName":"errorOrDestroy","ranges":[{"startOffset":2649,"endOffset":3593,"count":0}],"isBlockCoverage":false},{"functionName":"isRequest","ranges":[{"startOffset":3595,"endOffset":3700,"count":0}],"isBlockCoverage":false},{"functionName":"destroyer","ranges":[{"startOffset":3735,"endOffset":4011,"count":0}],"isBlockCoverage":false}]},{"scriptId":"132","url":"internal/streams/end-of-stream.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5843,"count":1}],"isBlockCoverage":false},{"functionName":"isRequest","ranges":[{"startOffset":280,"endOffset":375,"count":0}],"isBlockCoverage":false},{"functionName":"isReadable","ranges":[{"startOffset":377,"endOffset":535,"count":0}],"isBlockCoverage":false},{"functionName":"isWritable","ranges":[{"startOffset":537,"endOffset":695,"count":0}],"isBlockCoverage":false},{"functionName":"isWritableFinished","ranges":[{"startOffset":697,"endOffset":934,"count":0}],"isBlockCoverage":false},{"functionName":"nop","ranges":[{"startOffset":936,"endOffset":953,"count":0}],"isBlockCoverage":false},{"functionName":"isReadableEnded","ranges":[{"startOffset":955,"endOffset":1188,"count":0}],"isBlockCoverage":false},{"functionName":"eos","ranges":[{"startOffset":1190,"endOffset":5819,"count":0}],"isBlockCoverage":false}]},{"scriptId":"133","url":"internal/streams/legacy.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2934,"count":1}],"isBlockCoverage":false},{"functionName":"Stream","ranges":[{"startOffset":112,"endOffset":160,"count":0}],"isBlockCoverage":false},{"functionName":"Stream.pipe","ranges":[{"startOffset":274,"endOffset":2076,"count":0}],"isBlockCoverage":false},{"functionName":"prependListener","ranges":[{"startOffset":2079,"endOffset":2886,"count":0}],"isBlockCoverage":false}]},{"scriptId":"134","url":"internal/streams/readable.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":39985,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1601,"endOffset":1626,"count":0}],"isBlockCoverage":false},{"functionName":"nop","ranges":[{"startOffset":2223,"endOffset":2240,"count":0}],"isBlockCoverage":false},{"functionName":"ReadableState","ranges":[{"startOffset":2283,"endOffset":5889,"count":0}],"isBlockCoverage":false},{"functionName":"Readable","ranges":[{"startOffset":5892,"endOffset":6462,"count":0}],"isBlockCoverage":false},{"functionName":"Readable._destroy","ranges":[{"startOffset":6599,"endOffset":6631,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.<computed>","ranges":[{"startOffset":6682,"endOffset":6720,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.push","ranges":[{"startOffset":6949,"endOffset":7035,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.unshift","ranges":[{"startOffset":7131,"endOffset":7216,"count":0}],"isBlockCoverage":false},{"functionName":"readableAddChunk","ranges":[{"startOffset":7219,"endOffset":9472,"count":0}],"isBlockCoverage":false},{"functionName":"addChunk","ranges":[{"startOffset":9474,"endOffset":10204,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.isPaused","ranges":[{"startOffset":10236,"endOffset":10348,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.setEncoding","ranges":[{"startOffset":10412,"endOffset":11056,"count":0}],"isBlockCoverage":false},{"functionName":"computeNewHighWaterMark","ranges":[{"startOffset":11117,"endOffset":11482,"count":0}],"isBlockCoverage":false},{"functionName":"howMuchToRead","ranges":[{"startOffset":11595,"endOffset":11989,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.read","ranges":[{"startOffset":12086,"endOffset":16352,"count":0}],"isBlockCoverage":false},{"functionName":"onEofChunk","ranges":[{"startOffset":16355,"endOffset":17175,"count":0}],"isBlockCoverage":false},{"functionName":"emitReadable","ranges":[{"startOffset":17376,"endOffset":17703,"count":0}],"isBlockCoverage":false},{"functionName":"emitReadable_","ranges":[{"startOffset":17705,"endOffset":18341,"count":0}],"isBlockCoverage":false},{"functionName":"maybeReadMore","ranges":[{"startOffset":18691,"endOffset":18847,"count":0}],"isBlockCoverage":false},{"functionName":"maybeReadMore_","ranges":[{"startOffset":18849,"endOffset":20641,"count":0}],"isBlockCoverage":false},{"functionName":"Readable._read","ranges":[{"startOffset":20912,"endOffset":20978,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.pipe","ranges":[{"startOffset":21007,"endOffset":25484,"count":0}],"isBlockCoverage":false},{"functionName":"pipeOnDrain","ranges":[{"startOffset":25487,"endOffset":26136,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.unpipe","ranges":[{"startOffset":26167,"endOffset":26853,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.on","ranges":[{"startOffset":26979,"endOffset":27886,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.removeListener","ranges":[{"startOffset":27981,"endOffset":28495,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.removeAllListeners","ranges":[{"startOffset":28598,"endOffset":29136,"count":0}],"isBlockCoverage":false},{"functionName":"updateReadableListening","ranges":[{"startOffset":29139,"endOffset":29649,"count":0}],"isBlockCoverage":false},{"functionName":"nReadingNextTick","ranges":[{"startOffset":29651,"endOffset":29739,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.resume","ranges":[{"startOffset":29893,"endOffset":30218,"count":0}],"isBlockCoverage":false},{"functionName":"resume","ranges":[{"startOffset":30221,"endOffset":30371,"count":0}],"isBlockCoverage":false},{"functionName":"resume_","ranges":[{"startOffset":30373,"endOffset":30624,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.pause","ranges":[{"startOffset":30653,"endOffset":30920,"count":0}],"isBlockCoverage":false},{"functionName":"flow","ranges":[{"startOffset":30923,"endOffset":31070,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.wrap","ranges":[{"startOffset":31254,"endOffset":33069,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.<computed>","ranges":[{"startOffset":33114,"endOffset":33495,"count":0}],"isBlockCoverage":false},{"functionName":"createAsyncIterator","ranges":[{"startOffset":33498,"endOffset":34791,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":34989,"endOffset":35378,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":35384,"endOffset":35514,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":35574,"endOffset":35786,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":35852,"endOffset":35918,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":35977,"endOffset":36059,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":36119,"endOffset":36179,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":36190,"endOffset":36299,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":36353,"endOffset":36407,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":36465,"endOffset":36553,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":36609,"endOffset":36694,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":36743,"endOffset":36877,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":36883,"endOffset":37172,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":37225,"endOffset":37313,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":37432,"endOffset":37477,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":37535,"endOffset":37586,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":37592,"endOffset":37641,"count":0}],"isBlockCoverage":false},{"functionName":"fromList","ranges":[{"startOffset":37945,"endOffset":38507,"count":0}],"isBlockCoverage":false},{"functionName":"endReadable","ranges":[{"startOffset":38509,"endOffset":38730,"count":0}],"isBlockCoverage":false},{"functionName":"endReadableNT","ranges":[{"startOffset":38732,"endOffset":39657,"count":0}],"isBlockCoverage":false},{"functionName":"endWritableNT","ranges":[{"startOffset":39659,"endOffset":39819,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.from","ranges":[{"startOffset":39837,"endOffset":39983,"count":0}],"isBlockCoverage":false}]},{"scriptId":"135","url":"internal/streams/buffer_list.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3798,"count":1}],"isBlockCoverage":false},{"functionName":"BufferList","ranges":[{"startOffset":204,"endOffset":288,"count":0}],"isBlockCoverage":false},{"functionName":"push","ranges":[{"startOffset":292,"endOffset":479,"count":0}],"isBlockCoverage":false},{"functionName":"unshift","ranges":[{"startOffset":483,"endOffset":641,"count":0}],"isBlockCoverage":false},{"functionName":"shift","ranges":[{"startOffset":645,"endOffset":872,"count":0}],"isBlockCoverage":false},{"functionName":"clear","ranges":[{"startOffset":876,"endOffset":944,"count":0}],"isBlockCoverage":false},{"functionName":"join","ranges":[{"startOffset":948,"endOffset":1119,"count":0}],"isBlockCoverage":false},{"functionName":"concat","ranges":[{"startOffset":1123,"endOffset":1386,"count":0}],"isBlockCoverage":false},{"functionName":"consume","ranges":[{"startOffset":1470,"endOffset":1924,"count":0}],"isBlockCoverage":false},{"functionName":"first","ranges":[{"startOffset":1928,"endOffset":1968,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports","ranges":[{"startOffset":1972,"endOffset":2068,"count":0}],"isBlockCoverage":false},{"functionName":"_getString","ranges":[{"startOffset":2143,"endOffset":2738,"count":0}],"isBlockCoverage":false},{"functionName":"_getBuffer","ranges":[{"startOffset":2808,"endOffset":3518,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports","ranges":[{"startOffset":3599,"endOffset":3794,"count":0}],"isBlockCoverage":false}]},{"scriptId":"136","url":"internal/streams/state.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":881,"count":1}],"isBlockCoverage":false},{"functionName":"highWaterMarkFrom","ranges":[{"startOffset":142,"endOffset":309,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultHighWaterMark","ranges":[{"startOffset":311,"endOffset":397,"count":0}],"isBlockCoverage":false},{"functionName":"getHighWaterMark","ranges":[{"startOffset":399,"endOffset":811,"count":0}],"isBlockCoverage":false}]},{"scriptId":"137","url":"internal/streams/writable.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":22853,"count":1}],"isBlockCoverage":false},{"functionName":"nop","ranges":[{"startOffset":2230,"endOffset":2247,"count":0}],"isBlockCoverage":false},{"functionName":"WritableState","ranges":[{"startOffset":2249,"endOffset":6413,"count":0}],"isBlockCoverage":false},{"functionName":"resetBuffer","ranges":[{"startOffset":6415,"endOffset":6547,"count":0}],"isBlockCoverage":false},{"functionName":"getBuffer","ranges":[{"startOffset":6585,"endOffset":6659,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6736,"endOffset":6801,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":7128,"endOffset":7342,"count":0}],"isBlockCoverage":false},{"functionName":"realHasInstance","ranges":[{"startOffset":7378,"endOffset":7435,"count":0}],"isBlockCoverage":false},{"functionName":"Writable","ranges":[{"startOffset":7440,"endOffset":8612,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.pipe","ranges":[{"startOffset":8708,"endOffset":8776,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.write","ranges":[{"startOffset":8806,"endOffset":10015,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.cork","ranges":[{"startOffset":10044,"endOffset":10090,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.uncork","ranges":[{"startOffset":10121,"endOffset":10276,"count":0}],"isBlockCoverage":false},{"functionName":"setDefaultEncoding","ranges":[{"startOffset":10319,"endOffset":10630,"count":0}],"isBlockCoverage":false},{"functionName":"writeOrBuffer","ranges":[{"startOffset":10820,"endOffset":11811,"count":0}],"isBlockCoverage":false},{"functionName":"doWrite","ranges":[{"startOffset":11813,"endOffset":12191,"count":0}],"isBlockCoverage":false},{"functionName":"onwriteError","ranges":[{"startOffset":12193,"endOffset":12613,"count":0}],"isBlockCoverage":false},{"functionName":"onwrite","ranges":[{"startOffset":12615,"endOffset":14254,"count":0}],"isBlockCoverage":false},{"functionName":"afterWriteTick","ranges":[{"startOffset":14256,"endOffset":14395,"count":0}],"isBlockCoverage":false},{"functionName":"afterWrite","ranges":[{"startOffset":14397,"endOffset":14807,"count":0}],"isBlockCoverage":false},{"functionName":"errorBuffer","ranges":[{"startOffset":14879,"endOffset":15200,"count":0}],"isBlockCoverage":false},{"functionName":"clearBuffer","ranges":[{"startOffset":15266,"endOffset":16699,"count":0}],"isBlockCoverage":false},{"functionName":"Writable._write","ranges":[{"startOffset":16729,"endOffset":16898,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.end","ranges":[{"startOffset":16962,"endOffset":18146,"count":0}],"isBlockCoverage":false},{"functionName":"needFinish","ranges":[{"startOffset":18149,"endOffset":18362,"count":0}],"isBlockCoverage":false},{"functionName":"callFinal","ranges":[{"startOffset":18364,"endOffset":18624,"count":0}],"isBlockCoverage":false},{"functionName":"prefinish","ranges":[{"startOffset":18626,"endOffset":18974,"count":0}],"isBlockCoverage":false},{"functionName":"finishMaybe","ranges":[{"startOffset":18976,"endOffset":19303,"count":0}],"isBlockCoverage":false},{"functionName":"finish","ranges":[{"startOffset":19305,"endOffset":19923,"count":0}],"isBlockCoverage":false},{"functionName":"onFinished","ranges":[{"startOffset":19989,"endOffset":20453,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":20520,"endOffset":20607,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":20613,"endOffset":20795,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":20820,"endOffset":21212,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":21218,"endOffset":21352,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":21385,"endOffset":21471,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":21506,"endOffset":21594,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":21625,"endOffset":21707,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":21737,"endOffset":21821,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":21855,"endOffset":22013,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":22051,"endOffset":22135,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":22166,"endOffset":22246,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":22277,"endOffset":22354,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.destroy","ranges":[{"startOffset":22430,"endOffset":22642,"count":0}],"isBlockCoverage":false},{"functionName":"Writable._destroy","ranges":[{"startOffset":22730,"endOffset":22762,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.<computed>","ranges":[{"startOffset":22813,"endOffset":22851,"count":0}],"isBlockCoverage":false}]},{"scriptId":"138","url":"internal/streams/duplex.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3759,"count":1}],"isBlockCoverage":false},{"functionName":"Duplex","ranges":[{"startOffset":1936,"endOffset":2360,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3271,"endOffset":3483,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":3489,"endOffset":3750,"count":0}],"isBlockCoverage":false}]},{"scriptId":"139","url":"internal/streams/transform.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8217,"count":1}],"isBlockCoverage":false},{"functionName":"afterTransform","ranges":[{"startOffset":4032,"endOffset":4550,"count":0}],"isBlockCoverage":false},{"functionName":"Transform","ranges":[{"startOffset":4553,"endOffset":5382,"count":0}],"isBlockCoverage":false},{"functionName":"prefinish","ranges":[{"startOffset":5384,"endOffset":5596,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5691,"endOffset":5741,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5838,"endOffset":5890,"count":0}],"isBlockCoverage":false},{"functionName":"Transform.push","ranges":[{"startOffset":5988,"endOffset":6124,"count":0}],"isBlockCoverage":false},{"functionName":"Transform._transform","ranges":[{"startOffset":6607,"endOffset":6696,"count":0}],"isBlockCoverage":false},{"functionName":"Transform._write","ranges":[{"startOffset":6728,"endOffset":7067,"count":0}],"isBlockCoverage":false},{"functionName":"Transform._read","ranges":[{"startOffset":7239,"endOffset":7613,"count":0}],"isBlockCoverage":false},{"functionName":"Transform._destroy","ranges":[{"startOffset":7648,"endOffset":7745,"count":0}],"isBlockCoverage":false},{"functionName":"done","ranges":[{"startOffset":7749,"endOffset":8216,"count":0}],"isBlockCoverage":false}]},{"scriptId":"140","url":"internal/streams/passthrough.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1762,"count":1}],"isBlockCoverage":false},{"functionName":"PassThrough","ranges":[{"startOffset":1529,"endOffset":1671,"count":0}],"isBlockCoverage":false},{"functionName":"PassThrough._transform","ranges":[{"startOffset":1708,"endOffset":1760,"count":0}],"isBlockCoverage":false}]},{"scriptId":"141","url":"internal/crypto/sig.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5946,"count":1}],"isBlockCoverage":false},{"functionName":"Sign","ranges":[{"startOffset":729,"endOffset":977,"count":0}],"isBlockCoverage":false},{"functionName":"_write","ranges":[{"startOffset":1100,"endOffset":1192,"count":0}],"isBlockCoverage":false},{"functionName":"update","ranges":[{"startOffset":1219,"endOffset":1580,"count":0}],"isBlockCoverage":false},{"functionName":"getPadding","ranges":[{"startOffset":1583,"endOffset":1658,"count":0}],"isBlockCoverage":false},{"functionName":"getSaltLength","ranges":[{"startOffset":1660,"endOffset":1741,"count":0}],"isBlockCoverage":false},{"functionName":"getDSASignatureEncoding","ranges":[{"startOffset":1743,"endOffset":2087,"count":0}],"isBlockCoverage":false},{"functionName":"getIntOption","ranges":[{"startOffset":2089,"endOffset":2321,"count":0}],"isBlockCoverage":false},{"functionName":"sign","ranges":[{"startOffset":2345,"endOffset":3008,"count":0}],"isBlockCoverage":false},{"functionName":"signOneShot","ranges":[{"startOffset":3011,"endOffset":3809,"count":0}],"isBlockCoverage":false},{"functionName":"Verify","ranges":[{"startOffset":3811,"endOffset":4067,"count":0}],"isBlockCoverage":false},{"functionName":"verify","ranges":[{"startOffset":4295,"endOffset":4929,"count":0}],"isBlockCoverage":false},{"functionName":"verifyOneShot","ranges":[{"startOffset":4932,"endOffset":5873,"count":0}],"isBlockCoverage":false}]},{"scriptId":"142","url":"internal/crypto/hash.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3801,"count":1}],"isBlockCoverage":false},{"functionName":"Hash","ranges":[{"startOffset":764,"endOffset":1272,"count":0}],"isBlockCoverage":false},{"functionName":"copy","ranges":[{"startOffset":1403,"endOffset":1571,"count":0}],"isBlockCoverage":false},{"functionName":"_transform","ranges":[{"startOffset":1602,"endOffset":1707,"count":0}],"isBlockCoverage":false},{"functionName":"_flush","ranges":[{"startOffset":1734,"endOffset":1814,"count":0}],"isBlockCoverage":false},{"functionName":"update","ranges":[{"startOffset":1841,"endOffset":2353,"count":0}],"isBlockCoverage":false},{"functionName":"digest","ranges":[{"startOffset":2381,"endOffset":2726,"count":0}],"isBlockCoverage":false},{"functionName":"Hmac","ranges":[{"startOffset":2730,"endOffset":3058,"count":0}],"isBlockCoverage":false},{"functionName":"digest","ranges":[{"startOffset":3239,"endOffset":3658,"count":0}],"isBlockCoverage":false}]},{"scriptId":"143","url":"internal/crypto/certificate.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1119,"count":1}],"isBlockCoverage":false},{"functionName":"verifySpkac","ranges":[{"startOffset":247,"endOffset":345,"count":0}],"isBlockCoverage":false},{"functionName":"exportPublicKey","ranges":[{"startOffset":347,"endOffset":476,"count":0}],"isBlockCoverage":false},{"functionName":"exportChallenge","ranges":[{"startOffset":478,"endOffset":607,"count":0}],"isBlockCoverage":false},{"functionName":"Certificate","ranges":[{"startOffset":695,"endOffset":789,"count":0}],"isBlockCoverage":false}]},{"scriptId":"147","url":"internal/tty.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6367,"count":1}],"isBlockCoverage":false},{"functionName":"warnOnDeactivatedColors","ranges":[{"startOffset":2548,"endOffset":3000,"count":0}],"isBlockCoverage":false},{"functionName":"getColorDepth","ranges":[{"startOffset":3158,"endOffset":6039,"count":1},{"startOffset":3362,"endOffset":3720,"count":0},{"startOffset":4061,"endOffset":4087,"count":0},{"startOffset":4125,"endOffset":4683,"count":0},{"startOffset":4701,"endOffset":4729,"count":0},{"startOffset":4745,"endOffset":4929,"count":0},{"startOffset":4964,"endOffset":5085,"count":0},{"startOffset":5121,"endOffset":5313,"count":0},{"startOffset":5318,"endOffset":5335,"count":0},{"startOffset":5340,"endOffset":5380,"count":0},{"startOffset":5385,"endOffset":5432,"count":0},{"startOffset":5474,"endOffset":5502,"count":0},{"startOffset":5532,"endOffset":6038,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5840,"endOffset":5884,"count":0}],"isBlockCoverage":false},{"functionName":"hasColors","ranges":[{"startOffset":6041,"endOffset":6314,"count":1},{"startOffset":6128,"endOffset":6176,"count":0},{"startOffset":6217,"endOffset":6268,"count":0}],"isBlockCoverage":true}]}],"timestamp":521256.199626,"source-map-cache":{"file:///Users/andrewheumann/Dev/y-utility/node_modules/yjs/dist/yjs.mjs":{"lineLengths":[45,36,34,32,42,42,38,40,38,36,38,35,40,32,40,34,42,38,0,3,99,2,93,46,2,29,3,44,5,22,27,5,33,12,20,31,3,1,0,18,5,26,24,5,28,7,21,7,23,7,21,7,19,3,1,0,3,100,87,46,121,115,3,17,18,7,44,7,29,3,1,0,3,52,2,35,24,36,2,12,3,53,45,96,46,29,66,5,5,0,3,33,24,24,2,11,12,3,37,15,29,25,52,30,31,28,39,23,7,26,12,27,5,3,13,2,0,3,24,17,20,2,11,12,3,31,40,65,2,0,3,24,2,11,12,3,37,30,43,58,31,67,65,13,46,31,28,49,76,14,20,26,9,12,7,5,20,5,2,0,3,32,40,3,32,33,49,53,40,68,81,11,36,11,38,53,65,9,41,7,7,3,32,15,2,0,3,24,25,24,25,2,11,12,3,55,122,2,0,46,0,3,26,50,2,11,12,3,46,31,43,7,32,7,23,46,32,27,38,32,37,108,31,11,9,49,7,5,29,38,5,5,11,2,0,3,45,24,2,11,12,3,41,62,0,67,34,32,37,30,57,33,54,37,32,41,37,7,7,2,0,3,45,22,2,11,12,3,34,29,63,40,28,61,70,30,106,49,81,7,5,3,11,2,0,3,155,3,0,3,45,35,29,151,2,11,12,3,64,38,63,40,28,61,70,52,42,47,42,51,26,31,71,9,48,11,93,23,11,21,36,44,57,96,65,9,40,23,36,43,34,63,101,15,41,13,18,17,11,9,14,69,7,5,3,37,37,65,36,28,3,13,2,0,3,12,3,0,42,0,3,28,86,139,90,163,184,173,152,3,0,3,51,30,3,30,5,40,5,154,12,17,29,42,21,37,7,53,7,27,35,7,33,7,29,7,33,7,35,7,23,7,29,7,111,20,7,22,33,29,21,7,126,165,6,22,7,26,7,95,90,103,101,40,7,26,7,91,7,49,29,29,22,9,7,66,9,34,9,42,58,41,20,9,8,36,7,33,48,49,7,66,27,30,7,7,7,78,61,60,7,45,3,0,5,109,4,96,4,48,5,11,28,44,69,44,21,5,27,3,0,17,23,3,0,21,65,3,0,5,77,80,75,17,4,16,93,102,14,4,12,5,31,36,3,0,5,31,4,75,42,58,4,84,4,22,98,69,4,13,26,25,40,41,8,4,25,111,83,4,12,5,46,61,19,38,31,14,7,36,73,36,21,40,27,56,42,25,25,11,11,31,57,23,9,33,32,33,16,14,107,7,5,15,3,0,5,16,27,24,4,12,5,24,17,33,3,0,5,27,20,4,12,5,23,17,32,3,0,5,16,27,22,4,12,5,22,17,31,3,0,5,27,27,4,12,5,30,17,39,3,0,5,88,75,4,92,4,34,5,13,7,34,7,19,0,40,32,7,0,14,3,0,5,60,5,14,65,28,24,24,63,85,31,69,32,28,44,9,45,21,5,35,33,20,3,0,5,30,36,5,21,27,3,0,5,30,24,5,22,28,3,1,0,19,5,38,5,25,31,3,0,20,10,3,0,5,21,5,18,49,3,0,5,21,5,16,49,3,1,0,43,5,17,5,17,99,3,0,5,17,5,18,99,3,0,5,29,91,5,17,49,3,0,5,52,5,15,47,3,0,5,21,5,17,51,3,0,5,28,5,21,55,3,0,5,52,5,18,49,3,0,5,61,4,25,5,14,49,3,0,5,18,5,14,45,3,0,5,25,5,14,78,3,0,5,70,4,18,5,15,63,3,0,5,21,5,14,51,3,1,0,19,5,38,5,25,7,15,7,23,31,3,0,20,23,3,0,5,21,5,18,61,25,3,0,5,21,5,16,60,27,15,3,1,0,43,5,38,5,25,19,7,77,46,6,28,7,19,74,98,93,99,100,104,89,110,94,90,3,0,5,17,5,17,74,3,0,5,17,5,18,75,3,0,5,29,91,5,17,36,3,0,5,52,5,15,58,3,0,5,21,5,17,36,3,0,5,22,5,21,46,3,0,5,47,5,18,37,3,0,5,61,4,21,5,14,33,3,0,5,18,5,14,45,3,0,5,25,5,14,55,3,0,5,45,4,154,4,18,5,15,45,3,0,5,21,5,14,49,38,32,12,44,26,16,5,3,1,0,19,18,48,3,0,19,50,3,0,20,10,3,0,5,26,5,24,51,3,0,5,24,5,20,49,3,1,0,43,5,19,5,20,55,54,3,0,5,19,5,21,55,54,3,0,5,67,27,5,24,52,3,0,5,51,5,20,48,3,0,5,22,5,19,49,3,0,5,28,5,28,60,3,0,5,51,5,23,50,3,0,5,61,4,24,5,18,49,3,0,5,21,5,18,45,3,0,5,28,5,18,55,3,0,5,23,5,21,69,3,0,5,24,5,18,51,3,1,0,19,18,88,23,3,0,19,50,3,0,20,23,3,0,5,26,5,24,40,27,50,3,0,5,24,5,20,20,29,5,53,26,3,1,0,43,18,12,7,33,7,28,7,58,48,6,21,7,22,63,58,64,65,68,54,74,59,55,3,0,19,45,96,78,76,79,80,82,76,88,77,73,65,79,41,3,0,5,19,5,20,40,42,3,0,5,19,5,21,40,43,3,0,5,27,5,24,37,3,0,5,51,5,20,33,3,0,5,22,5,19,32,3,0,5,28,5,28,49,3,0,5,51,5,23,36,3,0,5,61,4,24,5,18,31,3,0,5,21,5,18,45,3,0,5,28,5,18,55,3,0,5,45,4,154,4,23,5,21,47,3,0,5,87,87,4,72,4,24,5,18,39,30,9,58,8,120,83,8,122,8,59,8,132,8,9,44,50,36,12,40,5,3,1,0,3,53,58,25,71,2,12,3,59,19,80,54,28,79,30,52,47,38,59,62,33,3,2,0,3,53,29,34,2,11,12,3,54,44,23,34,46,42,28,5,5,52,27,24,5,5,37,54,45,50,85,17,68,5,2,0,3,91,19,63,2,11,12,3,49,5,63,5,34,70,47,70,7,29,7,44,40,58,38,43,47,38,36,23,40,57,23,15,9,52,129,64,59,23,15,9,39,13,105,92,27,13,80,112,55,69,32,34,36,26,89,26,96,132,114,58,12,67,0,67,91,68,97,79,85,112,55,69,32,94,0,34,36,26,29,26,40,135,114,58,11,12,27,33,9,7,5,79,3,19,2,0,3,56,2,69,49,80,2,84,35,2,66,36,2,100,102,2,87,38,2,35,29,77,73,2,11,12,3,69,5,29,5,19,146,88,42,15,3,37,44,17,5,153,67,33,44,153,14,19,7,5,28,4,47,56,15,3,0,5,24,5,40,30,5,27,26,5,46,41,43,35,5,4,5,20,5,104,52,26,0,34,31,36,62,30,72,30,91,41,32,36,14,126,48,7,101,76,5,21,4,0,54,16,41,116,53,23,49,30,69,62,27,14,65,31,32,62,13,56,13,106,56,100,87,31,18,56,20,11,63,42,51,80,9,7,5,32,27,55,96,87,12,47,38,23,13,14,89,7,5,3,37,42,57,28,47,113,65,3,13,2,0,3,53,35,2,11,12,3,139,0,3,36,2,77,2,36,20,117,61,2,12,3,104,33,55,30,22,32,28,36,57,87,32,80,32,65,41,18,40,54,46,23,15,9,7,24,47,60,53,49,47,11,9,78,7,12,41,5,84,32,76,26,76,91,125,81,30,45,60,14,30,30,45,44,7,12,69,31,5,82,32,0,96,32,16,87,34,45,5,31,0,3,36,2,77,2,36,20,117,2,12,3,134,0,3,119,2,100,2,20,29,117,70,2,12,3,88,49,72,2,0,3,119,2,100,2,20,29,117,2,12,3,121,0,3,129,46,2,53,19,139,2,12,3,77,61,69,2,0,3,166,46,2,84,2,19,138,55,23,2,12,3,121,72,54,43,52,28,38,3,33,90,3,27,50,107,57,36,5,3,19,2,0,3,166,46,2,84,2,19,138,23,2,12,3,139,0,3,51,2,45,99,2,12,3,36,23,61,38,61,60,26,3,11,2,0,3,45,2,35,99,2,12,3,124,0,3,45,2,35,99,2,12,3,113,0,3,45,33,12,3,43,54,85,118,54,5,16,2,0,3,45,19,2,12,3,104,0,3,30,2,38,47,23,2,12,3,67,27,35,10,43,3,31,2,0,3,30,2,38,23,2,12,3,77,0,3,40,2,23,2,11,3,20,18,7,47,7,16,3,1,0,3,22,37,2,11,12,3,52,0,3,45,53,2,22,48,57,2,11,12,3,52,25,0,3,29,2,22,48,76,60,2,11,12,3,57,27,23,42,38,78,3,2,0,3,47,41,2,22,48,21,21,2,11,12,3,63,42,0,10,5,37,66,5,31,7,16,21,7,25,7,46,21,7,23,3,1,0,3,23,23,20,2,12,3,115,0,3,25,24,2,11,12,3,58,0,3,36,17,2,11,12,3,34,44,43,2,0,3,11,60,32,2,36,15,2,11,12,3,25,73,0,3,62,61,77,2,34,19,2,11,12,3,33,61,56,25,16,5,3,30,2,0,3,44,2,36,27,61,2,11,12,3,39,26,34,17,5,66,3,14,2,0,3,45,2,65,2,34,3,25,17,22,13,16,16,3,33,85,2,0,25,5,21,35,5,54,7,36,7,26,28,19,7,44,6,33,7,29,19,7,30,38,7,49,9,35,9,32,34,114,66,45,58,50,182,13,13,11,9,141,65,91,8,31,6,20,32,50,65,8,7,22,32,3,0,5,21,29,36,25,68,5,81,30,42,16,24,36,35,39,5,37,29,24,57,37,77,46,31,40,64,55,47,13,13,44,51,19,40,58,11,9,12,7,87,24,35,41,82,44,38,45,9,9,7,3,0,5,29,18,5,32,45,3,0,5,19,28,5,27,61,30,30,7,5,15,3,1,0,3,89,108,102,2,112,19,2,75,2,41,2,11,49,72,20,27,24,35,93,47,91,2,3,24,5,26,31,26,26,5,46,7,22,7,21,7,26,7,23,7,24,7,21,7,76,71,32,62,6,79,33,6,21,7,23,3,1,0,3,33,16,3,40,18,18,26,3,19,28,3,18,26,3,27,28,3,13,2,0,3,20,29,2,12,3,269,0,24,5,36,26,28,5,40,7,32,7,21,7,21,7,23,23,3,1,0,3,34,24,26,2,12,3,100,0,3,34,24,26,2,12,3,55,20,19,28,34,10,65,3,57,2,0,3,58,2,72,47,26,29,2,12,3,73,22,18,96,22,54,5,12,3,22,36,29,62,93,7,24,5,40,59,58,5,16,3,50,2,0,3,36,33,2,12,3,50,44,22,38,27,30,82,36,44,29,84,36,27,10,32,3,39,16,2,0,3,33,23,3,40,43,39,39,2,0,3,36,29,2,12,3,41,18,19,20,42,11,60,31,11,11,84,46,11,13,86,29,5,3,80,57,2,0,3,33,29,3,102,0,3,33,19,34,2,12,3,67,26,28,27,27,27,18,16,25,59,17,5,45,27,35,17,5,59,53,148,25,26,40,28,9,19,7,5,10,25,28,33,59,34,19,7,51,72,33,14,38,19,7,12,34,5,21,27,12,16,5,3,56,2,0,3,35,35,20,2,12,3,55,132,2,0,16,5,26,45,5,24,7,24,7,17,7,16,33,7,17,3,1,0,3,26,26,20,3,42,31,31,23,23,55,16,3,45,33,18,5,3,51,43,46,18,5,47,34,34,75,20,7,5,3,13,2,0,3,29,47,23,3,69,39,41,31,2,0,3,29,23,3,81,0,3,26,47,21,3,91,71,2,0,3,26,21,3,98,0,3,24,33,21,3,56,0,67,0,3,19,21,3,109,0,3,21,39,2,13,12,3,60,17,130,0,3,35,29,3,65,94,38,48,28,44,44,64,7,7,64,23,3,2,0,3,25,29,106,16,3,76,21,121,62,3,30,0,40,37,17,25,22,15,7,7,53,63,39,24,16,7,54,64,7,64,62,32,70,34,33,52,50,37,7,5,32,5,0,60,15,2,0,19,18,7,41,7,29,7,74,7,31,7,32,7,26,3,1,0,3,44,56,2,29,31,2,10,12,3,33,23,46,47,52,5,11,2,0,3,29,25,19,2,10,12,3,37,44,30,12,3,49,48,2,0,3,29,26,2,11,12,3,38,52,30,17,49,10,51,70,34,5,3,23,2,0,3,44,34,24,19,2,11,12,3,41,15,33,27,30,27,16,3,55,90,101,98,25,28,28,28,42,23,7,26,12,27,5,46,3,66,61,30,2,0,3,95,2,29,17,20,2,11,12,3,29,5,27,5,15,47,48,2,0,3,95,11,12,3,68,0,3,35,34,24,3,62,44,32,58,90,20,3,14,2,0,3,95,2,35,17,17,2,11,12,3,48,92,69,2,0,3,95,2,35,29,17,17,2,11,12,3,53,5,24,5,15,47,47,32,86,97,3,15,2,0,3,41,29,26,29,2,11,12,3,53,86,61,2,0,3,34,2,35,34,45,22,36,2,12,3,70,18,10,3,36,68,13,6,30,53,58,5,14,72,2,0,3,77,64,73,72,73,2,11,36,42,22,36,5,57,43,43,79,21,20,20,30,2,10,3,19,5,21,24,27,5,36,7,24,18,7,19,7,48,24,7,37,7,54,33,7,49,7,45,33,7,32,7,69,65,72,62,7,29,7,72,42,64,7,40,7,36,7,28,7,18,7,25,7,49,27,7,26,7,52,22,7,23,7,23,7,34,7,23,7,36,7,23,7,35,3,1,0,3,53,35,46,3,69,151,16,3,47,52,49,13,2,0,3,72,78,2,35,42,33,3,71,26,111,77,3,2,0,3,41,22,3,46,32,29,81,32,29,149,110,7,5,3,2,0,3,24,29,43,3,49,61,78,58,41,67,11,78,68,30,9,35,67,15,9,91,34,9,7,5,3,2,0,3,24,29,3,42,38,89,47,78,58,41,66,130,11,61,54,30,9,40,7,5,5,2,0,3,24,29,43,3,40,38,31,2,0,3,50,20,3,57,39,47,32,28,37,51,9,32,69,58,9,37,8,69,8,39,9,20,40,53,23,67,54,11,10,8,21,30,64,25,82,34,61,29,32,76,18,20,35,45,19,85,20,83,57,60,72,13,12,10,72,9,22,15,53,67,19,48,7,35,0,58,57,69,36,84,74,80,70,43,11,9,9,34,108,63,53,53,82,62,53,61,9,36,57,9,7,121,161,45,7,103,62,41,46,83,25,93,9,7,43,46,83,25,95,9,7,74,87,40,41,44,51,11,34,11,69,121,59,7,0,48,38,69,14,56,7,5,3,2,0,3,57,2,14,19,37,29,14,2,12,3,59,55,26,5,16,5,20,34,23,59,47,43,47,5,59,3,7,33,13,22,72,30,26,67,108,81,19,75,33,80,70,52,7,5,3,15,2,0,17,5,33,34,5,39,33,31,7,65,7,26,3,1,3,26,26,31,3,58,58,80,28,5,5,2,0,3,35,34,28,23,3,57,5,30,23,5,20,5,93,16,5,17,30,34,32,49,30,63,9,26,9,36,9,28,9,31,34,74,37,39,64,27,100,13,26,11,102,39,11,9,9,73,12,35,57,123,53,11,34,9,9,37,155,9,79,80,59,38,45,35,33,9,7,50,5,53,43,53,38,7,7,22,18,23,54,117,3,15,2,0,3,39,61,141,90,76,73,19,75,242,107,3,0,3,84,69,86,79,100,2,101,3,38,5,117,40,5,27,25,36,30,37,35,90,11,12,7,39,7,20,31,37,29,41,49,7,31,7,24,7,31,7,24,7,73,6,22,7,25,25,19,24,57,41,7,39,7,51,40,10,48,77,139,9,14,7,35,35,62,20,84,28,56,32,7,41,60,68,42,22,62,9,9,37,25,123,41,47,86,77,14,32,69,22,7,33,30,7,52,102,86,31,9,9,186,19,51,14,53,7,6,66,34,21,7,3,0,5,65,5,23,55,29,49,31,7,7,3,0,5,24,5,29,36,3,0,5,24,5,32,39,3,0,56,83,31,29,84,30,9,29,84,30,9,109,9,5,3,0,5,74,86,31,4,4,13,33,29,29,18,63,30,29,27,29,18,68,4,5,20,24,3,0,5,31,4,67,5,11,24,12,9,55,15,27,5,14,3,0,5,30,4,67,5,11,24,12,9,55,15,27,5,14,3,0,5,30,4,49,5,14,36,3,0,5,30,4,49,5,14,36,3,0,14,37,67,20,3,1,0,3,53,3,48,70,47,70,40,58,47,38,40,24,62,53,21,47,78,110,53,67,30,32,34,23,87,24,94,52,121,112,56,10,21,31,14,38,51,21,7,5,3,1,0,24,5,55,33,5,38,50,7,38,7,21,22,35,16,3,0,5,37,5,11,28,8,48,86,20,3,1,0,3,29,2,3,65,0,3,29,70,2,3,61,21,69,65,79,23,3,38,42,35,2,0,3,29,2,3,73,0,3,29,70,2,3,64,21,69,65,79,23,3,10,12,36,3,2,0,24,5,55,5,25,24,24,21,27,7,132,6,107,6,111,106,6,66,7,28,3,1,0,3,37,23,3,90,0,3,29,60,68,23,3,103,33,98,32,22,17,36,62,67,56,42,30,17,34,46,65,64,9,36,22,43,7,24,38,28,7,26,48,7,5,25,26,13,61,60,5,43,41,37,58,30,33,10,50,33,3,2,0,3,29,23,3,114,0,3,29,68,65,3,67,5,32,5,25,5,32,5,23,98,32,22,36,34,36,36,56,42,32,32,38,40,48,28,36,7,46,5,28,34,3,21,2,0,3,29,65,3,77,0,3,83,82,2,33,23,22,3,37,32,38,69,41,38,71,10,48,42,20,37,11,41,11,27,22,25,35,5,3,2,0,3,2,51,2,37,70,70,23,3,93,29,21,3,93,94,0,5,62,64,5,23,0,39,25,64,0,75,88,70,0,16,96,77,28,63,58,68,32,90,66,17,89,18,28,11,16,58,9,7,6,42,11,5,46,97,80,78,0,29,68,27,0,72,56,163,34,24,7,10,52,123,161,9,16,7,0,55,93,48,27,14,82,145,54,35,94,18,97,93,15,27,15,118,46,11,95,91,25,56,93,46,20,45,13,11,71,97,52,31,11,9,7,12,85,25,5,9,34,156,31,7,91,46,5,3,27,89,21,3,45,0,68,34,36,37,2,0,3,29,25,70,70,3,94,38,33,57,63,54,23,29,38,47,43,53,20,14,5,48,98,20,67,72,22,7,12,42,123,22,7,5,3,44,13,36,30,31,2,0,3,29,25,3,94,0,3,39,3,45,31,135,62,27,3,2,0,3,39,28,25,3,71,42,77,38,3,33,45,24,53,23,84,3,43,23,2,3,61,57,44,2,39,3,49,36,0,56,53,0,5,43,50,5,0,56,70,0,61,52,7,40,7,30,60,37,67,3,2,0,3,29,68,69,3,61,69,65,39,57,0,79,55,3,38,42,36,37,2,0,3,29,3,106,0,3,29,3,106,0,3,34,43,3,14,5,40,37,5,37,7,51,16,7,25,7,66,32,7,32,7,49,26,7,35,7,26,7,25,7,104,7,22,7,158,7,23,3,0,5,52,4,102,4,34,13,19,34,29,9,39,5,15,63,53,3,0,5,48,4,107,4,35,22,5,20,59,3,0,5,95,5,15,30,29,33,91,30,27,66,13,48,13,21,23,32,33,54,31,13,37,56,34,65,22,22,15,20,56,34,65,22,31,37,15,13,18,37,32,83,20,27,13,11,46,9,9,24,5,21,3,0,5,87,85,89,93,4,147,5,16,29,3,0,5,46,4,107,4,35,22,5,17,87,3,0,5,87,85,89,93,4,184,5,18,32,27,33,33,35,9,75,9,23,17,14,16,14,23,8,91,30,11,22,11,26,30,23,31,11,10,74,29,57,67,25,39,15,43,32,25,18,34,67,25,40,15,78,30,20,67,25,39,15,43,13,11,9,61,19,9,7,30,5,39,3,1,0,3,59,2,11,75,39,41,56,45,2,36,42,52,2,11,12,3,38,18,52,41,26,42,12,28,16,75,47,25,14,9,20,7,22,5,66,3,13,2,0,27,0,3,50,2,66,2,17,3,36,0,25,5,20,26,5,26,20,15,23,51,3,1,0,3,36,3,95,0,3,91,2,36,18,24,3,47,26,15,18,23,51,2,0,3,49,18,24,3,50,47,68,84,38,17,10,24,47,26,13,3,2,0,3,75,2,76,2,54,2,70,2,36,24,3,39,79,15,3,161,24,17,24,17,26,80,3,33,46,36,38,13,7,25,5,16,3,64,45,15,36,25,5,3,98,84,54,113,15,36,25,5,3,0,18,20,6,32,18,28,49,30,10,50,8,28,17,49,8,6,18,37,29,73,8,50,82,6,130,29,39,17,10,24,56,3,2,0,3,41,2,49,2,49,24,83,3,59,54,30,18,9,26,9,18,23,92,65,107,48,19,45,55,30,9,7,44,92,34,16,7,14,22,5,118,47,5,3,2,0,3,72,2,31,24,3,30,19,17,13,16,16,3,12,2,0,3,73,41,2,22,40,35,27,3,57,27,60,16,17,71,30,11,5,64,3,65,2,0,3,22,26,3,20,18,7,24,7,22,7,31,7,26,7,24,7,23,7,23,7,20,21,7,21,50,7,36,7,26,59,7,37,7,46,7,30,3,0,5,37,5,17,83,3,0,5,47,4,33,40,35,4,36,28,5,24,17,22,3,0,5,38,5,12,37,3,0,5,38,5,12,37,3,0,5,56,5,23,0,5,31,5,17,24,37,18,5,12,3,0,5,49,38,4,37,98,5,44,51,36,5,3,0,5,54,4,71,5,15,41,3,0,5,71,4,79,5,19,42,3,0,5,37,4,70,5,17,44,3,0,5,37,4,79,5,21,45,3,0,5,14,18,5,14,1,0,3,34,24,22,23,2,11,12,3,45,18,33,3,16,29,3,24,16,22,33,36,39,30,26,14,59,24,16,9,18,7,5,16,3,11,2,0,3,34,23,2,11,12,3,33,16,22,22,36,39,42,22,7,5,16,3,11,2,0,3,34,29,23,2,11,12,3,53,16,22,22,48,39,42,22,7,5,16,3,11,2,0,3,72,2,34,98,2,11,12,3,38,16,22,22,36,39,42,31,7,5,16,3,2,0,3,16,34,52,21,2,11,12,3,34,5,23,5,20,35,31,5,15,2,0,3,34,34,2,11,12,3,40,22,5,28,5,28,30,10,26,17,6,17,26,36,41,22,9,98,25,18,23,28,11,9,51,48,32,69,7,58,49,57,30,7,14,20,13,7,5,3,2,0,3,34,24,16,2,11,12,3,38,41,22,24,17,26,3,35,36,29,44,7,24,5,3,2,0,3,35,36,31,94,2,11,12,3,86,27,30,35,26,77,5,49,5,23,33,33,171,37,23,5,4,24,21,26,12,30,20,20,21,19,20,30,15,16,28,34,28,29,216,45,19,21,190,45,19,20,46,172,47,22,78,15,11,7,5,5,20,2,0,56,0,3,35,36,24,86,2,11,12,3,73,31,24,3,20,31,71,5,74,3,27,43,24,24,17,26,69,22,68,98,63,5,3,35,36,30,31,30,84,9,13,7,24,5,3,29,74,3,69,2,0,3,106,21,2,35,36,86,2,11,12,3,64,68,173,19,10,21,18,5,3,69,2,0,3,35,36,24,25,2,11,12,3,64,30,27,29,43,24,24,17,26,3,41,48,36,29,82,7,24,5,3,32,36,21,30,83,7,28,25,5,16,3,19,24,3,29,125,3,2,0,3,35,36,22,2,11,12,3,53,33,24,26,3,2,0,3,35,36,22,83,2,11,12,3,57,44,30,35,14,22,38,10,32,18,18,19,17,18,42,13,22,71,13,15,61,13,14,44,43,16,52,9,5,3,155,2,0,3,36,22,100,2,11,12,3,37,35,97,2,0,3,36,115,2,11,12,3,35,5,31,5,17,39,25,62,5,5,12,2,0,3,36,22,20,2,11,12,3,37,35,42,2,0,3,36,22,29,100,2,11,12,3,55,39,110,15,3,96,2,0,3,32,41,2,11,12,3,126,0,3,17,3,0,3,47,14,29,3,34,5,47,60,5,37,31,36,3,1,0,3,33,14,40,28,3,35,18,12,7,26,15,7,29,7,39,7,28,3,0,5,59,78,28,24,5,23,7,24,7,27,18,12,3,0,5,47,4,33,40,35,4,36,23,5,24,30,68,31,3,0,5,24,5,12,23,3,0,5,24,5,12,7,24,7,29,42,77,7,14,3,0,17,83,3,0,5,45,4,37,97,5,43,49,77,3,0,5,37,4,77,79,61,4,13,43,29,42,30,4,58,51,5,27,28,41,87,9,12,83,5,3,0,5,36,4,58,4,57,5,18,28,41,78,9,12,71,5,3,0,5,38,4,60,5,21,28,3,0,5,45,4,68,76,5,30,28,41,57,9,12,76,5,3,0,5,44,4,77,16,5,15,35,3,0,5,50,4,23,5,14,32,3,0,5,50,4,28,26,23,5,40,42,3,0,5,50,4,25,5,13,68,3,0,5,77,28,4,16,97,77,38,5,11,52,3,0,5,74,4,104,5,15,29,3,0,5,34,5,24,39,3,0,5,55,5,20,38,3,1,0,3,54,2,11,12,3,44,0,3,14,27,46,3,32,5,51,37,50,5,41,29,28,3,1,0,3,20,31,2,44,34,3,33,5,4,101,5,25,12,7,31,15,7,31,0,32,38,12,45,5,3,0,5,47,4,33,40,35,4,36,23,5,24,29,84,27,7,31,3,0,5,28,5,12,21,3,0,5,28,5,12,7,28,7,27,34,104,7,14,3,0,5,43,4,37,97,5,43,87,3,0,5,50,4,33,5,13,7,37,7,19,38,26,61,62,7,7,14,3,0,5,60,4,21,5,15,51,3,0,5,56,4,39,5,11,94,3,0,5,58,4,36,5,13,132,3,0,5,46,4,36,5,14,140,3,0,5,66,4,114,5,15,38,26,65,7,7,3,0,5,46,4,36,5,24,25,3,0,5,47,4,58,5,16,28,41,46,9,12,72,5,3,0,5,63,4,67,59,5,20,28,41,71,9,12,76,5,16,3,0,5,48,4,24,32,5,13,53,3,0,5,74,4,41,22,5,13,32,3,0,5,41,5,12,28,41,50,47,11,9,12,68,5,3,0,5,55,5,20,36,3,1,0,3,54,2,11,12,3,40,0,3,17,17,20,3,125,0,28,5,28,29,26,47,5,55,21,23,23,47,3,0,5,58,5,14,30,29,5,45,25,34,109,9,13,14,34,42,9,13,5,27,34,3,1,0,3,35,36,46,33,2,11,12,3,55,43,44,25,33,107,9,13,14,33,41,26,102,11,40,36,9,13,5,25,32,119,3,12,2,0,3,35,36,24,33,2,11,12,3,54,38,43,15,99,67,10,84,52,3,2,0,3,25,2,35,36,40,45,2,11,12,3,86,49,9,31,41,62,159,7,5,5,33,89,5,22,3,30,35,43,30,32,185,41,31,22,5,2,0,3,45,32,2,11,12,3,64,32,23,34,10,38,3,2,0,3,40,41,2,11,12,3,59,79,16,33,11,257,11,5,22,3,2,0,3,35,36,40,41,28,2,11,12,4,72,30,35,38,30,33,32,66,39,66,45,38,184,46,24,5,3,26,2,0,3,35,36,40,48,41,2,11,12,4,72,52,40,29,5,5,30,35,48,87,19,178,39,29,82,3,152,34,24,24,20,75,2,0,3,35,36,40,25,41,2,11,12,3,74,30,35,48,87,52,59,120,39,24,29,18,7,37,86,7,5,5,33,50,29,86,39,35,42,44,20,33,62,53,35,15,48,13,46,18,54,11,15,9,16,46,111,11,41,15,7,5,22,3,80,75,58,19,22,34,23,5,230,44,22,3,75,2,0,3,71,29,2,35,22,89,43,42,59,2,12,3,93,5,22,5,18,5,38,5,34,50,68,60,33,5,20,3,19,26,25,25,25,5,25,36,36,29,72,66,76,110,38,23,106,44,43,22,56,15,13,11,47,92,11,15,9,7,5,46,3,17,2,0,3,35,28,3,64,48,79,22,3,26,47,53,70,66,27,33,14,23,7,5,21,3,2,0,3,68,2,90,93,83,2,112,2,22,72,3,40,14,58,50,26,39,56,17,34,42,29,99,17,18,101,58,24,17,9,7,22,5,5,12,2,0,3,35,40,25,33,2,11,12,3,54,29,57,30,48,42,50,25,26,27,46,111,11,41,44,15,7,5,22,3,14,99,3,111,29,84,3,16,2,0,3,68,104,2,11,6,13,59,29,61,8,6,2,3,0,3,59,3,12,7,19,25,7,3,36,4,0,3,25,52,3,33,5,25,37,49,5,42,30,7,36,22,15,7,34,7,37,26,7,33,27,25,37,14,34,7,7,3,0,5,184,5,18,33,9,213,9,23,24,26,25,26,8,30,5,45,3,0,5,45,104,4,126,4,12,5,16,31,53,9,130,9,23,34,87,40,38,11,26,11,26,11,37,11,83,11,32,11,24,23,26,29,32,15,26,15,19,29,28,43,30,21,28,32,49,37,61,41,49,21,21,17,28,21,28,32,57,37,49,57,19,17,27,21,13,27,26,11,10,31,45,29,30,36,42,26,36,56,26,17,46,42,26,36,17,31,41,42,26,36,17,28,15,19,31,36,42,44,28,38,19,76,17,46,42,26,36,17,41,41,42,26,36,17,38,15,19,33,81,36,42,68,51,46,30,21,78,45,28,46,21,46,45,19,17,46,46,66,49,44,28,19,43,17,41,46,45,41,49,46,30,21,41,45,28,46,21,122,45,19,17,15,34,42,26,17,104,15,19,13,11,28,9,16,34,49,79,61,24,18,17,11,9,9,26,5,43,3,1,0,3,57,2,73,78,68,2,36,3,34,5,61,5,24,12,7,47,38,7,79,7,39,7,28,3,0,5,44,4,19,5,17,23,3,0,5,19,23,5,24,30,9,71,17,23,5,25,3,0,12,22,3,0,5,20,5,12,29,36,15,3,0,5,44,4,37,97,5,43,49,64,32,48,86,29,54,38,76,63,35,18,9,127,98,39,11,11,34,15,9,7,33,75,58,18,11,83,39,11,11,7,28,34,79,82,39,16,86,33,101,57,37,20,13,39,55,13,13,9,9,5,3,0,5,70,4,12,5,15,17,7,24,7,24,24,81,60,7,18,5,14,3,0,5,70,4,21,12,5,13,26,3,0,5,53,4,61,26,99,4,4,12,5,48,28,41,82,48,30,40,77,75,60,75,55,190,60,79,13,47,83,47,56,11,9,9,12,88,5,3,0,5,57,4,33,37,68,57,4,12,5,52,7,24,7,19,40,46,17,24,25,27,42,11,37,11,30,34,51,31,34,11,11,37,11,35,28,37,9,21,17,7,5,32,26,99,42,33,59,70,94,28,123,17,85,92,28,119,17,45,26,52,15,66,19,13,29,32,24,17,43,17,26,49,16,47,69,38,59,37,19,15,27,19,13,31,43,26,101,15,19,11,9,20,7,16,6,35,81,44,36,23,62,9,27,66,9,23,20,12,21,5,14,3,0,5,34,4,65,71,75,76,45,12,5,36,27,12,5,23,21,34,59,26,26,23,74,9,61,9,12,102,5,3,0,5,33,4,60,84,77,45,4,12,5,47,23,21,34,59,62,9,12,108,5,3,0,5,41,4,60,78,4,12,5,26,23,12,5,23,21,34,80,9,12,92,5,3,0,5,43,4,66,77,77,45,4,12,5,38,23,12,5,23,21,34,59,33,16,9,63,9,12,104,5,3,0,5,26,4,119,4,76,4,12,5,35,28,41,56,9,12,101,5,3,0,5,34,4,119,4,72,71,4,12,5,48,28,41,69,9,12,114,5,3,0,5,67,4,119,4,73,49,47,4,12,5,32,63,3,0,5,61,4,119,4,79,4,12,5,20,30,3,0,5,55,5,20,37,3,1,0,3,54,18,2,11,12,3,42,0,3,15,3,0,3,59,87,2,11,29,27,26,2,33,3,0,3,23,2,22,55,49,72,3,0,3,73,24,2,60,2,10,68,3,22,5,45,53,5,38,21,22,7,19,7,58,27,3,0,24,15,3,0,5,23,4,75,4,12,5,11,7,24,7,30,69,135,10,51,124,34,26,16,41,30,35,26,19,49,23,20,68,13,11,9,103,5,28,21,19,45,5,26,70,3,1,0,3,71,77,76,73,2,10,35,3,41,18,12,7,30,7,29,3,0,5,38,5,21,30,55,3,0,5,47,4,33,40,35,4,36,23,5,24,30,68,31,3,0,12,29,3,0,5,27,5,12,34,17,97,13,3,0,17,83,3,0,5,36,4,13,72,31,30,16,6,4,106,76,63,65,4,12,5,29,43,3,0,5,58,44,4,19,16,10,11,18,4,59,99,4,12,5,25,32,17,119,33,20,17,12,23,5,3,0,5,51,47,4,77,4,58,92,4,12,5,28,32,17,120,3,0,5,43,4,37,97,5,43,87,3,0,5,76,4,64,5,15,60,3,0,5,21,5,13,26,3,0,5,57,4,80,76,51,85,73,69,71,71,100,4,12,5,53,56,32,49,5,38,76,7,19,3,0,5,37,4,13,43,44,4,57,70,5,27,28,41,66,9,12,80,55,5,3,0,5,37,4,13,43,44,4,79,70,5,30,28,41,79,73,9,12,65,74,40,54,7,38,5,3,0,5,45,4,68,80,5,30,28,41,57,9,12,80,48,5,3,0,5,50,4,51,5,14,32,3,0,5,36,4,77,5,18,38,3,0,5,38,4,79,5,21,28,3,0,5,44,4,77,35,5,15,35,3,0,5,50,4,28,26,42,5,40,42,3,0,5,65,4,126,5,15,29,3,0,5,71,19,4,60,4,85,5,20,44,3,1,0,3,54,25,2,11,12,3,56,0,3,44,80,2,52,72,3,40,40,12,29,7,36,7,34,3,0,5,38,5,22,50,103,3,0,5,38,5,22,50,103,3,0,5,47,4,33,40,35,4,36,23,5,24,29,84,36,7,29,3,0,5,80,4,26,5,12,41,3,0,5,26,5,12,46,39,30,39,5,17,97,13,3,0,5,55,77,35,4,61,4,12,5,15,39,29,20,30,21,5,16,32,39,26,56,5,55,86,73,3,0,5,48,4,76,4,12,5,35,28,41,56,9,12,79,5,3,0,5,34,4,72,74,4,12,5,48,28,41,69,9,12,93,5,3,0,5,67,4,73,49,50,4,12,5,32,63,3,0,5,40,4,77,52,4,12,5,32,63,3,0,5,61,4,79,4,12,5,20,30,3,0,5,57,4,80,76,51,85,73,69,71,71,100,4,12,5,53,55,39,30,40,5,35,61,7,32,44,5,14,3,0,5,71,19,4,60,4,85,5,20,43,36,3,1,0,3,53,24,2,12,3,70,0,3,53,69,3,32,5,96,92,42,76,57,5,43,31,7,36,22,15,7,34,7,37,26,7,39,27,25,37,14,40,7,7,3,1,0,3,57,2,23,3,29,5,55,5,26,12,7,21,7,29,3,0,5,80,5,12,38,3,0,5,23,5,12,43,34,25,7,13,3,0,5,57,4,80,76,51,83,73,69,71,70,103,4,12,5,53,38,12,29,33,12,50,5,53,32,44,5,14,3,0,5,71,19,4,60,4,85,5,20,40,36,3,1,0,3,53,21,2,11,12,3,31,34,0,3,77,54,3,30,5,38,5,22,50,103,3,0,5,38,5,22,50,103,3,0,12,25,3,0,5,23,5,12,32,36,15,3,0,5,54,4,80,76,51,82,73,69,71,71,100,4,12,5,48,58,32,44,5,14,3,0,15,17,40,29,48,25,55,70,9,48,53,46,7,46,67,34,19,52,36,35,53,37,48,9,19,7,26,57,47,7,16,15,3,0,5,21,5,13,26,3,0,5,55,5,20,40,3,1,0,3,53,21,2,11,12,3,47,0,22,5,19,27,5,28,17,25,3,0,5,20,5,18,37,3,0,5,50,90,63,34,52,5,21,16,3,0,5,85,27,32,5,40,37,3,0,5,37,27,5,35,37,3,1,0,28,0,3,11,3,33,18,15,3,0,14,0,5,22,22,5,21,49,18,5,32,15,3,0,5,37,27,5,35,21,30,28,5,43,3,0,5,55,27,5,27,41,43,3,0,5,37,31,28,5,35,15,3,1,0,21,5,32,5,25,27,3,0,5,21,5,16,12,3,0,5,25,5,17,25,3,0,5,22,5,18,15,3,0,5,28,5,11,42,3,0,5,27,28,5,19,37,3,0,5,33,22,5,21,16,3,0,5,37,23,5,34,5,37,5,25,5,31,5,15,5,55,27,5,27,35,3,0,5,21,5,13,12,3,1,0,3,54,26,3,74,0,22,5,24,5,21,19,3,0,5,21,5,16,19,3,0,5,25,5,17,13,3,0,5,22,5,18,16,3,0,5,29,5,11,39,3,0,5,27,29,5,19,56,22,16,3,0,5,34,22,5,21,26,15,3,0,5,37,23,5,33,83,23,3,0,5,37,5,25,5,31,5,15,5,55,27,5,27,40,3,0,5,21,5,13,12,3,1,0,3,11,2,54,27,3,76,0,3,23,36,3,124,0,3,11,3,18,5,21,5,21,20,143,5,7,18,7,19,7,18,7,20,21,18,22,5,23,27,5,28,27,5,3,0,5,21,5,16,12,3,0,5,25,5,17,21,3,0,5,22,5,18,15,3,0,5,25,5,11,70,3,0,5,27,25,5,19,37,3,0,5,30,22,5,21,16,3,0,5,37,23,5,33,56,26,43,30,46,5,3,0,5,37,5,24,49,48,12,47,5,3,0,5,31,5,16,0,5,55,27,5,27,39,32,3,0,5,21,5,13,12,3,1,0,3,11,2,53,23,3,109,0,3,11,3,20,5,26,5,23,23,3,0,5,21,5,16,12,3,0,5,25,5,17,23,3,0,5,22,5,18,15,3,0,5,27,5,11,39,3,0,5,27,27,5,19,37,3,0,5,32,22,5,21,16,3,0,5,37,23,5,34,5,37,5,25,5,31,5,15,5,55,27,5,27,34,3,0,5,21,5,13,12,3,1,0,3,11,2,53,25,3,73,0,3,11,3,21,5,24,26,5,28,19,23,3,0,5,21,5,16,12,3,0,5,25,5,17,13,3,0,5,22,5,18,16,3,0,5,28,5,11,50,3,0,5,27,28,5,19,37,3,0,5,33,22,5,21,16,3,0,5,37,23,5,33,75,72,3,0,5,37,5,25,5,31,5,15,5,55,27,5,27,31,34,3,0,5,21,5,13,12,3,1,0,3,53,26,3,94,0,3,11,3,19,5,28,5,21,7,25,7,19,3,0,5,21,5,16,26,3,0,5,25,5,17,19,3,0,5,22,5,18,15,3,0,5,26,5,11,36,3,0,5,27,26,5,19,58,41,16,3,0,5,31,22,5,21,42,15,3,0,5,37,23,5,34,5,37,5,25,5,31,5,15,5,55,27,5,27,32,35,40,28,77,5,3,0,5,21,5,13,12,3,1,0,3,11,2,53,24,3,36,32,16,33,35,28,25,12,29,5,3,28,2,0,18,5,28,5,21,7,25,7,19,3,0,5,21,5,16,26,3,0,5,25,5,17,19,3,0,5,22,5,18,15,3,0,5,25,5,11,35,3,0,5,27,25,5,19,57,41,16,3,0,5,30,22,5,21,42,15,3,0,5,37,23,5,34,5,37,5,25,5,31,5,15,5,55,27,5,27,32,35,40,28,26,5,3,0,5,21,5,13,12,3,1,0,3,53,23,3,35,32,16,33,31,3,27,2,0,3,11,3,21,5,24,5,21,7,21,7,19,3,0,5,21,5,16,26,3,0,5,25,5,17,29,3,0,5,22,5,18,15,3,0,5,28,5,11,38,3,0,5,27,28,5,19,60,41,0,120,58,61,86,98,88,53,30,43,5,16,3,0,5,33,22,5,21,26,15,3,0,5,37,23,5,34,5,37,5,25,5,31,5,15,5,55,27,5,27,74,3,0,5,21,5,13,12,3,1,0,3,11,2,53,26,3,77,0,3,79,11,3,18,13,11,12,18,19,15,14,2,0,22,20,21,27,28,24,24,0,3,11,3,19,5,36,5,22,7,32,7,21,3,0,5,21,5,16,12,3,0,5,25,5,17,22,3,0,5,22,5,18,15,3,0,5,26,5,11,45,3,0,5,27,26,5,19,37,3,0,5,31,22,5,21,16,3,0,5,37,23,5,33,48,3,0,5,37,5,24,32,27,26,33,14,70,68,70,90,45,7,24,5,36,26,33,14,24,45,7,7,42,3,0,5,31,5,14,32,27,27,24,5,28,71,29,29,25,7,7,31,3,0,5,55,27,5,27,30,3,0,5,21,5,13,12,3,1,0,3,11,2,53,24,3,93,0,3,41,2,29,17,37,3,37,5,20,5,18,15,11,6,19,60,5,34,40,25,51,10,14,3,2,0,3,70,2,73,28,2,26,24,3,34,47,21,64,3,2,0,3,32,35,25,23,17,2,12,11,3,52,21,40,29,35,13,39,19,25,20,23,33,4,25,28,3,22,26,3,33,86,3,91,29,17,33,37,3,28,44,23,65,97,3,25,18,2,0,3,39,2,53,21,31,35,42,2,22,2,11,3,91,30,26,35,29,24,49,3,72,5,22,5,18,5,22,5,12,36,59,53,165,17,5,40,69,5,3,145,0,32,51,21,17,34,27,9,26,9,27,42,110,104,7,107,25,13,7,23,5,28,9,26,9,29,42,112,107,7,109,27,13,7,26,5,10,17,48,18,54,110,95,26,7,22,42,53,59,7,40,75,37,19,7,12,57,5,3,49,50,30,11,30,29,15,19,23,4,23,29,39,19,2,0,3,46,3,35,5,19,30,30,31,35,175,37,37,5,82,35,7,61,24,7,25,7,59,26,7,21,7,60,26,7,23,7,62,24,7,35,7,40,7,25,7,78,80,76,57,28,7,31,7,78,22,24,7,23,7,30,7,27,7,17,22,20,51,26,7,61,3,0,5,67,4,20,5,25,55,31,5,3,0,17,40,3,0,5,47,5,15,40,3,0,21,31,31,5,3,0,20,40,3,0,5,42,20,5,18,40,3,0,26,36,31,5,3,0,18,29,3,0,5,91,4,37,31,28,5,35,123,31,5,143,36,5,157,31,5,0,50,0,22,67,37,5,27,68,39,5,103,25,5,61,23,56,39,45,7,58,40,46,7,48,53,42,27,14,75,7,5,15,3,0,5,37,27,5,35,21,30,115,37,49,28,5,0,22,119,11,28,11,29,0,11,28,11,14,46,28,25,45,94,49,23,11,16,68,9,88,43,11,28,11,43,11,28,11,44,60,48,70,48,35,34,50,21,47,23,39,69,124,66,19,131,195,21,82,23,39,13,18,17,11,22,9,25,7,68,31,38,27,31,14,14,38,94,49,23,11,16,67,72,9,23,7,32,31,43,78,86,33,72,40,9,7,32,71,78,7,45,48,42,111,192,94,33,7,12,59,61,5,3,0,5,38,5,15,23,37,18,5,12,3,0,5,42,5,15,22,37,17,5,12,3,0,5,52,5,17,113,98,3,0,5,27,4,24,22,5,21,8,47,46,29,56,43,55,39,29,30,63,43,7,88,25,40,35,79,28,34,50,42,13,11,11,7,23,25,7,31,32,31,7,34,17,5,16,3,0,5,31,4,37,5,24,24,68,36,54,38,7,25,88,71,39,5,3,0,5,31,31,5,25,24,34,5,27,20,63,12,53,5,3,0,5,71,19,4,60,4,85,27,5,27,99,41,37,57,64,75,70,28,26,34,5,31,40,5,50,68,39,40,34,34,33,47,60,36,16,60,45,9,101,58,36,45,58,36,14,31,7,31,39,7,5,40,3,1,0,3,53,23,3,85,0,3,41,2,77,3,21,61,26,23,25,25,24,25,23,22,22,67,2,0,31,0,3,11,3,35,18,15,3,0,14,0,5,24,22,5,21,49,18,5,32,15,3,0,5,37,27,5,35,40,27,3,0,5,55,27,5,27,43,83,69,3,0,5,37,31,28,5,35,15,3,1,0,25,0,65,14,33,12,17,51,0,39,0,37,5,61,4,95,111,103,50,4,100,103,78,4,42,5,141,1,29,0,1530,32,0],"data":{"version":3,"file":"yjs.mjs","sources":["file:///Users/andrewheumann/Dev/y-utility/node_modules/yjs/src/utils/AbstractConnector.js","file:///Users/andrewheumann/Dev/y-utility/node_modules/yjs/src/utils/DeleteSet.js","file:///Users/andrewheumann/Dev/y-utility/node_modules/yjs/src/utils/Doc.js","file:///Users/andrewheumann/Dev/y-utility/node_modules/yjs/src/utils/UpdateDecoder.js","file:///Users/andrewheumann/Dev/y-utility/node_modules/yjs/src/utils/UpdateEncoder.js","file:///Users/andrewheumann/Dev/y-utility/node_modules/yjs/src/utils/encoding.js","file:///Users/andrewheumann/Dev/y-utility/node_modules/yjs/src/utils/EventHandler.js","file:///Users/andrewheumann/Dev/y-utility/node_modules/yjs/src/utils/ID.js","file:///Users/andrewheumann/Dev/y-utility/node_modules/yjs/src/utils/isParentOf.js","file:///Users/andrewheumann/Dev/y-utility/node_modules/yjs/src/utils/logging.js","file:///Users/andrewheumann/Dev/y-utility/node_modules/yjs/src/utils/PermanentUserData.js","file:///Users/andrewheumann/Dev/y-utility/node_modules/yjs/src/utils/RelativePosition.js","file:///Users/andrewheumann/Dev/y-utility/node_modules/yjs/src/utils/Snapshot.js","file:///Users/andrewheumann/Dev/y-utility/node_modules/yjs/src/utils/StructStore.js","file:///Users/andrewheumann/Dev/y-utility/node_modules/yjs/src/utils/Transaction.js","file:///Users/andrewheumann/Dev/y-utility/node_modules/yjs/src/utils/UndoManager.js","file:///Users/andrewheumann/Dev/y-utility/node_modules/yjs/src/utils/updates.js","file:///Users/andrewheumann/Dev/y-utility/node_modules/yjs/src/utils/YEvent.js","file:///Users/andrewheumann/Dev/y-utility/node_modules/yjs/src/types/AbstractType.js","file:///Users/andrewheumann/Dev/y-utility/node_modules/yjs/src/types/YArray.js","file:///Users/andrewheumann/Dev/y-utility/node_modules/yjs/src/types/YMap.js","file:///Users/andrewheumann/Dev/y-utility/node_modules/yjs/src/types/YText.js","file:///Users/andrewheumann/Dev/y-utility/node_modules/yjs/src/types/YXmlFragment.js","file:///Users/andrewheumann/Dev/y-utility/node_modules/yjs/src/types/YXmlElement.js","file:///Users/andrewheumann/Dev/y-utility/node_modules/yjs/src/types/YXmlEvent.js","file:///Users/andrewheumann/Dev/y-utility/node_modules/yjs/src/types/YXmlHook.js","file:///Users/andrewheumann/Dev/y-utility/node_modules/yjs/src/types/YXmlText.js","file:///Users/andrewheumann/Dev/y-utility/node_modules/yjs/src/structs/AbstractStruct.js","file:///Users/andrewheumann/Dev/y-utility/node_modules/yjs/src/structs/GC.js","file:///Users/andrewheumann/Dev/y-utility/node_modules/yjs/src/structs/ContentBinary.js","file:///Users/andrewheumann/Dev/y-utility/node_modules/yjs/src/structs/ContentDeleted.js","file:///Users/andrewheumann/Dev/y-utility/node_modules/yjs/src/structs/ContentDoc.js","file:///Users/andrewheumann/Dev/y-utility/node_modules/yjs/src/structs/ContentEmbed.js","file:///Users/andrewheumann/Dev/y-utility/node_modules/yjs/src/structs/ContentFormat.js","file:///Users/andrewheumann/Dev/y-utility/node_modules/yjs/src/structs/ContentJSON.js","file:///Users/andrewheumann/Dev/y-utility/node_modules/yjs/src/structs/ContentAny.js","file:///Users/andrewheumann/Dev/y-utility/node_modules/yjs/src/structs/ContentString.js","file:///Users/andrewheumann/Dev/y-utility/node_modules/yjs/src/structs/ContentType.js","file:///Users/andrewheumann/Dev/y-utility/node_modules/yjs/src/structs/Item.js","file:///Users/andrewheumann/Dev/y-utility/node_modules/yjs/src/structs/Skip.js","file:///Users/andrewheumann/Dev/y-utility/node_modules/yjs/src/index.js"],"sourcesContent":["\nimport { Observable } from 'lib0/observable'\n\nimport {\n  Doc // eslint-disable-line\n} from '../internals.js'\n\n/**\n * This is an abstract interface that all Connectors should implement to keep them interchangeable.\n *\n * @note This interface is experimental and it is not advised to actually inherit this class.\n *       It just serves as typing information.\n *\n * @extends {Observable<any>}\n */\nexport class AbstractConnector extends Observable {\n  /**\n   * @param {Doc} ydoc\n   * @param {any} awareness\n   */\n  constructor (ydoc, awareness) {\n    super()\n    this.doc = ydoc\n    this.awareness = awareness\n  }\n}\n","\nimport {\n  findIndexSS,\n  getState,\n  splitItem,\n  iterateStructs,\n  UpdateEncoderV2,\n  DSDecoderV1, DSEncoderV1, DSDecoderV2, DSEncoderV2, Item, GC, StructStore, Transaction, ID // eslint-disable-line\n} from '../internals.js'\n\nimport * as array from 'lib0/array'\nimport * as math from 'lib0/math'\nimport * as map from 'lib0/map'\nimport * as encoding from 'lib0/encoding'\nimport * as decoding from 'lib0/decoding'\n\nexport class DeleteItem {\n  /**\n   * @param {number} clock\n   * @param {number} len\n   */\n  constructor (clock, len) {\n    /**\n     * @type {number}\n     */\n    this.clock = clock\n    /**\n     * @type {number}\n     */\n    this.len = len\n  }\n}\n\n/**\n * We no longer maintain a DeleteStore. DeleteSet is a temporary object that is created when needed.\n * - When created in a transaction, it must only be accessed after sorting, and merging\n *   - This DeleteSet is send to other clients\n * - We do not create a DeleteSet when we send a sync message. The DeleteSet message is created directly from StructStore\n * - We read a DeleteSet as part of a sync/update message. In this case the DeleteSet is already sorted and merged.\n */\nexport class DeleteSet {\n  constructor () {\n    /**\n     * @type {Map<number,Array<DeleteItem>>}\n     */\n    this.clients = new Map()\n  }\n}\n\n/**\n * Iterate over all structs that the DeleteSet gc's.\n *\n * @param {Transaction} transaction\n * @param {DeleteSet} ds\n * @param {function(GC|Item):void} f\n *\n * @function\n */\nexport const iterateDeletedStructs = (transaction, ds, f) =>\n  ds.clients.forEach((deletes, clientid) => {\n    const structs = /** @type {Array<GC|Item>} */ (transaction.doc.store.clients.get(clientid))\n    for (let i = 0; i < deletes.length; i++) {\n      const del = deletes[i]\n      iterateStructs(transaction, structs, del.clock, del.len, f)\n    }\n  })\n\n/**\n * @param {Array<DeleteItem>} dis\n * @param {number} clock\n * @return {number|null}\n *\n * @private\n * @function\n */\nexport const findIndexDS = (dis, clock) => {\n  let left = 0\n  let right = dis.length - 1\n  while (left <= right) {\n    const midindex = math.floor((left + right) / 2)\n    const mid = dis[midindex]\n    const midclock = mid.clock\n    if (midclock <= clock) {\n      if (clock < midclock + mid.len) {\n        return midindex\n      }\n      left = midindex + 1\n    } else {\n      right = midindex - 1\n    }\n  }\n  return null\n}\n\n/**\n * @param {DeleteSet} ds\n * @param {ID} id\n * @return {boolean}\n *\n * @private\n * @function\n */\nexport const isDeleted = (ds, id) => {\n  const dis = ds.clients.get(id.client)\n  return dis !== undefined && findIndexDS(dis, id.clock) !== null\n}\n\n/**\n * @param {DeleteSet} ds\n *\n * @private\n * @function\n */\nexport const sortAndMergeDeleteSet = ds => {\n  ds.clients.forEach(dels => {\n    dels.sort((a, b) => a.clock - b.clock)\n    // merge items without filtering or splicing the array\n    // i is the current pointer\n    // j refers to the current insert position for the pointed item\n    // try to merge dels[i] into dels[j-1] or set dels[j]=dels[i]\n    let i, j\n    for (i = 1, j = 1; i < dels.length; i++) {\n      const left = dels[j - 1]\n      const right = dels[i]\n      if (left.clock + left.len >= right.clock) {\n        left.len = math.max(left.len, right.clock + right.len - left.clock)\n      } else {\n        if (j < i) {\n          dels[j] = right\n        }\n        j++\n      }\n    }\n    dels.length = j\n  })\n}\n\n/**\n * @param {Array<DeleteSet>} dss\n * @return {DeleteSet} A fresh DeleteSet\n */\nexport const mergeDeleteSets = dss => {\n  const merged = new DeleteSet()\n  for (let dssI = 0; dssI < dss.length; dssI++) {\n    dss[dssI].clients.forEach((delsLeft, client) => {\n      if (!merged.clients.has(client)) {\n        // Write all missing keys from current ds and all following.\n        // If merged already contains `client` current ds has already been added.\n        /**\n         * @type {Array<DeleteItem>}\n         */\n        const dels = delsLeft.slice()\n        for (let i = dssI + 1; i < dss.length; i++) {\n          array.appendTo(dels, dss[i].clients.get(client) || [])\n        }\n        merged.clients.set(client, dels)\n      }\n    })\n  }\n  sortAndMergeDeleteSet(merged)\n  return merged\n}\n\n/**\n * @param {DeleteSet} ds\n * @param {number} client\n * @param {number} clock\n * @param {number} length\n *\n * @private\n * @function\n */\nexport const addToDeleteSet = (ds, client, clock, length) => {\n  map.setIfUndefined(ds.clients, client, () => /** @type {Array<DeleteItem>} */ ([])).push(new DeleteItem(clock, length))\n}\n\nexport const createDeleteSet = () => new DeleteSet()\n\n/**\n * @param {StructStore} ss\n * @return {DeleteSet} Merged and sorted DeleteSet\n *\n * @private\n * @function\n */\nexport const createDeleteSetFromStructStore = ss => {\n  const ds = createDeleteSet()\n  ss.clients.forEach((structs, client) => {\n    /**\n     * @type {Array<DeleteItem>}\n     */\n    const dsitems = []\n    for (let i = 0; i < structs.length; i++) {\n      const struct = structs[i]\n      if (struct.deleted) {\n        const clock = struct.id.clock\n        let len = struct.length\n        if (i + 1 < structs.length) {\n          for (let next = structs[i + 1]; i + 1 < structs.length && next.deleted; next = structs[++i + 1]) {\n            len += next.length\n          }\n        }\n        dsitems.push(new DeleteItem(clock, len))\n      }\n    }\n    if (dsitems.length > 0) {\n      ds.clients.set(client, dsitems)\n    }\n  })\n  return ds\n}\n\n/**\n * @param {DSEncoderV1 | DSEncoderV2} encoder\n * @param {DeleteSet} ds\n *\n * @private\n * @function\n */\nexport const writeDeleteSet = (encoder, ds) => {\n  encoding.writeVarUint(encoder.restEncoder, ds.clients.size)\n\n  // Ensure that the delete set is written in a deterministic order\n  array.from(ds.clients.entries())\n    .sort((a, b) => b[0] - a[0])\n    .forEach(([client, dsitems]) => {\n      encoder.resetDsCurVal()\n      encoding.writeVarUint(encoder.restEncoder, client)\n      const len = dsitems.length\n      encoding.writeVarUint(encoder.restEncoder, len)\n      for (let i = 0; i < len; i++) {\n        const item = dsitems[i]\n        encoder.writeDsClock(item.clock)\n        encoder.writeDsLen(item.len)\n      }\n    })\n}\n\n/**\n * @param {DSDecoderV1 | DSDecoderV2} decoder\n * @return {DeleteSet}\n *\n * @private\n * @function\n */\nexport const readDeleteSet = decoder => {\n  const ds = new DeleteSet()\n  const numClients = decoding.readVarUint(decoder.restDecoder)\n  for (let i = 0; i < numClients; i++) {\n    decoder.resetDsCurVal()\n    const client = decoding.readVarUint(decoder.restDecoder)\n    const numberOfDeletes = decoding.readVarUint(decoder.restDecoder)\n    if (numberOfDeletes > 0) {\n      const dsField = map.setIfUndefined(ds.clients, client, () => /** @type {Array<DeleteItem>} */ ([]))\n      for (let i = 0; i < numberOfDeletes; i++) {\n        dsField.push(new DeleteItem(decoder.readDsClock(), decoder.readDsLen()))\n      }\n    }\n  }\n  return ds\n}\n\n/**\n * @todo YDecoder also contains references to String and other Decoders. Would make sense to exchange YDecoder.toUint8Array for YDecoder.DsToUint8Array()..\n */\n\n/**\n * @param {DSDecoderV1 | DSDecoderV2} decoder\n * @param {Transaction} transaction\n * @param {StructStore} store\n * @return {Uint8Array|null} Returns a v2 update containing all deletes that couldn't be applied yet; or null if all deletes were applied successfully.\n *\n * @private\n * @function\n */\nexport const readAndApplyDeleteSet = (decoder, transaction, store) => {\n  const unappliedDS = new DeleteSet()\n  const numClients = decoding.readVarUint(decoder.restDecoder)\n  for (let i = 0; i < numClients; i++) {\n    decoder.resetDsCurVal()\n    const client = decoding.readVarUint(decoder.restDecoder)\n    const numberOfDeletes = decoding.readVarUint(decoder.restDecoder)\n    const structs = store.clients.get(client) || []\n    const state = getState(store, client)\n    for (let i = 0; i < numberOfDeletes; i++) {\n      const clock = decoder.readDsClock()\n      const clockEnd = clock + decoder.readDsLen()\n      if (clock < state) {\n        if (state < clockEnd) {\n          addToDeleteSet(unappliedDS, client, state, clockEnd - state)\n        }\n        let index = findIndexSS(structs, clock)\n        /**\n         * We can ignore the case of GC and Delete structs, because we are going to skip them\n         * @type {Item}\n         */\n        // @ts-ignore\n        let struct = structs[index]\n        // split the first item if necessary\n        if (!struct.deleted && struct.id.clock < clock) {\n          structs.splice(index + 1, 0, splitItem(transaction, struct, clock - struct.id.clock))\n          index++ // increase we now want to use the next struct\n        }\n        while (index < structs.length) {\n          // @ts-ignore\n          struct = structs[index++]\n          if (struct.id.clock < clockEnd) {\n            if (!struct.deleted) {\n              if (clockEnd < struct.id.clock + struct.length) {\n                structs.splice(index, 0, splitItem(transaction, struct, clockEnd - struct.id.clock))\n              }\n              struct.delete(transaction)\n            }\n          } else {\n            break\n          }\n        }\n      } else {\n        addToDeleteSet(unappliedDS, client, clock, clockEnd - clock)\n      }\n    }\n  }\n  if (unappliedDS.clients.size > 0) {\n    const ds = new UpdateEncoderV2()\n    encoding.writeVarUint(ds.restEncoder, 0) // encode 0 structs\n    writeDeleteSet(ds, unappliedDS)\n    return ds.toUint8Array()\n  }\n  return null\n}\n","/**\n * @module Y\n */\n\nimport {\n  StructStore,\n  AbstractType,\n  YArray,\n  YText,\n  YMap,\n  YXmlFragment,\n  transact,\n  ContentDoc, Item, Transaction, YEvent // eslint-disable-line\n} from '../internals.js'\n\nimport { Observable } from 'lib0/observable'\nimport * as random from 'lib0/random'\nimport * as map from 'lib0/map'\nimport * as array from 'lib0/array'\nimport * as promise from 'lib0/promise'\n\nexport const generateNewClientId = random.uint32\n\n/**\n * @typedef {Object} DocOpts\n * @property {boolean} [DocOpts.gc=true] Disable garbage collection (default: gc=true)\n * @property {function(Item):boolean} [DocOpts.gcFilter] Will be called before an Item is garbage collected. Return false to keep the Item.\n * @property {string} [DocOpts.guid] Define a globally unique identifier for this document\n * @property {string | null} [DocOpts.collectionid] Associate this document with a collection. This only plays a role if your provider has a concept of collection.\n * @property {any} [DocOpts.meta] Any kind of meta information you want to associate with this document. If this is a subdocument, remote peers will store the meta information as well.\n * @property {boolean} [DocOpts.autoLoad] If a subdocument, automatically load document. If this is a subdocument, remote peers will load the document as well automatically.\n * @property {boolean} [DocOpts.shouldLoad] Whether the document should be synced by the provider now. This is toggled to true when you call ydoc.load()\n */\n\n/**\n * A Yjs instance handles the state of shared data.\n * @extends Observable<string>\n */\nexport class Doc extends Observable {\n  /**\n   * @param {DocOpts} opts configuration\n   */\n  constructor ({ guid = random.uuidv4(), collectionid = null, gc = true, gcFilter = () => true, meta = null, autoLoad = false, shouldLoad = true } = {}) {\n    super()\n    this.gc = gc\n    this.gcFilter = gcFilter\n    this.clientID = generateNewClientId()\n    this.guid = guid\n    this.collectionid = collectionid\n    /**\n     * @type {Map<string, AbstractType<YEvent<any>>>}\n     */\n    this.share = new Map()\n    this.store = new StructStore()\n    /**\n     * @type {Transaction | null}\n     */\n    this._transaction = null\n    /**\n     * @type {Array<Transaction>}\n     */\n    this._transactionCleanups = []\n    /**\n     * @type {Set<Doc>}\n     */\n    this.subdocs = new Set()\n    /**\n     * If this document is a subdocument - a document integrated into another document - then _item is defined.\n     * @type {Item?}\n     */\n    this._item = null\n    this.shouldLoad = shouldLoad\n    this.autoLoad = autoLoad\n    this.meta = meta\n    /**\n     * This is set to true when the persistence provider loaded the document from the database or when the `sync` event fires.\n     * Note that not all providers implement this feature. Provider authors are encouraged to fire the `load` event when the doc content is loaded from the database.\n     *\n     * @type {boolean}\n     */\n    this.isLoaded = false\n    /**\n     * This is set to true when the connection provider has successfully synced with a backend.\n     * Note that when using peer-to-peer providers this event may not provide very useful.\n     * Also note that not all providers implement this feature. Provider authors are encouraged to fire\n     * the `sync` event when the doc has been synced (with `true` as a parameter) or if connection is\n     * lost (with false as a parameter).\n     */\n    this.isSynced = false\n    /**\n     * Promise that resolves once the document has been loaded from a presistence provider.\n     */\n    this.whenLoaded = promise.create(resolve => {\n      this.on('load', () => {\n        this.isLoaded = true\n        resolve(this)\n      })\n    })\n    const provideSyncedPromise = () => promise.create(resolve => {\n      /**\n       * @param {boolean} isSynced\n       */\n      const eventHandler = (isSynced) => {\n        if (isSynced === undefined || isSynced === true) {\n          this.off('sync', eventHandler)\n          resolve()\n        }\n      }\n      this.on('sync', eventHandler)\n    })\n    this.on('sync', isSynced => {\n      if (isSynced === false && this.isSynced) {\n        this.whenSynced = provideSyncedPromise()\n      }\n      this.isSynced = isSynced === undefined || isSynced === true\n      if (!this.isLoaded) {\n        this.emit('load', [])\n      }\n    })\n    /**\n     * Promise that resolves once the document has been synced with a backend.\n     * This promise is recreated when the connection is lost.\n     * Note the documentation about the `isSynced` property.\n     */\n    this.whenSynced = provideSyncedPromise()\n  }\n\n  /**\n   * Notify the parent document that you request to load data into this subdocument (if it is a subdocument).\n   *\n   * `load()` might be used in the future to request any provider to load the most current data.\n   *\n   * It is safe to call `load()` multiple times.\n   */\n  load () {\n    const item = this._item\n    if (item !== null && !this.shouldLoad) {\n      transact(/** @type {any} */ (item.parent).doc, transaction => {\n        transaction.subdocsLoaded.add(this)\n      }, null, true)\n    }\n    this.shouldLoad = true\n  }\n\n  getSubdocs () {\n    return this.subdocs\n  }\n\n  getSubdocGuids () {\n    return new Set(array.from(this.subdocs).map(doc => doc.guid))\n  }\n\n  /**\n   * Changes that happen inside of a transaction are bundled. This means that\n   * the observer fires _after_ the transaction is finished and that all changes\n   * that happened inside of the transaction are sent as one message to the\n   * other peers.\n   *\n   * @template T\n   * @param {function(Transaction):T} f The function that should be executed as a transaction\n   * @param {any} [origin] Origin of who started the transaction. Will be stored on transaction.origin\n   * @return T\n   *\n   * @public\n   */\n  transact (f, origin = null) {\n    return transact(this, f, origin)\n  }\n\n  /**\n   * Define a shared data type.\n   *\n   * Multiple calls of `y.get(name, TypeConstructor)` yield the same result\n   * and do not overwrite each other. I.e.\n   * `y.define(name, Y.Array) === y.define(name, Y.Array)`\n   *\n   * After this method is called, the type is also available on `y.share.get(name)`.\n   *\n   * *Best Practices:*\n   * Define all types right after the Yjs instance is created and store them in a separate object.\n   * Also use the typed methods `getText(name)`, `getArray(name)`, ..\n   *\n   * @example\n   *   const y = new Y(..)\n   *   const appState = {\n   *     document: y.getText('document')\n   *     comments: y.getArray('comments')\n   *   }\n   *\n   * @param {string} name\n   * @param {Function} TypeConstructor The constructor of the type definition. E.g. Y.Text, Y.Array, Y.Map, ...\n   * @return {AbstractType<any>} The created type. Constructed with TypeConstructor\n   *\n   * @public\n   */\n  get (name, TypeConstructor = AbstractType) {\n    const type = map.setIfUndefined(this.share, name, () => {\n      // @ts-ignore\n      const t = new TypeConstructor()\n      t._integrate(this, null)\n      return t\n    })\n    const Constr = type.constructor\n    if (TypeConstructor !== AbstractType && Constr !== TypeConstructor) {\n      if (Constr === AbstractType) {\n        // @ts-ignore\n        const t = new TypeConstructor()\n        t._map = type._map\n        type._map.forEach(/** @param {Item?} n */ n => {\n          for (; n !== null; n = n.left) {\n            // @ts-ignore\n            n.parent = t\n          }\n        })\n        t._start = type._start\n        for (let n = t._start; n !== null; n = n.right) {\n          n.parent = t\n        }\n        t._length = type._length\n        this.share.set(name, t)\n        t._integrate(this, null)\n        return t\n      } else {\n        throw new Error(`Type with the name ${name} has already been defined with a different constructor`)\n      }\n    }\n    return type\n  }\n\n  /**\n   * @template T\n   * @param {string} [name]\n   * @return {YArray<T>}\n   *\n   * @public\n   */\n  getArray (name = '') {\n    // @ts-ignore\n    return this.get(name, YArray)\n  }\n\n  /**\n   * @param {string} [name]\n   * @return {YText}\n   *\n   * @public\n   */\n  getText (name = '') {\n    // @ts-ignore\n    return this.get(name, YText)\n  }\n\n  /**\n   * @template T\n   * @param {string} [name]\n   * @return {YMap<T>}\n   *\n   * @public\n   */\n  getMap (name = '') {\n    // @ts-ignore\n    return this.get(name, YMap)\n  }\n\n  /**\n   * @param {string} [name]\n   * @return {YXmlFragment}\n   *\n   * @public\n   */\n  getXmlFragment (name = '') {\n    // @ts-ignore\n    return this.get(name, YXmlFragment)\n  }\n\n  /**\n   * Converts the entire document into a js object, recursively traversing each yjs type\n   * Doesn't log types that have not been defined (using ydoc.getType(..)).\n   *\n   * @deprecated Do not use this method and rather call toJSON directly on the shared types.\n   *\n   * @return {Object<string, any>}\n   */\n  toJSON () {\n    /**\n     * @type {Object<string, any>}\n     */\n    const doc = {}\n\n    this.share.forEach((value, key) => {\n      doc[key] = value.toJSON()\n    })\n\n    return doc\n  }\n\n  /**\n   * Emit `destroy` event and unregister all event handlers.\n   */\n  destroy () {\n    array.from(this.subdocs).forEach(subdoc => subdoc.destroy())\n    const item = this._item\n    if (item !== null) {\n      this._item = null\n      const content = /** @type {ContentDoc} */ (item.content)\n      content.doc = new Doc({ guid: this.guid, ...content.opts, shouldLoad: false })\n      content.doc._item = item\n      transact(/** @type {any} */ (item).parent.doc, transaction => {\n        const doc = content.doc\n        if (!item.deleted) {\n          transaction.subdocsAdded.add(doc)\n        }\n        transaction.subdocsRemoved.add(this)\n      }, null, true)\n    }\n    this.emit('destroyed', [true])\n    this.emit('destroy', [this])\n    super.destroy()\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {function(...any):any} f\n   */\n  on (eventName, f) {\n    super.on(eventName, f)\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {function} f\n   */\n  off (eventName, f) {\n    super.off(eventName, f)\n  }\n}\n","import * as buffer from 'lib0/buffer'\nimport * as decoding from 'lib0/decoding'\nimport {\n  ID, createID\n} from '../internals.js'\n\nexport class DSDecoderV1 {\n  /**\n   * @param {decoding.Decoder} decoder\n   */\n  constructor (decoder) {\n    this.restDecoder = decoder\n  }\n\n  resetDsCurVal () {\n    // nop\n  }\n\n  /**\n   * @return {number}\n   */\n  readDsClock () {\n    return decoding.readVarUint(this.restDecoder)\n  }\n\n  /**\n   * @return {number}\n   */\n  readDsLen () {\n    return decoding.readVarUint(this.restDecoder)\n  }\n}\n\nexport class UpdateDecoderV1 extends DSDecoderV1 {\n  /**\n   * @return {ID}\n   */\n  readLeftID () {\n    return createID(decoding.readVarUint(this.restDecoder), decoding.readVarUint(this.restDecoder))\n  }\n\n  /**\n   * @return {ID}\n   */\n  readRightID () {\n    return createID(decoding.readVarUint(this.restDecoder), decoding.readVarUint(this.restDecoder))\n  }\n\n  /**\n   * Read the next client id.\n   * Use this in favor of readID whenever possible to reduce the number of objects created.\n   */\n  readClient () {\n    return decoding.readVarUint(this.restDecoder)\n  }\n\n  /**\n   * @return {number} info An unsigned 8-bit integer\n   */\n  readInfo () {\n    return decoding.readUint8(this.restDecoder)\n  }\n\n  /**\n   * @return {string}\n   */\n  readString () {\n    return decoding.readVarString(this.restDecoder)\n  }\n\n  /**\n   * @return {boolean} isKey\n   */\n  readParentInfo () {\n    return decoding.readVarUint(this.restDecoder) === 1\n  }\n\n  /**\n   * @return {number} info An unsigned 8-bit integer\n   */\n  readTypeRef () {\n    return decoding.readVarUint(this.restDecoder)\n  }\n\n  /**\n   * Write len of a struct - well suited for Opt RLE encoder.\n   *\n   * @return {number} len\n   */\n  readLen () {\n    return decoding.readVarUint(this.restDecoder)\n  }\n\n  /**\n   * @return {any}\n   */\n  readAny () {\n    return decoding.readAny(this.restDecoder)\n  }\n\n  /**\n   * @return {Uint8Array}\n   */\n  readBuf () {\n    return buffer.copyUint8Array(decoding.readVarUint8Array(this.restDecoder))\n  }\n\n  /**\n   * Legacy implementation uses JSON parse. We use any-decoding in v2.\n   *\n   * @return {any}\n   */\n  readJSON () {\n    return JSON.parse(decoding.readVarString(this.restDecoder))\n  }\n\n  /**\n   * @return {string}\n   */\n  readKey () {\n    return decoding.readVarString(this.restDecoder)\n  }\n}\n\nexport class DSDecoderV2 {\n  /**\n   * @param {decoding.Decoder} decoder\n   */\n  constructor (decoder) {\n    /**\n     * @private\n     */\n    this.dsCurrVal = 0\n    this.restDecoder = decoder\n  }\n\n  resetDsCurVal () {\n    this.dsCurrVal = 0\n  }\n\n  /**\n   * @return {number}\n   */\n  readDsClock () {\n    this.dsCurrVal += decoding.readVarUint(this.restDecoder)\n    return this.dsCurrVal\n  }\n\n  /**\n   * @return {number}\n   */\n  readDsLen () {\n    const diff = decoding.readVarUint(this.restDecoder) + 1\n    this.dsCurrVal += diff\n    return diff\n  }\n}\n\nexport class UpdateDecoderV2 extends DSDecoderV2 {\n  /**\n   * @param {decoding.Decoder} decoder\n   */\n  constructor (decoder) {\n    super(decoder)\n    /**\n     * List of cached keys. If the keys[id] does not exist, we read a new key\n     * from stringEncoder and push it to keys.\n     *\n     * @type {Array<string>}\n     */\n    this.keys = []\n    decoding.readVarUint(decoder) // read feature flag - currently unused\n    this.keyClockDecoder = new decoding.IntDiffOptRleDecoder(decoding.readVarUint8Array(decoder))\n    this.clientDecoder = new decoding.UintOptRleDecoder(decoding.readVarUint8Array(decoder))\n    this.leftClockDecoder = new decoding.IntDiffOptRleDecoder(decoding.readVarUint8Array(decoder))\n    this.rightClockDecoder = new decoding.IntDiffOptRleDecoder(decoding.readVarUint8Array(decoder))\n    this.infoDecoder = new decoding.RleDecoder(decoding.readVarUint8Array(decoder), decoding.readUint8)\n    this.stringDecoder = new decoding.StringDecoder(decoding.readVarUint8Array(decoder))\n    this.parentInfoDecoder = new decoding.RleDecoder(decoding.readVarUint8Array(decoder), decoding.readUint8)\n    this.typeRefDecoder = new decoding.UintOptRleDecoder(decoding.readVarUint8Array(decoder))\n    this.lenDecoder = new decoding.UintOptRleDecoder(decoding.readVarUint8Array(decoder))\n  }\n\n  /**\n   * @return {ID}\n   */\n  readLeftID () {\n    return new ID(this.clientDecoder.read(), this.leftClockDecoder.read())\n  }\n\n  /**\n   * @return {ID}\n   */\n  readRightID () {\n    return new ID(this.clientDecoder.read(), this.rightClockDecoder.read())\n  }\n\n  /**\n   * Read the next client id.\n   * Use this in favor of readID whenever possible to reduce the number of objects created.\n   */\n  readClient () {\n    return this.clientDecoder.read()\n  }\n\n  /**\n   * @return {number} info An unsigned 8-bit integer\n   */\n  readInfo () {\n    return /** @type {number} */ (this.infoDecoder.read())\n  }\n\n  /**\n   * @return {string}\n   */\n  readString () {\n    return this.stringDecoder.read()\n  }\n\n  /**\n   * @return {boolean}\n   */\n  readParentInfo () {\n    return this.parentInfoDecoder.read() === 1\n  }\n\n  /**\n   * @return {number} An unsigned 8-bit integer\n   */\n  readTypeRef () {\n    return this.typeRefDecoder.read()\n  }\n\n  /**\n   * Write len of a struct - well suited for Opt RLE encoder.\n   *\n   * @return {number}\n   */\n  readLen () {\n    return this.lenDecoder.read()\n  }\n\n  /**\n   * @return {any}\n   */\n  readAny () {\n    return decoding.readAny(this.restDecoder)\n  }\n\n  /**\n   * @return {Uint8Array}\n   */\n  readBuf () {\n    return decoding.readVarUint8Array(this.restDecoder)\n  }\n\n  /**\n   * This is mainly here for legacy purposes.\n   *\n   * Initial we incoded objects using JSON. Now we use the much faster lib0/any-encoder. This method mainly exists for legacy purposes for the v1 encoder.\n   *\n   * @return {any}\n   */\n  readJSON () {\n    return decoding.readAny(this.restDecoder)\n  }\n\n  /**\n   * @return {string}\n   */\n  readKey () {\n    const keyClock = this.keyClockDecoder.read()\n    if (keyClock < this.keys.length) {\n      return this.keys[keyClock]\n    } else {\n      const key = this.stringDecoder.read()\n      this.keys.push(key)\n      return key\n    }\n  }\n}\n","\nimport * as error from 'lib0/error'\nimport * as encoding from 'lib0/encoding'\n\nimport {\n  ID // eslint-disable-line\n} from '../internals.js'\n\nexport class DSEncoderV1 {\n  constructor () {\n    this.restEncoder = encoding.createEncoder()\n  }\n\n  toUint8Array () {\n    return encoding.toUint8Array(this.restEncoder)\n  }\n\n  resetDsCurVal () {\n    // nop\n  }\n\n  /**\n   * @param {number} clock\n   */\n  writeDsClock (clock) {\n    encoding.writeVarUint(this.restEncoder, clock)\n  }\n\n  /**\n   * @param {number} len\n   */\n  writeDsLen (len) {\n    encoding.writeVarUint(this.restEncoder, len)\n  }\n}\n\nexport class UpdateEncoderV1 extends DSEncoderV1 {\n  /**\n   * @param {ID} id\n   */\n  writeLeftID (id) {\n    encoding.writeVarUint(this.restEncoder, id.client)\n    encoding.writeVarUint(this.restEncoder, id.clock)\n  }\n\n  /**\n   * @param {ID} id\n   */\n  writeRightID (id) {\n    encoding.writeVarUint(this.restEncoder, id.client)\n    encoding.writeVarUint(this.restEncoder, id.clock)\n  }\n\n  /**\n   * Use writeClient and writeClock instead of writeID if possible.\n   * @param {number} client\n   */\n  writeClient (client) {\n    encoding.writeVarUint(this.restEncoder, client)\n  }\n\n  /**\n   * @param {number} info An unsigned 8-bit integer\n   */\n  writeInfo (info) {\n    encoding.writeUint8(this.restEncoder, info)\n  }\n\n  /**\n   * @param {string} s\n   */\n  writeString (s) {\n    encoding.writeVarString(this.restEncoder, s)\n  }\n\n  /**\n   * @param {boolean} isYKey\n   */\n  writeParentInfo (isYKey) {\n    encoding.writeVarUint(this.restEncoder, isYKey ? 1 : 0)\n  }\n\n  /**\n   * @param {number} info An unsigned 8-bit integer\n   */\n  writeTypeRef (info) {\n    encoding.writeVarUint(this.restEncoder, info)\n  }\n\n  /**\n   * Write len of a struct - well suited for Opt RLE encoder.\n   *\n   * @param {number} len\n   */\n  writeLen (len) {\n    encoding.writeVarUint(this.restEncoder, len)\n  }\n\n  /**\n   * @param {any} any\n   */\n  writeAny (any) {\n    encoding.writeAny(this.restEncoder, any)\n  }\n\n  /**\n   * @param {Uint8Array} buf\n   */\n  writeBuf (buf) {\n    encoding.writeVarUint8Array(this.restEncoder, buf)\n  }\n\n  /**\n   * @param {any} embed\n   */\n  writeJSON (embed) {\n    encoding.writeVarString(this.restEncoder, JSON.stringify(embed))\n  }\n\n  /**\n   * @param {string} key\n   */\n  writeKey (key) {\n    encoding.writeVarString(this.restEncoder, key)\n  }\n}\n\nexport class DSEncoderV2 {\n  constructor () {\n    this.restEncoder = encoding.createEncoder() // encodes all the rest / non-optimized\n    this.dsCurrVal = 0\n  }\n\n  toUint8Array () {\n    return encoding.toUint8Array(this.restEncoder)\n  }\n\n  resetDsCurVal () {\n    this.dsCurrVal = 0\n  }\n\n  /**\n   * @param {number} clock\n   */\n  writeDsClock (clock) {\n    const diff = clock - this.dsCurrVal\n    this.dsCurrVal = clock\n    encoding.writeVarUint(this.restEncoder, diff)\n  }\n\n  /**\n   * @param {number} len\n   */\n  writeDsLen (len) {\n    if (len === 0) {\n      error.unexpectedCase()\n    }\n    encoding.writeVarUint(this.restEncoder, len - 1)\n    this.dsCurrVal += len\n  }\n}\n\nexport class UpdateEncoderV2 extends DSEncoderV2 {\n  constructor () {\n    super()\n    /**\n     * @type {Map<string,number>}\n     */\n    this.keyMap = new Map()\n    /**\n     * Refers to the next uniqe key-identifier to me used.\n     * See writeKey method for more information.\n     *\n     * @type {number}\n     */\n    this.keyClock = 0\n    this.keyClockEncoder = new encoding.IntDiffOptRleEncoder()\n    this.clientEncoder = new encoding.UintOptRleEncoder()\n    this.leftClockEncoder = new encoding.IntDiffOptRleEncoder()\n    this.rightClockEncoder = new encoding.IntDiffOptRleEncoder()\n    this.infoEncoder = new encoding.RleEncoder(encoding.writeUint8)\n    this.stringEncoder = new encoding.StringEncoder()\n    this.parentInfoEncoder = new encoding.RleEncoder(encoding.writeUint8)\n    this.typeRefEncoder = new encoding.UintOptRleEncoder()\n    this.lenEncoder = new encoding.UintOptRleEncoder()\n  }\n\n  toUint8Array () {\n    const encoder = encoding.createEncoder()\n    encoding.writeVarUint(encoder, 0) // this is a feature flag that we might use in the future\n    encoding.writeVarUint8Array(encoder, this.keyClockEncoder.toUint8Array())\n    encoding.writeVarUint8Array(encoder, this.clientEncoder.toUint8Array())\n    encoding.writeVarUint8Array(encoder, this.leftClockEncoder.toUint8Array())\n    encoding.writeVarUint8Array(encoder, this.rightClockEncoder.toUint8Array())\n    encoding.writeVarUint8Array(encoder, encoding.toUint8Array(this.infoEncoder))\n    encoding.writeVarUint8Array(encoder, this.stringEncoder.toUint8Array())\n    encoding.writeVarUint8Array(encoder, encoding.toUint8Array(this.parentInfoEncoder))\n    encoding.writeVarUint8Array(encoder, this.typeRefEncoder.toUint8Array())\n    encoding.writeVarUint8Array(encoder, this.lenEncoder.toUint8Array())\n    // @note The rest encoder is appended! (note the missing var)\n    encoding.writeUint8Array(encoder, encoding.toUint8Array(this.restEncoder))\n    return encoding.toUint8Array(encoder)\n  }\n\n  /**\n   * @param {ID} id\n   */\n  writeLeftID (id) {\n    this.clientEncoder.write(id.client)\n    this.leftClockEncoder.write(id.clock)\n  }\n\n  /**\n   * @param {ID} id\n   */\n  writeRightID (id) {\n    this.clientEncoder.write(id.client)\n    this.rightClockEncoder.write(id.clock)\n  }\n\n  /**\n   * @param {number} client\n   */\n  writeClient (client) {\n    this.clientEncoder.write(client)\n  }\n\n  /**\n   * @param {number} info An unsigned 8-bit integer\n   */\n  writeInfo (info) {\n    this.infoEncoder.write(info)\n  }\n\n  /**\n   * @param {string} s\n   */\n  writeString (s) {\n    this.stringEncoder.write(s)\n  }\n\n  /**\n   * @param {boolean} isYKey\n   */\n  writeParentInfo (isYKey) {\n    this.parentInfoEncoder.write(isYKey ? 1 : 0)\n  }\n\n  /**\n   * @param {number} info An unsigned 8-bit integer\n   */\n  writeTypeRef (info) {\n    this.typeRefEncoder.write(info)\n  }\n\n  /**\n   * Write len of a struct - well suited for Opt RLE encoder.\n   *\n   * @param {number} len\n   */\n  writeLen (len) {\n    this.lenEncoder.write(len)\n  }\n\n  /**\n   * @param {any} any\n   */\n  writeAny (any) {\n    encoding.writeAny(this.restEncoder, any)\n  }\n\n  /**\n   * @param {Uint8Array} buf\n   */\n  writeBuf (buf) {\n    encoding.writeVarUint8Array(this.restEncoder, buf)\n  }\n\n  /**\n   * This is mainly here for legacy purposes.\n   *\n   * Initial we incoded objects using JSON. Now we use the much faster lib0/any-encoder. This method mainly exists for legacy purposes for the v1 encoder.\n   *\n   * @param {any} embed\n   */\n  writeJSON (embed) {\n    encoding.writeAny(this.restEncoder, embed)\n  }\n\n  /**\n   * Property keys are often reused. For example, in y-prosemirror the key `bold` might\n   * occur very often. For a 3d application, the key `position` might occur very often.\n   *\n   * We cache these keys in a Map and refer to them via a unique number.\n   *\n   * @param {string} key\n   */\n  writeKey (key) {\n    const clock = this.keyMap.get(key)\n    if (clock === undefined) {\n      /**\n       * @todo uncomment to introduce this feature finally\n       *\n       * Background. The ContentFormat object was always encoded using writeKey, but the decoder used to use readString.\n       * Furthermore, I forgot to set the keyclock. So everything was working fine.\n       *\n       * However, this feature here is basically useless as it is not being used (it actually only consumes extra memory).\n       *\n       * I don't know yet how to reintroduce this feature..\n       *\n       * Older clients won't be able to read updates when we reintroduce this feature. So this should probably be done using a flag.\n       *\n       */\n      // this.keyMap.set(key, this.keyClock)\n      this.keyClockEncoder.write(this.keyClock++)\n      this.stringEncoder.write(key)\n    } else {\n      this.keyClockEncoder.write(clock)\n    }\n  }\n}\n","\n/**\n * @module encoding\n */\n/*\n * We use the first five bits in the info flag for determining the type of the struct.\n *\n * 0: GC\n * 1: Item with Deleted content\n * 2: Item with JSON content\n * 3: Item with Binary content\n * 4: Item with String content\n * 5: Item with Embed content (for richtext content)\n * 6: Item with Format content (a formatting marker for richtext content)\n * 7: Item with Type\n */\n\nimport {\n  findIndexSS,\n  getState,\n  createID,\n  getStateVector,\n  readAndApplyDeleteSet,\n  writeDeleteSet,\n  createDeleteSetFromStructStore,\n  transact,\n  readItemContent,\n  UpdateDecoderV1,\n  UpdateDecoderV2,\n  UpdateEncoderV1,\n  UpdateEncoderV2,\n  DSEncoderV2,\n  DSDecoderV1,\n  DSEncoderV1,\n  mergeUpdates,\n  mergeUpdatesV2,\n  Skip,\n  diffUpdateV2,\n  convertUpdateFormatV2ToV1,\n  DSDecoderV2, Doc, Transaction, GC, Item, StructStore // eslint-disable-line\n} from '../internals.js'\n\nimport * as encoding from 'lib0/encoding'\nimport * as decoding from 'lib0/decoding'\nimport * as binary from 'lib0/binary'\nimport * as map from 'lib0/map'\nimport * as math from 'lib0/math'\nimport * as array from 'lib0/array'\n\n/**\n * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n * @param {Array<GC|Item>} structs All structs by `client`\n * @param {number} client\n * @param {number} clock write structs starting with `ID(client,clock)`\n *\n * @function\n */\nconst writeStructs = (encoder, structs, client, clock) => {\n  // write first id\n  clock = math.max(clock, structs[0].id.clock) // make sure the first id exists\n  const startNewStructs = findIndexSS(structs, clock)\n  // write # encoded structs\n  encoding.writeVarUint(encoder.restEncoder, structs.length - startNewStructs)\n  encoder.writeClient(client)\n  encoding.writeVarUint(encoder.restEncoder, clock)\n  const firstStruct = structs[startNewStructs]\n  // write first struct with an offset\n  firstStruct.write(encoder, clock - firstStruct.id.clock)\n  for (let i = startNewStructs + 1; i < structs.length; i++) {\n    structs[i].write(encoder, 0)\n  }\n}\n\n/**\n * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n * @param {StructStore} store\n * @param {Map<number,number>} _sm\n *\n * @private\n * @function\n */\nexport const writeClientsStructs = (encoder, store, _sm) => {\n  // we filter all valid _sm entries into sm\n  const sm = new Map()\n  _sm.forEach((clock, client) => {\n    // only write if new structs are available\n    if (getState(store, client) > clock) {\n      sm.set(client, clock)\n    }\n  })\n  getStateVector(store).forEach((clock, client) => {\n    if (!_sm.has(client)) {\n      sm.set(client, 0)\n    }\n  })\n  // write # states that were updated\n  encoding.writeVarUint(encoder.restEncoder, sm.size)\n  // Write items with higher client ids first\n  // This heavily improves the conflict algorithm.\n  array.from(sm.entries()).sort((a, b) => b[0] - a[0]).forEach(([client, clock]) => {\n    // @ts-ignore\n    writeStructs(encoder, store.clients.get(client), client, clock)\n  })\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder The decoder object to read data from.\n * @param {Doc} doc\n * @return {Map<number, { i: number, refs: Array<Item | GC> }>}\n *\n * @private\n * @function\n */\nexport const readClientsStructRefs = (decoder, doc) => {\n  /**\n   * @type {Map<number, { i: number, refs: Array<Item | GC> }>}\n   */\n  const clientRefs = map.create()\n  const numOfStateUpdates = decoding.readVarUint(decoder.restDecoder)\n  for (let i = 0; i < numOfStateUpdates; i++) {\n    const numberOfStructs = decoding.readVarUint(decoder.restDecoder)\n    /**\n     * @type {Array<GC|Item>}\n     */\n    const refs = new Array(numberOfStructs)\n    const client = decoder.readClient()\n    let clock = decoding.readVarUint(decoder.restDecoder)\n    // const start = performance.now()\n    clientRefs.set(client, { i: 0, refs })\n    for (let i = 0; i < numberOfStructs; i++) {\n      const info = decoder.readInfo()\n      switch (binary.BITS5 & info) {\n        case 0: { // GC\n          const len = decoder.readLen()\n          refs[i] = new GC(createID(client, clock), len)\n          clock += len\n          break\n        }\n        case 10: { // Skip Struct (nothing to apply)\n          // @todo we could reduce the amount of checks by adding Skip struct to clientRefs so we know that something is missing.\n          const len = decoding.readVarUint(decoder.restDecoder)\n          refs[i] = new Skip(createID(client, clock), len)\n          clock += len\n          break\n        }\n        default: { // Item with content\n          /**\n           * The optimized implementation doesn't use any variables because inlining variables is faster.\n           * Below a non-optimized version is shown that implements the basic algorithm with\n           * a few comments\n           */\n          const cantCopyParentInfo = (info & (binary.BIT7 | binary.BIT8)) === 0\n          // If parent = null and neither left nor right are defined, then we know that `parent` is child of `y`\n          // and we read the next string as parentYKey.\n          // It indicates how we store/retrieve parent from `y.share`\n          // @type {string|null}\n          const struct = new Item(\n            createID(client, clock),\n            null, // leftd\n            (info & binary.BIT8) === binary.BIT8 ? decoder.readLeftID() : null, // origin\n            null, // right\n            (info & binary.BIT7) === binary.BIT7 ? decoder.readRightID() : null, // right origin\n            cantCopyParentInfo ? (decoder.readParentInfo() ? doc.get(decoder.readString()) : decoder.readLeftID()) : null, // parent\n            cantCopyParentInfo && (info & binary.BIT6) === binary.BIT6 ? decoder.readString() : null, // parentSub\n            readItemContent(decoder, info) // item content\n          )\n          /* A non-optimized implementation of the above algorithm:\n\n          // The item that was originally to the left of this item.\n          const origin = (info & binary.BIT8) === binary.BIT8 ? decoder.readLeftID() : null\n          // The item that was originally to the right of this item.\n          const rightOrigin = (info & binary.BIT7) === binary.BIT7 ? decoder.readRightID() : null\n          const cantCopyParentInfo = (info & (binary.BIT7 | binary.BIT8)) === 0\n          const hasParentYKey = cantCopyParentInfo ? decoder.readParentInfo() : false\n          // If parent = null and neither left nor right are defined, then we know that `parent` is child of `y`\n          // and we read the next string as parentYKey.\n          // It indicates how we store/retrieve parent from `y.share`\n          // @type {string|null}\n          const parentYKey = cantCopyParentInfo && hasParentYKey ? decoder.readString() : null\n\n          const struct = new Item(\n            createID(client, clock),\n            null, // leftd\n            origin, // origin\n            null, // right\n            rightOrigin, // right origin\n            cantCopyParentInfo && !hasParentYKey ? decoder.readLeftID() : (parentYKey !== null ? doc.get(parentYKey) : null), // parent\n            cantCopyParentInfo && (info & binary.BIT6) === binary.BIT6 ? decoder.readString() : null, // parentSub\n            readItemContent(decoder, info) // item content\n          )\n          */\n          refs[i] = struct\n          clock += struct.length\n        }\n      }\n    }\n    // console.log('time to read: ', performance.now() - start) // @todo remove\n  }\n  return clientRefs\n}\n\n/**\n * Resume computing structs generated by struct readers.\n *\n * While there is something to do, we integrate structs in this order\n * 1. top element on stack, if stack is not empty\n * 2. next element from current struct reader (if empty, use next struct reader)\n *\n * If struct causally depends on another struct (ref.missing), we put next reader of\n * `ref.id.client` on top of stack.\n *\n * At some point we find a struct that has no causal dependencies,\n * then we start emptying the stack.\n *\n * It is not possible to have circles: i.e. struct1 (from client1) depends on struct2 (from client2)\n * depends on struct3 (from client1). Therefore the max stack size is eqaul to `structReaders.length`.\n *\n * This method is implemented in a way so that we can resume computation if this update\n * causally depends on another update.\n *\n * @param {Transaction} transaction\n * @param {StructStore} store\n * @param {Map<number, { i: number, refs: (GC | Item)[] }>} clientsStructRefs\n * @return { null | { update: Uint8Array, missing: Map<number,number> } }\n *\n * @private\n * @function\n */\nconst integrateStructs = (transaction, store, clientsStructRefs) => {\n  /**\n   * @type {Array<Item | GC>}\n   */\n  const stack = []\n  // sort them so that we take the higher id first, in case of conflicts the lower id will probably not conflict with the id from the higher user.\n  let clientsStructRefsIds = array.from(clientsStructRefs.keys()).sort((a, b) => a - b)\n  if (clientsStructRefsIds.length === 0) {\n    return null\n  }\n  const getNextStructTarget = () => {\n    if (clientsStructRefsIds.length === 0) {\n      return null\n    }\n    let nextStructsTarget = /** @type {{i:number,refs:Array<GC|Item>}} */ (clientsStructRefs.get(clientsStructRefsIds[clientsStructRefsIds.length - 1]))\n    while (nextStructsTarget.refs.length === nextStructsTarget.i) {\n      clientsStructRefsIds.pop()\n      if (clientsStructRefsIds.length > 0) {\n        nextStructsTarget = /** @type {{i:number,refs:Array<GC|Item>}} */ (clientsStructRefs.get(clientsStructRefsIds[clientsStructRefsIds.length - 1]))\n      } else {\n        return null\n      }\n    }\n    return nextStructsTarget\n  }\n  let curStructsTarget = getNextStructTarget()\n  if (curStructsTarget === null && stack.length === 0) {\n    return null\n  }\n\n  /**\n   * @type {StructStore}\n   */\n  const restStructs = new StructStore()\n  const missingSV = new Map()\n  /**\n   * @param {number} client\n   * @param {number} clock\n   */\n  const updateMissingSv = (client, clock) => {\n    const mclock = missingSV.get(client)\n    if (mclock == null || mclock > clock) {\n      missingSV.set(client, clock)\n    }\n  }\n  /**\n   * @type {GC|Item}\n   */\n  let stackHead = /** @type {any} */ (curStructsTarget).refs[/** @type {any} */ (curStructsTarget).i++]\n  // caching the state because it is used very often\n  const state = new Map()\n\n  const addStackToRestSS = () => {\n    for (const item of stack) {\n      const client = item.id.client\n      const unapplicableItems = clientsStructRefs.get(client)\n      if (unapplicableItems) {\n        // decrement because we weren't able to apply previous operation\n        unapplicableItems.i--\n        restStructs.clients.set(client, unapplicableItems.refs.slice(unapplicableItems.i))\n        clientsStructRefs.delete(client)\n        unapplicableItems.i = 0\n        unapplicableItems.refs = []\n      } else {\n        // item was the last item on clientsStructRefs and the field was already cleared. Add item to restStructs and continue\n        restStructs.clients.set(client, [item])\n      }\n      // remove client from clientsStructRefsIds to prevent users from applying the same update again\n      clientsStructRefsIds = clientsStructRefsIds.filter(c => c !== client)\n    }\n    stack.length = 0\n  }\n\n  // iterate over all struct readers until we are done\n  while (true) {\n    if (stackHead.constructor !== Skip) {\n      const localClock = map.setIfUndefined(state, stackHead.id.client, () => getState(store, stackHead.id.client))\n      const offset = localClock - stackHead.id.clock\n      if (offset < 0) {\n        // update from the same client is missing\n        stack.push(stackHead)\n        updateMissingSv(stackHead.id.client, stackHead.id.clock - 1)\n        // hid a dead wall, add all items from stack to restSS\n        addStackToRestSS()\n      } else {\n        const missing = stackHead.getMissing(transaction, store)\n        if (missing !== null) {\n          stack.push(stackHead)\n          // get the struct reader that has the missing struct\n          /**\n           * @type {{ refs: Array<GC|Item>, i: number }}\n           */\n          const structRefs = clientsStructRefs.get(/** @type {number} */ (missing)) || { refs: [], i: 0 }\n          if (structRefs.refs.length === structRefs.i) {\n            // This update message causally depends on another update message that doesn't exist yet\n            updateMissingSv(/** @type {number} */ (missing), getState(store, missing))\n            addStackToRestSS()\n          } else {\n            stackHead = structRefs.refs[structRefs.i++]\n            continue\n          }\n        } else if (offset === 0 || offset < stackHead.length) {\n          // all fine, apply the stackhead\n          stackHead.integrate(transaction, offset)\n          state.set(stackHead.id.client, stackHead.id.clock + stackHead.length)\n        }\n      }\n    }\n    // iterate to next stackHead\n    if (stack.length > 0) {\n      stackHead = /** @type {GC|Item} */ (stack.pop())\n    } else if (curStructsTarget !== null && curStructsTarget.i < curStructsTarget.refs.length) {\n      stackHead = /** @type {GC|Item} */ (curStructsTarget.refs[curStructsTarget.i++])\n    } else {\n      curStructsTarget = getNextStructTarget()\n      if (curStructsTarget === null) {\n        // we are done!\n        break\n      } else {\n        stackHead = /** @type {GC|Item} */ (curStructsTarget.refs[curStructsTarget.i++])\n      }\n    }\n  }\n  if (restStructs.clients.size > 0) {\n    const encoder = new UpdateEncoderV2()\n    writeClientsStructs(encoder, restStructs, new Map())\n    // write empty deleteset\n    // writeDeleteSet(encoder, new DeleteSet())\n    encoding.writeVarUint(encoder.restEncoder, 0) // => no need for an extra function call, just write 0 deletes\n    return { missing: missingSV, update: encoder.toUint8Array() }\n  }\n  return null\n}\n\n/**\n * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n * @param {Transaction} transaction\n *\n * @private\n * @function\n */\nexport const writeStructsFromTransaction = (encoder, transaction) => writeClientsStructs(encoder, transaction.doc.store, transaction.beforeState)\n\n/**\n * Read and apply a document update.\n *\n * This function has the same effect as `applyUpdate` but accepts an decoder.\n *\n * @param {decoding.Decoder} decoder\n * @param {Doc} ydoc\n * @param {any} [transactionOrigin] This will be stored on `transaction.origin` and `.on('update', (update, origin))`\n * @param {UpdateDecoderV1 | UpdateDecoderV2} [structDecoder]\n *\n * @function\n */\nexport const readUpdateV2 = (decoder, ydoc, transactionOrigin, structDecoder = new UpdateDecoderV2(decoder)) =>\n  transact(ydoc, transaction => {\n    // force that transaction.local is set to non-local\n    transaction.local = false\n    let retry = false\n    const doc = transaction.doc\n    const store = doc.store\n    // let start = performance.now()\n    const ss = readClientsStructRefs(structDecoder, doc)\n    // console.log('time to read structs: ', performance.now() - start) // @todo remove\n    // start = performance.now()\n    // console.log('time to merge: ', performance.now() - start) // @todo remove\n    // start = performance.now()\n    const restStructs = integrateStructs(transaction, store, ss)\n    const pending = store.pendingStructs\n    if (pending) {\n      // check if we can apply something\n      for (const [client, clock] of pending.missing) {\n        if (clock < getState(store, client)) {\n          retry = true\n          break\n        }\n      }\n      if (restStructs) {\n        // merge restStructs into store.pending\n        for (const [client, clock] of restStructs.missing) {\n          const mclock = pending.missing.get(client)\n          if (mclock == null || mclock > clock) {\n            pending.missing.set(client, clock)\n          }\n        }\n        pending.update = mergeUpdatesV2([pending.update, restStructs.update])\n      }\n    } else {\n      store.pendingStructs = restStructs\n    }\n    // console.log('time to integrate: ', performance.now() - start) // @todo remove\n    // start = performance.now()\n    const dsRest = readAndApplyDeleteSet(structDecoder, transaction, store)\n    if (store.pendingDs) {\n      // @todo we could make a lower-bound state-vector check as we do above\n      const pendingDSUpdate = new UpdateDecoderV2(decoding.createDecoder(store.pendingDs))\n      decoding.readVarUint(pendingDSUpdate.restDecoder) // read 0 structs, because we only encode deletes in pendingdsupdate\n      const dsRest2 = readAndApplyDeleteSet(pendingDSUpdate, transaction, store)\n      if (dsRest && dsRest2) {\n        // case 1: ds1 != null && ds2 != null\n        store.pendingDs = mergeUpdatesV2([dsRest, dsRest2])\n      } else {\n        // case 2: ds1 != null\n        // case 3: ds2 != null\n        // case 4: ds1 == null && ds2 == null\n        store.pendingDs = dsRest || dsRest2\n      }\n    } else {\n      // Either dsRest == null && pendingDs == null OR dsRest != null\n      store.pendingDs = dsRest\n    }\n    // console.log('time to cleanup: ', performance.now() - start) // @todo remove\n    // start = performance.now()\n\n    // console.log('time to resume delete readers: ', performance.now() - start) // @todo remove\n    // start = performance.now()\n    if (retry) {\n      const update = /** @type {{update: Uint8Array}} */ (store.pendingStructs).update\n      store.pendingStructs = null\n      applyUpdateV2(transaction.doc, update)\n    }\n  }, transactionOrigin, false)\n\n/**\n * Read and apply a document update.\n *\n * This function has the same effect as `applyUpdate` but accepts an decoder.\n *\n * @param {decoding.Decoder} decoder\n * @param {Doc} ydoc\n * @param {any} [transactionOrigin] This will be stored on `transaction.origin` and `.on('update', (update, origin))`\n *\n * @function\n */\nexport const readUpdate = (decoder, ydoc, transactionOrigin) => readUpdateV2(decoder, ydoc, transactionOrigin, new UpdateDecoderV1(decoder))\n\n/**\n * Apply a document update created by, for example, `y.on('update', update => ..)` or `update = encodeStateAsUpdate()`.\n *\n * This function has the same effect as `readUpdate` but accepts an Uint8Array instead of a Decoder.\n *\n * @param {Doc} ydoc\n * @param {Uint8Array} update\n * @param {any} [transactionOrigin] This will be stored on `transaction.origin` and `.on('update', (update, origin))`\n * @param {typeof UpdateDecoderV1 | typeof UpdateDecoderV2} [YDecoder]\n *\n * @function\n */\nexport const applyUpdateV2 = (ydoc, update, transactionOrigin, YDecoder = UpdateDecoderV2) => {\n  const decoder = decoding.createDecoder(update)\n  readUpdateV2(decoder, ydoc, transactionOrigin, new YDecoder(decoder))\n}\n\n/**\n * Apply a document update created by, for example, `y.on('update', update => ..)` or `update = encodeStateAsUpdate()`.\n *\n * This function has the same effect as `readUpdate` but accepts an Uint8Array instead of a Decoder.\n *\n * @param {Doc} ydoc\n * @param {Uint8Array} update\n * @param {any} [transactionOrigin] This will be stored on `transaction.origin` and `.on('update', (update, origin))`\n *\n * @function\n */\nexport const applyUpdate = (ydoc, update, transactionOrigin) => applyUpdateV2(ydoc, update, transactionOrigin, UpdateDecoderV1)\n\n/**\n * Write all the document as a single update message. If you specify the state of the remote client (`targetStateVector`) it will\n * only write the operations that are missing.\n *\n * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n * @param {Doc} doc\n * @param {Map<number,number>} [targetStateVector] The state of the target that receives the update. Leave empty to write all known structs\n *\n * @function\n */\nexport const writeStateAsUpdate = (encoder, doc, targetStateVector = new Map()) => {\n  writeClientsStructs(encoder, doc.store, targetStateVector)\n  writeDeleteSet(encoder, createDeleteSetFromStructStore(doc.store))\n}\n\n/**\n * Write all the document as a single update message that can be applied on the remote document. If you specify the state of the remote client (`targetState`) it will\n * only write the operations that are missing.\n *\n * Use `writeStateAsUpdate` instead if you are working with lib0/encoding.js#Encoder\n *\n * @param {Doc} doc\n * @param {Uint8Array} [encodedTargetStateVector] The state of the target that receives the update. Leave empty to write all known structs\n * @param {UpdateEncoderV1 | UpdateEncoderV2} [encoder]\n * @return {Uint8Array}\n *\n * @function\n */\nexport const encodeStateAsUpdateV2 = (doc, encodedTargetStateVector = new Uint8Array([0]), encoder = new UpdateEncoderV2()) => {\n  const targetStateVector = decodeStateVector(encodedTargetStateVector)\n  writeStateAsUpdate(encoder, doc, targetStateVector)\n  const updates = [encoder.toUint8Array()]\n  // also add the pending updates (if there are any)\n  if (doc.store.pendingDs) {\n    updates.push(doc.store.pendingDs)\n  }\n  if (doc.store.pendingStructs) {\n    updates.push(diffUpdateV2(doc.store.pendingStructs.update, encodedTargetStateVector))\n  }\n  if (updates.length > 1) {\n    if (encoder.constructor === UpdateEncoderV1) {\n      return mergeUpdates(updates.map((update, i) => i === 0 ? update : convertUpdateFormatV2ToV1(update)))\n    } else if (encoder.constructor === UpdateEncoderV2) {\n      return mergeUpdatesV2(updates)\n    }\n  }\n  return updates[0]\n}\n\n/**\n * Write all the document as a single update message that can be applied on the remote document. If you specify the state of the remote client (`targetState`) it will\n * only write the operations that are missing.\n *\n * Use `writeStateAsUpdate` instead if you are working with lib0/encoding.js#Encoder\n *\n * @param {Doc} doc\n * @param {Uint8Array} [encodedTargetStateVector] The state of the target that receives the update. Leave empty to write all known structs\n * @return {Uint8Array}\n *\n * @function\n */\nexport const encodeStateAsUpdate = (doc, encodedTargetStateVector) => encodeStateAsUpdateV2(doc, encodedTargetStateVector, new UpdateEncoderV1())\n\n/**\n * Read state vector from Decoder and return as Map\n *\n * @param {DSDecoderV1 | DSDecoderV2} decoder\n * @return {Map<number,number>} Maps `client` to the number next expected `clock` from that client.\n *\n * @function\n */\nexport const readStateVector = decoder => {\n  const ss = new Map()\n  const ssLength = decoding.readVarUint(decoder.restDecoder)\n  for (let i = 0; i < ssLength; i++) {\n    const client = decoding.readVarUint(decoder.restDecoder)\n    const clock = decoding.readVarUint(decoder.restDecoder)\n    ss.set(client, clock)\n  }\n  return ss\n}\n\n/**\n * Read decodedState and return State as Map.\n *\n * @param {Uint8Array} decodedState\n * @return {Map<number,number>} Maps `client` to the number next expected `clock` from that client.\n *\n * @function\n */\n// export const decodeStateVectorV2 = decodedState => readStateVector(new DSDecoderV2(decoding.createDecoder(decodedState)))\n\n/**\n * Read decodedState and return State as Map.\n *\n * @param {Uint8Array} decodedState\n * @return {Map<number,number>} Maps `client` to the number next expected `clock` from that client.\n *\n * @function\n */\nexport const decodeStateVector = decodedState => readStateVector(new DSDecoderV1(decoding.createDecoder(decodedState)))\n\n/**\n * @param {DSEncoderV1 | DSEncoderV2} encoder\n * @param {Map<number,number>} sv\n * @function\n */\nexport const writeStateVector = (encoder, sv) => {\n  encoding.writeVarUint(encoder.restEncoder, sv.size)\n  array.from(sv.entries()).sort((a, b) => b[0] - a[0]).forEach(([client, clock]) => {\n    encoding.writeVarUint(encoder.restEncoder, client) // @todo use a special client decoder that is based on mapping\n    encoding.writeVarUint(encoder.restEncoder, clock)\n  })\n  return encoder\n}\n\n/**\n * @param {DSEncoderV1 | DSEncoderV2} encoder\n * @param {Doc} doc\n *\n * @function\n */\nexport const writeDocumentStateVector = (encoder, doc) => writeStateVector(encoder, getStateVector(doc.store))\n\n/**\n * Encode State as Uint8Array.\n *\n * @param {Doc|Map<number,number>} doc\n * @param {DSEncoderV1 | DSEncoderV2} [encoder]\n * @return {Uint8Array}\n *\n * @function\n */\nexport const encodeStateVectorV2 = (doc, encoder = new DSEncoderV2()) => {\n  if (doc instanceof Map) {\n    writeStateVector(encoder, doc)\n  } else {\n    writeDocumentStateVector(encoder, doc)\n  }\n  return encoder.toUint8Array()\n}\n\n/**\n * Encode State as Uint8Array.\n *\n * @param {Doc|Map<number,number>} doc\n * @return {Uint8Array}\n *\n * @function\n */\nexport const encodeStateVector = doc => encodeStateVectorV2(doc, new DSEncoderV1())\n","import * as f from 'lib0/function'\n\n/**\n * General event handler implementation.\n *\n * @template ARG0, ARG1\n *\n * @private\n */\nexport class EventHandler {\n  constructor () {\n    /**\n     * @type {Array<function(ARG0, ARG1):void>}\n     */\n    this.l = []\n  }\n}\n\n/**\n * @template ARG0,ARG1\n * @returns {EventHandler<ARG0,ARG1>}\n *\n * @private\n * @function\n */\nexport const createEventHandler = () => new EventHandler()\n\n/**\n * Adds an event listener that is called when\n * {@link EventHandler#callEventListeners} is called.\n *\n * @template ARG0,ARG1\n * @param {EventHandler<ARG0,ARG1>} eventHandler\n * @param {function(ARG0,ARG1):void} f The event handler.\n *\n * @private\n * @function\n */\nexport const addEventHandlerListener = (eventHandler, f) =>\n  eventHandler.l.push(f)\n\n/**\n * Removes an event listener.\n *\n * @template ARG0,ARG1\n * @param {EventHandler<ARG0,ARG1>} eventHandler\n * @param {function(ARG0,ARG1):void} f The event handler that was added with\n *                     {@link EventHandler#addEventListener}\n *\n * @private\n * @function\n */\nexport const removeEventHandlerListener = (eventHandler, f) => {\n  const l = eventHandler.l\n  const len = l.length\n  eventHandler.l = l.filter(g => f !== g)\n  if (len === eventHandler.l.length) {\n    console.error('[yjs] Tried to remove event handler that doesn\\'t exist.')\n  }\n}\n\n/**\n * Removes all event listeners.\n * @template ARG0,ARG1\n * @param {EventHandler<ARG0,ARG1>} eventHandler\n *\n * @private\n * @function\n */\nexport const removeAllEventHandlerListeners = eventHandler => {\n  eventHandler.l.length = 0\n}\n\n/**\n * Call all event listeners that were added via\n * {@link EventHandler#addEventListener}.\n *\n * @template ARG0,ARG1\n * @param {EventHandler<ARG0,ARG1>} eventHandler\n * @param {ARG0} arg0\n * @param {ARG1} arg1\n *\n * @private\n * @function\n */\nexport const callEventHandlerListeners = (eventHandler, arg0, arg1) =>\n  f.callAll(eventHandler.l, [arg0, arg1])\n","\nimport { AbstractType } from '../internals.js' // eslint-disable-line\n\nimport * as decoding from 'lib0/decoding'\nimport * as encoding from 'lib0/encoding'\nimport * as error from 'lib0/error'\n\nexport class ID {\n  /**\n   * @param {number} client client id\n   * @param {number} clock unique per client id, continuous number\n   */\n  constructor (client, clock) {\n    /**\n     * Client id\n     * @type {number}\n     */\n    this.client = client\n    /**\n     * unique per client id, continuous number\n     * @type {number}\n     */\n    this.clock = clock\n  }\n}\n\n/**\n * @param {ID | null} a\n * @param {ID | null} b\n * @return {boolean}\n *\n * @function\n */\nexport const compareIDs = (a, b) => a === b || (a !== null && b !== null && a.client === b.client && a.clock === b.clock)\n\n/**\n * @param {number} client\n * @param {number} clock\n *\n * @private\n * @function\n */\nexport const createID = (client, clock) => new ID(client, clock)\n\n/**\n * @param {encoding.Encoder} encoder\n * @param {ID} id\n *\n * @private\n * @function\n */\nexport const writeID = (encoder, id) => {\n  encoding.writeVarUint(encoder, id.client)\n  encoding.writeVarUint(encoder, id.clock)\n}\n\n/**\n * Read ID.\n * * If first varUint read is 0xFFFFFF a RootID is returned.\n * * Otherwise an ID is returned\n *\n * @param {decoding.Decoder} decoder\n * @return {ID}\n *\n * @private\n * @function\n */\nexport const readID = decoder =>\n  createID(decoding.readVarUint(decoder), decoding.readVarUint(decoder))\n\n/**\n * The top types are mapped from y.share.get(keyname) => type.\n * `type` does not store any information about the `keyname`.\n * This function finds the correct `keyname` for `type` and throws otherwise.\n *\n * @param {AbstractType<any>} type\n * @return {string}\n *\n * @private\n * @function\n */\nexport const findRootTypeKey = type => {\n  // @ts-ignore _y must be defined, otherwise unexpected case\n  for (const [key, value] of type.doc.share.entries()) {\n    if (value === type) {\n      return key\n    }\n  }\n  throw error.unexpectedCase()\n}\n","\nimport { AbstractType, Item } from '../internals.js' // eslint-disable-line\n\n/**\n * Check if `parent` is a parent of `child`.\n *\n * @param {AbstractType<any>} parent\n * @param {Item|null} child\n * @return {Boolean} Whether `parent` is a parent of `child`.\n *\n * @private\n * @function\n */\nexport const isParentOf = (parent, child) => {\n  while (child !== null) {\n    if (child.parent === parent) {\n      return true\n    }\n    child = /** @type {AbstractType<any>} */ (child.parent)._item\n  }\n  return false\n}\n","\nimport {\n  AbstractType // eslint-disable-line\n} from '../internals.js'\n\n/**\n * Convenient helper to log type information.\n *\n * Do not use in productive systems as the output can be immense!\n *\n * @param {AbstractType<any>} type\n */\nexport const logType = type => {\n  const res = []\n  let n = type._start\n  while (n) {\n    res.push(n)\n    n = n.right\n  }\n  console.log('Children: ', res)\n  console.log('Children content: ', res.filter(m => !m.deleted).map(m => m.content))\n}\n","\nimport {\n  YArray,\n  YMap,\n  readDeleteSet,\n  writeDeleteSet,\n  createDeleteSet,\n  DSEncoderV1, DSDecoderV1, ID, DeleteSet, YArrayEvent, Transaction, Doc // eslint-disable-line\n} from '../internals.js'\n\nimport * as decoding from 'lib0/decoding'\n\nimport { mergeDeleteSets, isDeleted } from './DeleteSet.js'\n\nexport class PermanentUserData {\n  /**\n   * @param {Doc} doc\n   * @param {YMap<any>} [storeType]\n   */\n  constructor (doc, storeType = doc.getMap('users')) {\n    /**\n     * @type {Map<string,DeleteSet>}\n     */\n    const dss = new Map()\n    this.yusers = storeType\n    this.doc = doc\n    /**\n     * Maps from clientid to userDescription\n     *\n     * @type {Map<number,string>}\n     */\n    this.clients = new Map()\n    this.dss = dss\n    /**\n     * @param {YMap<any>} user\n     * @param {string} userDescription\n     */\n    const initUser = (user, userDescription) => {\n      /**\n       * @type {YArray<Uint8Array>}\n       */\n      const ds = user.get('ds')\n      const ids = user.get('ids')\n      const addClientId = /** @param {number} clientid */ clientid => this.clients.set(clientid, userDescription)\n      ds.observe(/** @param {YArrayEvent<any>} event */ event => {\n        event.changes.added.forEach(item => {\n          item.content.getContent().forEach(encodedDs => {\n            if (encodedDs instanceof Uint8Array) {\n              this.dss.set(userDescription, mergeDeleteSets([this.dss.get(userDescription) || createDeleteSet(), readDeleteSet(new DSDecoderV1(decoding.createDecoder(encodedDs)))]))\n            }\n          })\n        })\n      })\n      this.dss.set(userDescription, mergeDeleteSets(ds.map(encodedDs => readDeleteSet(new DSDecoderV1(decoding.createDecoder(encodedDs))))))\n      ids.observe(/** @param {YArrayEvent<any>} event */ event =>\n        event.changes.added.forEach(item => item.content.getContent().forEach(addClientId))\n      )\n      ids.forEach(addClientId)\n    }\n    // observe users\n    storeType.observe(event => {\n      event.keysChanged.forEach(userDescription =>\n        initUser(storeType.get(userDescription), userDescription)\n      )\n    })\n    // add intial data\n    storeType.forEach(initUser)\n  }\n\n  /**\n   * @param {Doc} doc\n   * @param {number} clientid\n   * @param {string} userDescription\n   * @param {Object} conf\n   * @param {function(Transaction, DeleteSet):boolean} [conf.filter]\n   */\n  setUserMapping (doc, clientid, userDescription, { filter = () => true } = {}) {\n    const users = this.yusers\n    let user = users.get(userDescription)\n    if (!user) {\n      user = new YMap()\n      user.set('ids', new YArray())\n      user.set('ds', new YArray())\n      users.set(userDescription, user)\n    }\n    user.get('ids').push([clientid])\n    users.observe(_event => {\n      setTimeout(() => {\n        const userOverwrite = users.get(userDescription)\n        if (userOverwrite !== user) {\n          // user was overwritten, port all data over to the next user object\n          // @todo Experiment with Y.Sets here\n          user = userOverwrite\n          // @todo iterate over old type\n          this.clients.forEach((_userDescription, clientid) => {\n            if (userDescription === _userDescription) {\n              user.get('ids').push([clientid])\n            }\n          })\n          const encoder = new DSEncoderV1()\n          const ds = this.dss.get(userDescription)\n          if (ds) {\n            writeDeleteSet(encoder, ds)\n            user.get('ds').push([encoder.toUint8Array()])\n          }\n        }\n      }, 0)\n    })\n    doc.on('afterTransaction', /** @param {Transaction} transaction */ transaction => {\n      setTimeout(() => {\n        const yds = user.get('ds')\n        const ds = transaction.deleteSet\n        if (transaction.local && ds.clients.size > 0 && filter(transaction, ds)) {\n          const encoder = new DSEncoderV1()\n          writeDeleteSet(encoder, ds)\n          yds.push([encoder.toUint8Array()])\n        }\n      })\n    })\n  }\n\n  /**\n   * @param {number} clientid\n   * @return {any}\n   */\n  getUserByClientId (clientid) {\n    return this.clients.get(clientid) || null\n  }\n\n  /**\n   * @param {ID} id\n   * @return {string | null}\n   */\n  getUserByDeletedId (id) {\n    for (const [userDescription, ds] of this.dss.entries()) {\n      if (isDeleted(ds, id)) {\n        return userDescription\n      }\n    }\n    return null\n  }\n}\n","\nimport {\n  writeID,\n  readID,\n  compareIDs,\n  getState,\n  findRootTypeKey,\n  Item,\n  createID,\n  ContentType,\n  followRedone,\n  ID, Doc, AbstractType // eslint-disable-line\n} from '../internals.js'\n\nimport * as encoding from 'lib0/encoding'\nimport * as decoding from 'lib0/decoding'\nimport * as error from 'lib0/error'\n\n/**\n * A relative position is based on the Yjs model and is not affected by document changes.\n * E.g. If you place a relative position before a certain character, it will always point to this character.\n * If you place a relative position at the end of a type, it will always point to the end of the type.\n *\n * A numeric position is often unsuited for user selections, because it does not change when content is inserted\n * before or after.\n *\n * ```Insert(0, 'x')('a|bc') = 'xa|bc'``` Where | is the relative position.\n *\n * One of the properties must be defined.\n *\n * @example\n *   // Current cursor position is at position 10\n *   const relativePosition = createRelativePositionFromIndex(yText, 10)\n *   // modify yText\n *   yText.insert(0, 'abc')\n *   yText.delete(3, 10)\n *   // Compute the cursor position\n *   const absolutePosition = createAbsolutePositionFromRelativePosition(y, relativePosition)\n *   absolutePosition.type === yText // => true\n *   console.log('cursor location is ' + absolutePosition.index) // => cursor location is 3\n *\n */\nexport class RelativePosition {\n  /**\n   * @param {ID|null} type\n   * @param {string|null} tname\n   * @param {ID|null} item\n   * @param {number} assoc\n   */\n  constructor (type, tname, item, assoc = 0) {\n    /**\n     * @type {ID|null}\n     */\n    this.type = type\n    /**\n     * @type {string|null}\n     */\n    this.tname = tname\n    /**\n     * @type {ID | null}\n     */\n    this.item = item\n    /**\n     * A relative position is associated to a specific character. By default\n     * assoc >= 0, the relative position is associated to the character\n     * after the meant position.\n     * I.e. position 1 in 'ab' is associated to character 'b'.\n     *\n     * If assoc < 0, then the relative position is associated to the caharacter\n     * before the meant position.\n     *\n     * @type {number}\n     */\n    this.assoc = assoc\n  }\n}\n\n/**\n * @param {RelativePosition} rpos\n * @return {any}\n */\nexport const relativePositionToJSON = rpos => {\n  const json = {}\n  if (rpos.type) {\n    json.type = rpos.type\n  }\n  if (rpos.tname) {\n    json.tname = rpos.tname\n  }\n  if (rpos.item) {\n    json.item = rpos.item\n  }\n  if (rpos.assoc != null) {\n    json.assoc = rpos.assoc\n  }\n  return json\n}\n\n/**\n * @param {any} json\n * @return {RelativePosition}\n *\n * @function\n */\nexport const createRelativePositionFromJSON = json => new RelativePosition(json.type == null ? null : createID(json.type.client, json.type.clock), json.tname || null, json.item == null ? null : createID(json.item.client, json.item.clock), json.assoc == null ? 0 : json.assoc)\n\nexport class AbsolutePosition {\n  /**\n   * @param {AbstractType<any>} type\n   * @param {number} index\n   * @param {number} [assoc]\n   */\n  constructor (type, index, assoc = 0) {\n    /**\n     * @type {AbstractType<any>}\n     */\n    this.type = type\n    /**\n     * @type {number}\n     */\n    this.index = index\n    this.assoc = assoc\n  }\n}\n\n/**\n * @param {AbstractType<any>} type\n * @param {number} index\n * @param {number} [assoc]\n *\n * @function\n */\nexport const createAbsolutePosition = (type, index, assoc = 0) => new AbsolutePosition(type, index, assoc)\n\n/**\n * @param {AbstractType<any>} type\n * @param {ID|null} item\n * @param {number} [assoc]\n *\n * @function\n */\nexport const createRelativePosition = (type, item, assoc) => {\n  let typeid = null\n  let tname = null\n  if (type._item === null) {\n    tname = findRootTypeKey(type)\n  } else {\n    typeid = createID(type._item.id.client, type._item.id.clock)\n  }\n  return new RelativePosition(typeid, tname, item, assoc)\n}\n\n/**\n * Create a relativePosition based on a absolute position.\n *\n * @param {AbstractType<any>} type The base type (e.g. YText or YArray).\n * @param {number} index The absolute position.\n * @param {number} [assoc]\n * @return {RelativePosition}\n *\n * @function\n */\nexport const createRelativePositionFromTypeIndex = (type, index, assoc = 0) => {\n  let t = type._start\n  if (assoc < 0) {\n    // associated to the left character or the beginning of a type, increment index if possible.\n    if (index === 0) {\n      return createRelativePosition(type, null, assoc)\n    }\n    index--\n  }\n  while (t !== null) {\n    if (!t.deleted && t.countable) {\n      if (t.length > index) {\n        // case 1: found position somewhere in the linked list\n        return createRelativePosition(type, createID(t.id.client, t.id.clock + index), assoc)\n      }\n      index -= t.length\n    }\n    if (t.right === null && assoc < 0) {\n      // left-associated position, return last available id\n      return createRelativePosition(type, t.lastId, assoc)\n    }\n    t = t.right\n  }\n  return createRelativePosition(type, null, assoc)\n}\n\n/**\n * @param {encoding.Encoder} encoder\n * @param {RelativePosition} rpos\n *\n * @function\n */\nexport const writeRelativePosition = (encoder, rpos) => {\n  const { type, tname, item, assoc } = rpos\n  if (item !== null) {\n    encoding.writeVarUint(encoder, 0)\n    writeID(encoder, item)\n  } else if (tname !== null) {\n    // case 2: found position at the end of the list and type is stored in y.share\n    encoding.writeUint8(encoder, 1)\n    encoding.writeVarString(encoder, tname)\n  } else if (type !== null) {\n    // case 3: found position at the end of the list and type is attached to an item\n    encoding.writeUint8(encoder, 2)\n    writeID(encoder, type)\n  } else {\n    throw error.unexpectedCase()\n  }\n  encoding.writeVarInt(encoder, assoc)\n  return encoder\n}\n\n/**\n * @param {RelativePosition} rpos\n * @return {Uint8Array}\n */\nexport const encodeRelativePosition = rpos => {\n  const encoder = encoding.createEncoder()\n  writeRelativePosition(encoder, rpos)\n  return encoding.toUint8Array(encoder)\n}\n\n/**\n * @param {decoding.Decoder} decoder\n * @return {RelativePosition}\n *\n * @function\n */\nexport const readRelativePosition = decoder => {\n  let type = null\n  let tname = null\n  let itemID = null\n  switch (decoding.readVarUint(decoder)) {\n    case 0:\n      // case 1: found position somewhere in the linked list\n      itemID = readID(decoder)\n      break\n    case 1:\n      // case 2: found position at the end of the list and type is stored in y.share\n      tname = decoding.readVarString(decoder)\n      break\n    case 2: {\n      // case 3: found position at the end of the list and type is attached to an item\n      type = readID(decoder)\n    }\n  }\n  const assoc = decoding.hasContent(decoder) ? decoding.readVarInt(decoder) : 0\n  return new RelativePosition(type, tname, itemID, assoc)\n}\n\n/**\n * @param {Uint8Array} uint8Array\n * @return {RelativePosition}\n */\nexport const decodeRelativePosition = uint8Array => readRelativePosition(decoding.createDecoder(uint8Array))\n\n/**\n * @param {RelativePosition} rpos\n * @param {Doc} doc\n * @return {AbsolutePosition|null}\n *\n * @function\n */\nexport const createAbsolutePositionFromRelativePosition = (rpos, doc) => {\n  const store = doc.store\n  const rightID = rpos.item\n  const typeID = rpos.type\n  const tname = rpos.tname\n  const assoc = rpos.assoc\n  let type = null\n  let index = 0\n  if (rightID !== null) {\n    if (getState(store, rightID.client) <= rightID.clock) {\n      return null\n    }\n    const res = followRedone(store, rightID)\n    const right = res.item\n    if (!(right instanceof Item)) {\n      return null\n    }\n    type = /** @type {AbstractType<any>} */ (right.parent)\n    if (type._item === null || !type._item.deleted) {\n      index = (right.deleted || !right.countable) ? 0 : (res.diff + (assoc >= 0 ? 0 : 1)) // adjust position based on left association if necessary\n      let n = right.left\n      while (n !== null) {\n        if (!n.deleted && n.countable) {\n          index += n.length\n        }\n        n = n.left\n      }\n    }\n  } else {\n    if (tname !== null) {\n      type = doc.get(tname)\n    } else if (typeID !== null) {\n      if (getState(store, typeID.client) <= typeID.clock) {\n        // type does not exist yet\n        return null\n      }\n      const { item } = followRedone(store, typeID)\n      if (item instanceof Item && item.content instanceof ContentType) {\n        type = item.content.type\n      } else {\n        // struct is garbage collected\n        return null\n      }\n    } else {\n      throw error.unexpectedCase()\n    }\n    if (assoc >= 0) {\n      index = type._length\n    } else {\n      index = 0\n    }\n  }\n  return createAbsolutePosition(type, index, rpos.assoc)\n}\n\n/**\n * @param {RelativePosition|null} a\n * @param {RelativePosition|null} b\n * @return {boolean}\n *\n * @function\n */\nexport const compareRelativePositions = (a, b) => a === b || (\n  a !== null && b !== null && a.tname === b.tname && compareIDs(a.item, b.item) && compareIDs(a.type, b.type) && a.assoc === b.assoc\n)\n","\nimport {\n  isDeleted,\n  createDeleteSetFromStructStore,\n  getStateVector,\n  getItemCleanStart,\n  iterateDeletedStructs,\n  writeDeleteSet,\n  writeStateVector,\n  readDeleteSet,\n  readStateVector,\n  createDeleteSet,\n  createID,\n  getState,\n  findIndexSS,\n  UpdateEncoderV2,\n  applyUpdateV2,\n  DSEncoderV1, DSEncoderV2, DSDecoderV1, DSDecoderV2, Transaction, Doc, DeleteSet, Item // eslint-disable-line\n} from '../internals.js'\n\nimport * as map from 'lib0/map'\nimport * as set from 'lib0/set'\nimport * as decoding from 'lib0/decoding'\nimport * as encoding from 'lib0/encoding'\n\nexport class Snapshot {\n  /**\n   * @param {DeleteSet} ds\n   * @param {Map<number,number>} sv state map\n   */\n  constructor (ds, sv) {\n    /**\n     * @type {DeleteSet}\n     */\n    this.ds = ds\n    /**\n     * State Map\n     * @type {Map<number,number>}\n     */\n    this.sv = sv\n  }\n}\n\n/**\n * @param {Snapshot} snap1\n * @param {Snapshot} snap2\n * @return {boolean}\n */\nexport const equalSnapshots = (snap1, snap2) => {\n  const ds1 = snap1.ds.clients\n  const ds2 = snap2.ds.clients\n  const sv1 = snap1.sv\n  const sv2 = snap2.sv\n  if (sv1.size !== sv2.size || ds1.size !== ds2.size) {\n    return false\n  }\n  for (const [key, value] of sv1.entries()) {\n    if (sv2.get(key) !== value) {\n      return false\n    }\n  }\n  for (const [client, dsitems1] of ds1.entries()) {\n    const dsitems2 = ds2.get(client) || []\n    if (dsitems1.length !== dsitems2.length) {\n      return false\n    }\n    for (let i = 0; i < dsitems1.length; i++) {\n      const dsitem1 = dsitems1[i]\n      const dsitem2 = dsitems2[i]\n      if (dsitem1.clock !== dsitem2.clock || dsitem1.len !== dsitem2.len) {\n        return false\n      }\n    }\n  }\n  return true\n}\n\n/**\n * @param {Snapshot} snapshot\n * @param {DSEncoderV1 | DSEncoderV2} [encoder]\n * @return {Uint8Array}\n */\nexport const encodeSnapshotV2 = (snapshot, encoder = new DSEncoderV2()) => {\n  writeDeleteSet(encoder, snapshot.ds)\n  writeStateVector(encoder, snapshot.sv)\n  return encoder.toUint8Array()\n}\n\n/**\n * @param {Snapshot} snapshot\n * @return {Uint8Array}\n */\nexport const encodeSnapshot = snapshot => encodeSnapshotV2(snapshot, new DSEncoderV1())\n\n/**\n * @param {Uint8Array} buf\n * @param {DSDecoderV1 | DSDecoderV2} [decoder]\n * @return {Snapshot}\n */\nexport const decodeSnapshotV2 = (buf, decoder = new DSDecoderV2(decoding.createDecoder(buf))) => {\n  return new Snapshot(readDeleteSet(decoder), readStateVector(decoder))\n}\n\n/**\n * @param {Uint8Array} buf\n * @return {Snapshot}\n */\nexport const decodeSnapshot = buf => decodeSnapshotV2(buf, new DSDecoderV1(decoding.createDecoder(buf)))\n\n/**\n * @param {DeleteSet} ds\n * @param {Map<number,number>} sm\n * @return {Snapshot}\n */\nexport const createSnapshot = (ds, sm) => new Snapshot(ds, sm)\n\nexport const emptySnapshot = createSnapshot(createDeleteSet(), new Map())\n\n/**\n * @param {Doc} doc\n * @return {Snapshot}\n */\nexport const snapshot = doc => createSnapshot(createDeleteSetFromStructStore(doc.store), getStateVector(doc.store))\n\n/**\n * @param {Item} item\n * @param {Snapshot|undefined} snapshot\n *\n * @protected\n * @function\n */\nexport const isVisible = (item, snapshot) => snapshot === undefined\n  ? !item.deleted\n  : snapshot.sv.has(item.id.client) && (snapshot.sv.get(item.id.client) || 0) > item.id.clock && !isDeleted(snapshot.ds, item.id)\n\n/**\n * @param {Transaction} transaction\n * @param {Snapshot} snapshot\n */\nexport const splitSnapshotAffectedStructs = (transaction, snapshot) => {\n  const meta = map.setIfUndefined(transaction.meta, splitSnapshotAffectedStructs, set.create)\n  const store = transaction.doc.store\n  // check if we already split for this snapshot\n  if (!meta.has(snapshot)) {\n    snapshot.sv.forEach((clock, client) => {\n      if (clock < getState(store, client)) {\n        getItemCleanStart(transaction, createID(client, clock))\n      }\n    })\n    iterateDeletedStructs(transaction, snapshot.ds, item => {})\n    meta.add(snapshot)\n  }\n}\n\n/**\n * @param {Doc} originDoc\n * @param {Snapshot} snapshot\n * @param {Doc} [newDoc] Optionally, you may define the Yjs document that receives the data from originDoc\n * @return {Doc}\n */\nexport const createDocFromSnapshot = (originDoc, snapshot, newDoc = new Doc()) => {\n  if (originDoc.gc) {\n    // we should not try to restore a GC-ed document, because some of the restored items might have their content deleted\n    throw new Error('originDoc must not be garbage collected')\n  }\n  const { sv, ds } = snapshot\n\n  const encoder = new UpdateEncoderV2()\n  originDoc.transact(transaction => {\n    let size = 0\n    sv.forEach(clock => {\n      if (clock > 0) {\n        size++\n      }\n    })\n    encoding.writeVarUint(encoder.restEncoder, size)\n    // splitting the structs before writing them to the encoder\n    for (const [client, clock] of sv) {\n      if (clock === 0) {\n        continue\n      }\n      if (clock < getState(originDoc.store, client)) {\n        getItemCleanStart(transaction, createID(client, clock))\n      }\n      const structs = originDoc.store.clients.get(client) || []\n      const lastStructIndex = findIndexSS(structs, clock - 1)\n      // write # encoded structs\n      encoding.writeVarUint(encoder.restEncoder, lastStructIndex + 1)\n      encoder.writeClient(client)\n      // first clock written is 0\n      encoding.writeVarUint(encoder.restEncoder, 0)\n      for (let i = 0; i <= lastStructIndex; i++) {\n        structs[i].write(encoder, 0)\n      }\n    }\n    writeDeleteSet(encoder, ds)\n  })\n\n  applyUpdateV2(newDoc, encoder.toUint8Array(), 'snapshot')\n  return newDoc\n}\n","\nimport {\n  GC,\n  splitItem,\n  Transaction, ID, Item, DSDecoderV2 // eslint-disable-line\n} from '../internals.js'\n\nimport * as math from 'lib0/math'\nimport * as error from 'lib0/error'\n\nexport class StructStore {\n  constructor () {\n    /**\n     * @type {Map<number,Array<GC|Item>>}\n     */\n    this.clients = new Map()\n    /**\n     * @type {null | { missing: Map<number, number>, update: Uint8Array }}\n     */\n    this.pendingStructs = null\n    /**\n     * @type {null | Uint8Array}\n     */\n    this.pendingDs = null\n  }\n}\n\n/**\n * Return the states as a Map<client,clock>.\n * Note that clock refers to the next expected clock id.\n *\n * @param {StructStore} store\n * @return {Map<number,number>}\n *\n * @public\n * @function\n */\nexport const getStateVector = store => {\n  const sm = new Map()\n  store.clients.forEach((structs, client) => {\n    const struct = structs[structs.length - 1]\n    sm.set(client, struct.id.clock + struct.length)\n  })\n  return sm\n}\n\n/**\n * @param {StructStore} store\n * @param {number} client\n * @return {number}\n *\n * @public\n * @function\n */\nexport const getState = (store, client) => {\n  const structs = store.clients.get(client)\n  if (structs === undefined) {\n    return 0\n  }\n  const lastStruct = structs[structs.length - 1]\n  return lastStruct.id.clock + lastStruct.length\n}\n\n/**\n * @param {StructStore} store\n *\n * @private\n * @function\n */\nexport const integretyCheck = store => {\n  store.clients.forEach(structs => {\n    for (let i = 1; i < structs.length; i++) {\n      const l = structs[i - 1]\n      const r = structs[i]\n      if (l.id.clock + l.length !== r.id.clock) {\n        throw new Error('StructStore failed integrety check')\n      }\n    }\n  })\n}\n\n/**\n * @param {StructStore} store\n * @param {GC|Item} struct\n *\n * @private\n * @function\n */\nexport const addStruct = (store, struct) => {\n  let structs = store.clients.get(struct.id.client)\n  if (structs === undefined) {\n    structs = []\n    store.clients.set(struct.id.client, structs)\n  } else {\n    const lastStruct = structs[structs.length - 1]\n    if (lastStruct.id.clock + lastStruct.length !== struct.id.clock) {\n      throw error.unexpectedCase()\n    }\n  }\n  structs.push(struct)\n}\n\n/**\n * Perform a binary search on a sorted array\n * @param {Array<Item|GC>} structs\n * @param {number} clock\n * @return {number}\n *\n * @private\n * @function\n */\nexport const findIndexSS = (structs, clock) => {\n  let left = 0\n  let right = structs.length - 1\n  let mid = structs[right]\n  let midclock = mid.id.clock\n  if (midclock === clock) {\n    return right\n  }\n  // @todo does it even make sense to pivot the search?\n  // If a good split misses, it might actually increase the time to find the correct item.\n  // Currently, the only advantage is that search with pivoting might find the item on the first try.\n  let midindex = math.floor((clock / (midclock + mid.length - 1)) * right) // pivoting the search\n  while (left <= right) {\n    mid = structs[midindex]\n    midclock = mid.id.clock\n    if (midclock <= clock) {\n      if (clock < midclock + mid.length) {\n        return midindex\n      }\n      left = midindex + 1\n    } else {\n      right = midindex - 1\n    }\n    midindex = math.floor((left + right) / 2)\n  }\n  // Always check state before looking for a struct in StructStore\n  // Therefore the case of not finding a struct is unexpected\n  throw error.unexpectedCase()\n}\n\n/**\n * Expects that id is actually in store. This function throws or is an infinite loop otherwise.\n *\n * @param {StructStore} store\n * @param {ID} id\n * @return {GC|Item}\n *\n * @private\n * @function\n */\nexport const find = (store, id) => {\n  /**\n   * @type {Array<GC|Item>}\n   */\n  // @ts-ignore\n  const structs = store.clients.get(id.client)\n  return structs[findIndexSS(structs, id.clock)]\n}\n\n/**\n * Expects that id is actually in store. This function throws or is an infinite loop otherwise.\n * @private\n * @function\n */\nexport const getItem = /** @type {function(StructStore,ID):Item} */ (find)\n\n/**\n * @param {Transaction} transaction\n * @param {Array<Item|GC>} structs\n * @param {number} clock\n */\nexport const findIndexCleanStart = (transaction, structs, clock) => {\n  const index = findIndexSS(structs, clock)\n  const struct = structs[index]\n  if (struct.id.clock < clock && struct instanceof Item) {\n    structs.splice(index + 1, 0, splitItem(transaction, struct, clock - struct.id.clock))\n    return index + 1\n  }\n  return index\n}\n\n/**\n * Expects that id is actually in store. This function throws or is an infinite loop otherwise.\n *\n * @param {Transaction} transaction\n * @param {ID} id\n * @return {Item}\n *\n * @private\n * @function\n */\nexport const getItemCleanStart = (transaction, id) => {\n  const structs = /** @type {Array<Item>} */ (transaction.doc.store.clients.get(id.client))\n  return structs[findIndexCleanStart(transaction, structs, id.clock)]\n}\n\n/**\n * Expects that id is actually in store. This function throws or is an infinite loop otherwise.\n *\n * @param {Transaction} transaction\n * @param {StructStore} store\n * @param {ID} id\n * @return {Item}\n *\n * @private\n * @function\n */\nexport const getItemCleanEnd = (transaction, store, id) => {\n  /**\n   * @type {Array<Item>}\n   */\n  // @ts-ignore\n  const structs = store.clients.get(id.client)\n  const index = findIndexSS(structs, id.clock)\n  const struct = structs[index]\n  if (id.clock !== struct.id.clock + struct.length - 1 && struct.constructor !== GC) {\n    structs.splice(index + 1, 0, splitItem(transaction, struct, id.clock - struct.id.clock + 1))\n  }\n  return struct\n}\n\n/**\n * Replace `item` with `newitem` in store\n * @param {StructStore} store\n * @param {GC|Item} struct\n * @param {GC|Item} newStruct\n *\n * @private\n * @function\n */\nexport const replaceStruct = (store, struct, newStruct) => {\n  const structs = /** @type {Array<GC|Item>} */ (store.clients.get(struct.id.client))\n  structs[findIndexSS(structs, struct.id.clock)] = newStruct\n}\n\n/**\n * Iterate over a range of structs\n *\n * @param {Transaction} transaction\n * @param {Array<Item|GC>} structs\n * @param {number} clockStart Inclusive start\n * @param {number} len\n * @param {function(GC|Item):void} f\n *\n * @function\n */\nexport const iterateStructs = (transaction, structs, clockStart, len, f) => {\n  if (len === 0) {\n    return\n  }\n  const clockEnd = clockStart + len\n  let index = findIndexCleanStart(transaction, structs, clockStart)\n  let struct\n  do {\n    struct = structs[index++]\n    if (clockEnd < struct.id.clock + struct.length) {\n      findIndexCleanStart(transaction, structs, clockEnd)\n    }\n    f(struct)\n  } while (index < structs.length && structs[index].id.clock < clockEnd)\n}\n","\nimport {\n  getState,\n  writeStructsFromTransaction,\n  writeDeleteSet,\n  DeleteSet,\n  sortAndMergeDeleteSet,\n  getStateVector,\n  findIndexSS,\n  callEventHandlerListeners,\n  Item,\n  generateNewClientId,\n  createID,\n  UpdateEncoderV1, UpdateEncoderV2, GC, StructStore, AbstractType, AbstractStruct, YEvent, Doc // eslint-disable-line\n} from '../internals.js'\n\nimport * as map from 'lib0/map'\nimport * as math from 'lib0/math'\nimport * as set from 'lib0/set'\nimport * as logging from 'lib0/logging'\nimport { callAll } from 'lib0/function'\n\n/**\n * A transaction is created for every change on the Yjs model. It is possible\n * to bundle changes on the Yjs model in a single transaction to\n * minimize the number on messages sent and the number of observer calls.\n * If possible the user of this library should bundle as many changes as\n * possible. Here is an example to illustrate the advantages of bundling:\n *\n * @example\n * const map = y.define('map', YMap)\n * // Log content when change is triggered\n * map.observe(() => {\n *   console.log('change triggered')\n * })\n * // Each change on the map type triggers a log message:\n * map.set('a', 0) // => \"change triggered\"\n * map.set('b', 0) // => \"change triggered\"\n * // When put in a transaction, it will trigger the log after the transaction:\n * y.transact(() => {\n *   map.set('a', 1)\n *   map.set('b', 1)\n * }) // => \"change triggered\"\n *\n * @public\n */\nexport class Transaction {\n  /**\n   * @param {Doc} doc\n   * @param {any} origin\n   * @param {boolean} local\n   */\n  constructor (doc, origin, local) {\n    /**\n     * The Yjs instance.\n     * @type {Doc}\n     */\n    this.doc = doc\n    /**\n     * Describes the set of deleted items by ids\n     * @type {DeleteSet}\n     */\n    this.deleteSet = new DeleteSet()\n    /**\n     * Holds the state before the transaction started.\n     * @type {Map<Number,Number>}\n     */\n    this.beforeState = getStateVector(doc.store)\n    /**\n     * Holds the state after the transaction.\n     * @type {Map<Number,Number>}\n     */\n    this.afterState = new Map()\n    /**\n     * All types that were directly modified (property added or child\n     * inserted/deleted). New types are not included in this Set.\n     * Maps from type to parentSubs (`item.parentSub = null` for YArray)\n     * @type {Map<AbstractType<YEvent<any>>,Set<String|null>>}\n     */\n    this.changed = new Map()\n    /**\n     * Stores the events for the types that observe also child elements.\n     * It is mainly used by `observeDeep`.\n     * @type {Map<AbstractType<YEvent<any>>,Array<YEvent<any>>>}\n     */\n    this.changedParentTypes = new Map()\n    /**\n     * @type {Array<AbstractStruct>}\n     */\n    this._mergeStructs = []\n    /**\n     * @type {any}\n     */\n    this.origin = origin\n    /**\n     * Stores meta information on the transaction\n     * @type {Map<any,any>}\n     */\n    this.meta = new Map()\n    /**\n     * Whether this change originates from this doc.\n     * @type {boolean}\n     */\n    this.local = local\n    /**\n     * @type {Set<Doc>}\n     */\n    this.subdocsAdded = new Set()\n    /**\n     * @type {Set<Doc>}\n     */\n    this.subdocsRemoved = new Set()\n    /**\n     * @type {Set<Doc>}\n     */\n    this.subdocsLoaded = new Set()\n  }\n}\n\n/**\n * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n * @param {Transaction} transaction\n * @return {boolean} Whether data was written.\n */\nexport const writeUpdateMessageFromTransaction = (encoder, transaction) => {\n  if (transaction.deleteSet.clients.size === 0 && !map.any(transaction.afterState, (clock, client) => transaction.beforeState.get(client) !== clock)) {\n    return false\n  }\n  sortAndMergeDeleteSet(transaction.deleteSet)\n  writeStructsFromTransaction(encoder, transaction)\n  writeDeleteSet(encoder, transaction.deleteSet)\n  return true\n}\n\n/**\n * @param {Transaction} transaction\n *\n * @private\n * @function\n */\nexport const nextID = transaction => {\n  const y = transaction.doc\n  return createID(y.clientID, getState(y.store, y.clientID))\n}\n\n/**\n * If `type.parent` was added in current transaction, `type` technically\n * did not change, it was just added and we should not fire events for `type`.\n *\n * @param {Transaction} transaction\n * @param {AbstractType<YEvent<any>>} type\n * @param {string|null} parentSub\n */\nexport const addChangedTypeToTransaction = (transaction, type, parentSub) => {\n  const item = type._item\n  if (item === null || (item.id.clock < (transaction.beforeState.get(item.id.client) || 0) && !item.deleted)) {\n    map.setIfUndefined(transaction.changed, type, set.create).add(parentSub)\n  }\n}\n\n/**\n * @param {Array<AbstractStruct>} structs\n * @param {number} pos\n */\nconst tryToMergeWithLeft = (structs, pos) => {\n  const left = structs[pos - 1]\n  const right = structs[pos]\n  if (left.deleted === right.deleted && left.constructor === right.constructor) {\n    if (left.mergeWith(right)) {\n      structs.splice(pos, 1)\n      if (right instanceof Item && right.parentSub !== null && /** @type {AbstractType<any>} */ (right.parent)._map.get(right.parentSub) === right) {\n        /** @type {AbstractType<any>} */ (right.parent)._map.set(right.parentSub, /** @type {Item} */ (left))\n      }\n    }\n  }\n}\n\n/**\n * @param {DeleteSet} ds\n * @param {StructStore} store\n * @param {function(Item):boolean} gcFilter\n */\nconst tryGcDeleteSet = (ds, store, gcFilter) => {\n  for (const [client, deleteItems] of ds.clients.entries()) {\n    const structs = /** @type {Array<GC|Item>} */ (store.clients.get(client))\n    for (let di = deleteItems.length - 1; di >= 0; di--) {\n      const deleteItem = deleteItems[di]\n      const endDeleteItemClock = deleteItem.clock + deleteItem.len\n      for (\n        let si = findIndexSS(structs, deleteItem.clock), struct = structs[si];\n        si < structs.length && struct.id.clock < endDeleteItemClock;\n        struct = structs[++si]\n      ) {\n        const struct = structs[si]\n        if (deleteItem.clock + deleteItem.len <= struct.id.clock) {\n          break\n        }\n        if (struct instanceof Item && struct.deleted && !struct.keep && gcFilter(struct)) {\n          struct.gc(store, false)\n        }\n      }\n    }\n  }\n}\n\n/**\n * @param {DeleteSet} ds\n * @param {StructStore} store\n */\nconst tryMergeDeleteSet = (ds, store) => {\n  // try to merge deleted / gc'd items\n  // merge from right to left for better efficiecy and so we don't miss any merge targets\n  ds.clients.forEach((deleteItems, client) => {\n    const structs = /** @type {Array<GC|Item>} */ (store.clients.get(client))\n    for (let di = deleteItems.length - 1; di >= 0; di--) {\n      const deleteItem = deleteItems[di]\n      // start with merging the item next to the last deleted item\n      const mostRightIndexToCheck = math.min(structs.length - 1, 1 + findIndexSS(structs, deleteItem.clock + deleteItem.len - 1))\n      for (\n        let si = mostRightIndexToCheck, struct = structs[si];\n        si > 0 && struct.id.clock >= deleteItem.clock;\n        struct = structs[--si]\n      ) {\n        tryToMergeWithLeft(structs, si)\n      }\n    }\n  })\n}\n\n/**\n * @param {DeleteSet} ds\n * @param {StructStore} store\n * @param {function(Item):boolean} gcFilter\n */\nexport const tryGc = (ds, store, gcFilter) => {\n  tryGcDeleteSet(ds, store, gcFilter)\n  tryMergeDeleteSet(ds, store)\n}\n\n/**\n * @param {Array<Transaction>} transactionCleanups\n * @param {number} i\n */\nconst cleanupTransactions = (transactionCleanups, i) => {\n  if (i < transactionCleanups.length) {\n    const transaction = transactionCleanups[i]\n    const doc = transaction.doc\n    const store = doc.store\n    const ds = transaction.deleteSet\n    const mergeStructs = transaction._mergeStructs\n    try {\n      sortAndMergeDeleteSet(ds)\n      transaction.afterState = getStateVector(transaction.doc.store)\n      doc.emit('beforeObserverCalls', [transaction, doc])\n      /**\n       * An array of event callbacks.\n       *\n       * Each callback is called even if the other ones throw errors.\n       *\n       * @type {Array<function():void>}\n       */\n      const fs = []\n      // observe events on changed types\n      transaction.changed.forEach((subs, itemtype) =>\n        fs.push(() => {\n          if (itemtype._item === null || !itemtype._item.deleted) {\n            itemtype._callObserver(transaction, subs)\n          }\n        })\n      )\n      fs.push(() => {\n        // deep observe events\n        transaction.changedParentTypes.forEach((events, type) =>\n          fs.push(() => {\n            // We need to think about the possibility that the user transforms the\n            // Y.Doc in the event.\n            if (type._item === null || !type._item.deleted) {\n              events = events\n                .filter(event =>\n                  event.target._item === null || !event.target._item.deleted\n                )\n              events\n                .forEach(event => {\n                  event.currentTarget = type\n                })\n              // sort events by path length so that top-level events are fired first.\n              events\n                .sort((event1, event2) => event1.path.length - event2.path.length)\n              // We don't need to check for events.length\n              // because we know it has at least one element\n              callEventHandlerListeners(type._dEH, events, transaction)\n            }\n          })\n        )\n        fs.push(() => doc.emit('afterTransaction', [transaction, doc]))\n      })\n      callAll(fs, [])\n    } finally {\n      // Replace deleted items with ItemDeleted / GC.\n      // This is where content is actually remove from the Yjs Doc.\n      if (doc.gc) {\n        tryGcDeleteSet(ds, store, doc.gcFilter)\n      }\n      tryMergeDeleteSet(ds, store)\n\n      // on all affected store.clients props, try to merge\n      transaction.afterState.forEach((clock, client) => {\n        const beforeClock = transaction.beforeState.get(client) || 0\n        if (beforeClock !== clock) {\n          const structs = /** @type {Array<GC|Item>} */ (store.clients.get(client))\n          // we iterate from right to left so we can safely remove entries\n          const firstChangePos = math.max(findIndexSS(structs, beforeClock), 1)\n          for (let i = structs.length - 1; i >= firstChangePos; i--) {\n            tryToMergeWithLeft(structs, i)\n          }\n        }\n      })\n      // try to merge mergeStructs\n      // @todo: it makes more sense to transform mergeStructs to a DS, sort it, and merge from right to left\n      //        but at the moment DS does not handle duplicates\n      for (let i = 0; i < mergeStructs.length; i++) {\n        const { client, clock } = mergeStructs[i].id\n        const structs = /** @type {Array<GC|Item>} */ (store.clients.get(client))\n        const replacedStructPos = findIndexSS(structs, clock)\n        if (replacedStructPos + 1 < structs.length) {\n          tryToMergeWithLeft(structs, replacedStructPos + 1)\n        }\n        if (replacedStructPos > 0) {\n          tryToMergeWithLeft(structs, replacedStructPos)\n        }\n      }\n      if (!transaction.local && transaction.afterState.get(doc.clientID) !== transaction.beforeState.get(doc.clientID)) {\n        logging.print(logging.ORANGE, logging.BOLD, '[yjs] ', logging.UNBOLD, logging.RED, 'Changed the client-id because another client seems to be using it.')\n        doc.clientID = generateNewClientId()\n      }\n      // @todo Merge all the transactions into one and provide send the data as a single update message\n      doc.emit('afterTransactionCleanup', [transaction, doc])\n      if (doc._observers.has('update')) {\n        const encoder = new UpdateEncoderV1()\n        const hasContent = writeUpdateMessageFromTransaction(encoder, transaction)\n        if (hasContent) {\n          doc.emit('update', [encoder.toUint8Array(), transaction.origin, doc, transaction])\n        }\n      }\n      if (doc._observers.has('updateV2')) {\n        const encoder = new UpdateEncoderV2()\n        const hasContent = writeUpdateMessageFromTransaction(encoder, transaction)\n        if (hasContent) {\n          doc.emit('updateV2', [encoder.toUint8Array(), transaction.origin, doc, transaction])\n        }\n      }\n      const { subdocsAdded, subdocsLoaded, subdocsRemoved } = transaction\n      if (subdocsAdded.size > 0 || subdocsRemoved.size > 0 || subdocsLoaded.size > 0) {\n        subdocsAdded.forEach(subdoc => {\n          subdoc.clientID = doc.clientID\n          if (subdoc.collectionid == null) {\n            subdoc.collectionid = doc.collectionid\n          }\n          doc.subdocs.add(subdoc)\n        })\n        subdocsRemoved.forEach(subdoc => doc.subdocs.delete(subdoc))\n        doc.emit('subdocs', [{ loaded: subdocsLoaded, added: subdocsAdded, removed: subdocsRemoved }, doc, transaction])\n        subdocsRemoved.forEach(subdoc => subdoc.destroy())\n      }\n\n      if (transactionCleanups.length <= i + 1) {\n        doc._transactionCleanups = []\n        doc.emit('afterAllTransactions', [doc, transactionCleanups])\n      } else {\n        cleanupTransactions(transactionCleanups, i + 1)\n      }\n    }\n  }\n}\n\n/**\n * Implements the functionality of `y.transact(()=>{..})`\n *\n * @template T\n * @param {Doc} doc\n * @param {function(Transaction):T} f\n * @param {any} [origin=true]\n * @return {T}\n *\n * @function\n */\nexport const transact = (doc, f, origin = null, local = true) => {\n  const transactionCleanups = doc._transactionCleanups\n  let initialCall = false\n  /**\n   * @type {any}\n   */\n  let result = null\n  if (doc._transaction === null) {\n    initialCall = true\n    doc._transaction = new Transaction(doc, origin, local)\n    transactionCleanups.push(doc._transaction)\n    if (transactionCleanups.length === 1) {\n      doc.emit('beforeAllTransactions', [doc])\n    }\n    doc.emit('beforeTransaction', [doc._transaction, doc])\n  }\n  try {\n    result = f(doc._transaction)\n  } finally {\n    if (initialCall) {\n      const finishCleanup = doc._transaction === transactionCleanups[0]\n      doc._transaction = null\n      if (finishCleanup) {\n        // The first transaction ended, now process observer calls.\n        // Observer call may create new transactions for which we need to call the observers and do cleanup.\n        // We don't want to nest these calls, so we execute these calls one after\n        // another.\n        // Also we need to ensure that all cleanups are called, even if the\n        // observes throw errors.\n        // This file is full of hacky try {} finally {} blocks to ensure that an\n        // event can throw errors and also that the cleanup is called.\n        cleanupTransactions(transactionCleanups, 0)\n      }\n    }\n  }\n  return result\n}\n","import {\n  mergeDeleteSets,\n  iterateDeletedStructs,\n  keepItem,\n  transact,\n  createID,\n  redoItem,\n  isParentOf,\n  followRedone,\n  getItemCleanStart,\n  isDeleted,\n  addToDeleteSet,\n  Transaction, Doc, Item, GC, DeleteSet, AbstractType, YEvent // eslint-disable-line\n} from '../internals.js'\n\nimport * as time from 'lib0/time'\nimport * as array from 'lib0/array'\nimport { Observable } from 'lib0/observable'\n\nclass StackItem {\n  /**\n   * @param {DeleteSet} deletions\n   * @param {DeleteSet} insertions\n   */\n  constructor (deletions, insertions) {\n    this.insertions = insertions\n    this.deletions = deletions\n    /**\n     * Use this to save and restore metadata like selection range\n     */\n    this.meta = new Map()\n  }\n}\n/**\n * @param {Transaction} tr\n * @param {UndoManager} um\n * @param {StackItem} stackItem\n */\nconst clearUndoManagerStackItem = (tr, um, stackItem) => {\n  iterateDeletedStructs(tr, stackItem.deletions, item => {\n    if (item instanceof Item && um.scope.some(type => isParentOf(type, item))) {\n      keepItem(item, false)\n    }\n  })\n}\n\n/**\n * @param {UndoManager} undoManager\n * @param {Array<StackItem>} stack\n * @param {string} eventType\n * @return {StackItem?}\n */\nconst popStackItem = (undoManager, stack, eventType) => {\n  /**\n   * Whether a change happened\n   * @type {StackItem?}\n   */\n  let result = null\n  /**\n   * Keep a reference to the transaction so we can fire the event with the changedParentTypes\n   * @type {any}\n   */\n  let _tr = null\n  const doc = undoManager.doc\n  const scope = undoManager.scope\n  transact(doc, transaction => {\n    while (stack.length > 0 && result === null) {\n      const store = doc.store\n      const stackItem = /** @type {StackItem} */ (stack.pop())\n      /**\n       * @type {Set<Item>}\n       */\n      const itemsToRedo = new Set()\n      /**\n       * @type {Array<Item>}\n       */\n      const itemsToDelete = []\n      let performedChange = false\n      iterateDeletedStructs(transaction, stackItem.insertions, struct => {\n        if (struct instanceof Item) {\n          if (struct.redone !== null) {\n            let { item, diff } = followRedone(store, struct.id)\n            if (diff > 0) {\n              item = getItemCleanStart(transaction, createID(item.id.client, item.id.clock + diff))\n            }\n            struct = item\n          }\n          if (!struct.deleted && scope.some(type => isParentOf(type, /** @type {Item} */ (struct)))) {\n            itemsToDelete.push(struct)\n          }\n        }\n      })\n      iterateDeletedStructs(transaction, stackItem.deletions, struct => {\n        if (\n          struct instanceof Item &&\n          scope.some(type => isParentOf(type, struct)) &&\n          // Never redo structs in stackItem.insertions because they were created and deleted in the same capture interval.\n          !isDeleted(stackItem.insertions, struct.id)\n        ) {\n          itemsToRedo.add(struct)\n        }\n      })\n      itemsToRedo.forEach(struct => {\n        performedChange = redoItem(transaction, struct, itemsToRedo, stackItem.insertions, undoManager.ignoreRemoteMapChanges) !== null || performedChange\n      })\n      // We want to delete in reverse order so that children are deleted before\n      // parents, so we have more information available when items are filtered.\n      for (let i = itemsToDelete.length - 1; i >= 0; i--) {\n        const item = itemsToDelete[i]\n        if (undoManager.deleteFilter(item)) {\n          item.delete(transaction)\n          performedChange = true\n        }\n      }\n      result = performedChange ? stackItem : null\n    }\n    transaction.changed.forEach((subProps, type) => {\n      // destroy search marker if necessary\n      if (subProps.has(null) && type._searchMarker) {\n        type._searchMarker.length = 0\n      }\n    })\n    _tr = transaction\n  }, undoManager)\n  if (result != null) {\n    const changedParentTypes = _tr.changedParentTypes\n    undoManager.emit('stack-item-popped', [{ stackItem: result, type: eventType, changedParentTypes }, undoManager])\n  }\n  return result\n}\n\n/**\n * @typedef {Object} UndoManagerOptions\n * @property {number} [UndoManagerOptions.captureTimeout=500]\n * @property {function(Transaction):boolean} [UndoManagerOptions.captureTransaction] Do not capture changes of a Transaction if result false.\n * @property {function(Item):boolean} [UndoManagerOptions.deleteFilter=()=>true] Sometimes\n * it is necessary to filter what an Undo/Redo operation can delete. If this\n * filter returns false, the type/item won't be deleted even it is in the\n * undo/redo scope.\n * @property {Set<any>} [UndoManagerOptions.trackedOrigins=new Set([null])]\n * @property {boolean} [ignoreRemoteMapChanges] Experimental. By default, the UndoManager will never overwrite remote changes. Enable this property to enable overwriting remote changes on key-value changes (Y.Map, properties on Y.Xml, etc..).\n * @property {Doc} [doc] The document that this UndoManager operates on. Only needed if typeScope is empty.\n */\n\n/**\n * Fires 'stack-item-added' event when a stack item was added to either the undo- or\n * the redo-stack. You may store additional stack information via the\n * metadata property on `event.stackItem.meta` (it is a `Map` of metadata properties).\n * Fires 'stack-item-popped' event when a stack item was popped from either the\n * undo- or the redo-stack. You may restore the saved stack information from `event.stackItem.meta`.\n *\n * @extends {Observable<'stack-item-added'|'stack-item-popped'|'stack-cleared'|'stack-item-updated'>}\n */\nexport class UndoManager extends Observable {\n  /**\n   * @param {AbstractType<any>|Array<AbstractType<any>>} typeScope Accepts either a single type, or an array of types\n   * @param {UndoManagerOptions} options\n   */\n  constructor (typeScope, {\n    captureTimeout = 500,\n    captureTransaction = tr => true,\n    deleteFilter = () => true,\n    trackedOrigins = new Set([null]),\n    ignoreRemoteMapChanges = false,\n    doc = /** @type {Doc} */ (array.isArray(typeScope) ? typeScope[0].doc : typeScope.doc)\n  } = {}) {\n    super()\n    /**\n     * @type {Array<AbstractType<any>>}\n     */\n    this.scope = []\n    this.addToScope(typeScope)\n    this.deleteFilter = deleteFilter\n    trackedOrigins.add(this)\n    this.trackedOrigins = trackedOrigins\n    this.captureTransaction = captureTransaction\n    /**\n     * @type {Array<StackItem>}\n     */\n    this.undoStack = []\n    /**\n     * @type {Array<StackItem>}\n     */\n    this.redoStack = []\n    /**\n     * Whether the client is currently undoing (calling UndoManager.undo)\n     *\n     * @type {boolean}\n     */\n    this.undoing = false\n    this.redoing = false\n    this.doc = doc\n    this.lastChange = 0\n    this.ignoreRemoteMapChanges = ignoreRemoteMapChanges\n    this.captureTimeout = captureTimeout\n    /**\n     * @param {Transaction} transaction\n     */\n    this.afterTransactionHandler = transaction => {\n      // Only track certain transactions\n      if (\n        !this.captureTransaction(transaction) ||\n        !this.scope.some(type => transaction.changedParentTypes.has(type)) ||\n        (!this.trackedOrigins.has(transaction.origin) && (!transaction.origin || !this.trackedOrigins.has(transaction.origin.constructor)))\n      ) {\n        return\n      }\n      const undoing = this.undoing\n      const redoing = this.redoing\n      const stack = undoing ? this.redoStack : this.undoStack\n      if (undoing) {\n        this.stopCapturing() // next undo should not be appended to last stack item\n      } else if (!redoing) {\n        // neither undoing nor redoing: delete redoStack\n        this.clear(false, true)\n      }\n      const insertions = new DeleteSet()\n      transaction.afterState.forEach((endClock, client) => {\n        const startClock = transaction.beforeState.get(client) || 0\n        const len = endClock - startClock\n        if (len > 0) {\n          addToDeleteSet(insertions, client, startClock, len)\n        }\n      })\n      const now = time.getUnixTime()\n      let didAdd = false\n      if (this.lastChange > 0 && now - this.lastChange < this.captureTimeout && stack.length > 0 && !undoing && !redoing) {\n        // append change to last stack op\n        const lastOp = stack[stack.length - 1]\n        lastOp.deletions = mergeDeleteSets([lastOp.deletions, transaction.deleteSet])\n        lastOp.insertions = mergeDeleteSets([lastOp.insertions, insertions])\n      } else {\n        // create a new stack op\n        stack.push(new StackItem(transaction.deleteSet, insertions))\n        didAdd = true\n      }\n      if (!undoing && !redoing) {\n        this.lastChange = now\n      }\n      // make sure that deleted structs are not gc'd\n      iterateDeletedStructs(transaction, transaction.deleteSet, /** @param {Item|GC} item */ item => {\n        if (item instanceof Item && this.scope.some(type => isParentOf(type, item))) {\n          keepItem(item, true)\n        }\n      })\n      const changeEvent = [{ stackItem: stack[stack.length - 1], origin: transaction.origin, type: undoing ? 'redo' : 'undo', changedParentTypes: transaction.changedParentTypes }, this]\n      if (didAdd) {\n        this.emit('stack-item-added', changeEvent)\n      } else {\n        this.emit('stack-item-updated', changeEvent)\n      }\n    }\n    this.doc.on('afterTransaction', this.afterTransactionHandler)\n    this.doc.on('destroy', () => {\n      this.destroy()\n    })\n  }\n\n  /**\n   * @param {Array<AbstractType<any>> | AbstractType<any>} ytypes\n   */\n  addToScope (ytypes) {\n    ytypes = array.isArray(ytypes) ? ytypes : [ytypes]\n    ytypes.forEach(ytype => {\n      if (this.scope.every(yt => yt !== ytype)) {\n        this.scope.push(ytype)\n      }\n    })\n  }\n\n  /**\n   * @param {any} origin\n   */\n  addTrackedOrigin (origin) {\n    this.trackedOrigins.add(origin)\n  }\n\n  /**\n   * @param {any} origin\n   */\n  removeTrackedOrigin (origin) {\n    this.trackedOrigins.delete(origin)\n  }\n\n  clear (clearUndoStack = true, clearRedoStack = true) {\n    if ((clearUndoStack && this.canUndo()) || (clearRedoStack && this.canRedo())) {\n      this.doc.transact(tr => {\n        if (clearUndoStack) {\n          this.undoStack.forEach(item => clearUndoManagerStackItem(tr, this, item))\n          this.undoStack = []\n        }\n        if (clearRedoStack) {\n          this.redoStack.forEach(item => clearUndoManagerStackItem(tr, this, item))\n          this.redoStack = []\n        }\n        this.emit('stack-cleared', [{ undoStackCleared: clearUndoStack, redoStackCleared: clearRedoStack }])\n      })\n    }\n  }\n\n  /**\n   * UndoManager merges Undo-StackItem if they are created within time-gap\n   * smaller than `options.captureTimeout`. Call `um.stopCapturing()` so that the next\n   * StackItem won't be merged.\n   *\n   *\n   * @example\n   *     // without stopCapturing\n   *     ytext.insert(0, 'a')\n   *     ytext.insert(1, 'b')\n   *     um.undo()\n   *     ytext.toString() // => '' (note that 'ab' was removed)\n   *     // with stopCapturing\n   *     ytext.insert(0, 'a')\n   *     um.stopCapturing()\n   *     ytext.insert(0, 'b')\n   *     um.undo()\n   *     ytext.toString() // => 'a' (note that only 'b' was removed)\n   *\n   */\n  stopCapturing () {\n    this.lastChange = 0\n  }\n\n  /**\n   * Undo last changes on type.\n   *\n   * @return {StackItem?} Returns StackItem if a change was applied\n   */\n  undo () {\n    this.undoing = true\n    let res\n    try {\n      res = popStackItem(this, this.undoStack, 'undo')\n    } finally {\n      this.undoing = false\n    }\n    return res\n  }\n\n  /**\n   * Redo last undo operation.\n   *\n   * @return {StackItem?} Returns StackItem if a change was applied\n   */\n  redo () {\n    this.redoing = true\n    let res\n    try {\n      res = popStackItem(this, this.redoStack, 'redo')\n    } finally {\n      this.redoing = false\n    }\n    return res\n  }\n\n  /**\n   * Are undo steps available?\n   *\n   * @return {boolean} `true` if undo is possible\n   */\n  canUndo () {\n    return this.undoStack.length > 0\n  }\n\n  /**\n   * Are redo steps available?\n   *\n   * @return {boolean} `true` if redo is possible\n   */\n  canRedo () {\n    return this.redoStack.length > 0\n  }\n\n  destroy () {\n    this.trackedOrigins.delete(this)\n    this.doc.off('afterTransaction', this.afterTransactionHandler)\n    super.destroy()\n  }\n}\n","\nimport * as binary from 'lib0/binary'\nimport * as decoding from 'lib0/decoding'\nimport * as encoding from 'lib0/encoding'\nimport * as logging from 'lib0/logging'\nimport * as math from 'lib0/math'\nimport {\n  createID,\n  readItemContent,\n  readDeleteSet,\n  writeDeleteSet,\n  Skip,\n  mergeDeleteSets,\n  DSEncoderV1,\n  DSEncoderV2,\n  decodeStateVector,\n  Item, GC, UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2 // eslint-disable-line\n} from '../internals.js'\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n */\nfunction * lazyStructReaderGenerator (decoder) {\n  const numOfStateUpdates = decoding.readVarUint(decoder.restDecoder)\n  for (let i = 0; i < numOfStateUpdates; i++) {\n    const numberOfStructs = decoding.readVarUint(decoder.restDecoder)\n    const client = decoder.readClient()\n    let clock = decoding.readVarUint(decoder.restDecoder)\n    for (let i = 0; i < numberOfStructs; i++) {\n      const info = decoder.readInfo()\n      // @todo use switch instead of ifs\n      if (info === 10) {\n        const len = decoding.readVarUint(decoder.restDecoder)\n        yield new Skip(createID(client, clock), len)\n        clock += len\n      } else if ((binary.BITS5 & info) !== 0) {\n        const cantCopyParentInfo = (info & (binary.BIT7 | binary.BIT8)) === 0\n        // If parent = null and neither left nor right are defined, then we know that `parent` is child of `y`\n        // and we read the next string as parentYKey.\n        // It indicates how we store/retrieve parent from `y.share`\n        // @type {string|null}\n        const struct = new Item(\n          createID(client, clock),\n          null, // left\n          (info & binary.BIT8) === binary.BIT8 ? decoder.readLeftID() : null, // origin\n          null, // right\n          (info & binary.BIT7) === binary.BIT7 ? decoder.readRightID() : null, // right origin\n          // @ts-ignore Force writing a string here.\n          cantCopyParentInfo ? (decoder.readParentInfo() ? decoder.readString() : decoder.readLeftID()) : null, // parent\n          cantCopyParentInfo && (info & binary.BIT6) === binary.BIT6 ? decoder.readString() : null, // parentSub\n          readItemContent(decoder, info) // item content\n        )\n        yield struct\n        clock += struct.length\n      } else {\n        const len = decoder.readLen()\n        yield new GC(createID(client, clock), len)\n        clock += len\n      }\n    }\n  }\n}\n\nexport class LazyStructReader {\n  /**\n   * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n   * @param {boolean} filterSkips\n   */\n  constructor (decoder, filterSkips) {\n    this.gen = lazyStructReaderGenerator(decoder)\n    /**\n     * @type {null | Item | Skip | GC}\n     */\n    this.curr = null\n    this.done = false\n    this.filterSkips = filterSkips\n    this.next()\n  }\n\n  /**\n   * @return {Item | GC | Skip |null}\n   */\n  next () {\n    // ignore \"Skip\" structs\n    do {\n      this.curr = this.gen.next().value || null\n    } while (this.filterSkips && this.curr !== null && this.curr.constructor === Skip)\n    return this.curr\n  }\n}\n\n/**\n * @param {Uint8Array} update\n *\n */\nexport const logUpdate = update => logUpdateV2(update, UpdateDecoderV1)\n\n/**\n * @param {Uint8Array} update\n * @param {typeof UpdateDecoderV2 | typeof UpdateDecoderV1} [YDecoder]\n *\n */\nexport const logUpdateV2 = (update, YDecoder = UpdateDecoderV2) => {\n  const structs = []\n  const updateDecoder = new YDecoder(decoding.createDecoder(update))\n  const lazyDecoder = new LazyStructReader(updateDecoder, false)\n  for (let curr = lazyDecoder.curr; curr !== null; curr = lazyDecoder.next()) {\n    structs.push(curr)\n  }\n  logging.print('Structs: ', structs)\n  const ds = readDeleteSet(updateDecoder)\n  logging.print('DeleteSet: ', ds)\n}\n\n/**\n * @param {Uint8Array} update\n *\n */\nexport const decodeUpdate = (update) => decodeUpdateV2(update, UpdateDecoderV1)\n\n/**\n * @param {Uint8Array} update\n * @param {typeof UpdateDecoderV2 | typeof UpdateDecoderV1} [YDecoder]\n *\n */\nexport const decodeUpdateV2 = (update, YDecoder = UpdateDecoderV2) => {\n  const structs = []\n  const updateDecoder = new YDecoder(decoding.createDecoder(update))\n  const lazyDecoder = new LazyStructReader(updateDecoder, false)\n  for (let curr = lazyDecoder.curr; curr !== null; curr = lazyDecoder.next()) {\n    structs.push(curr)\n  }\n  return {\n    structs,\n    ds: readDeleteSet(updateDecoder)\n  }\n}\n\nexport class LazyStructWriter {\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   */\n  constructor (encoder) {\n    this.currClient = 0\n    this.startClock = 0\n    this.written = 0\n    this.encoder = encoder\n    /**\n     * We want to write operations lazily, but also we need to know beforehand how many operations we want to write for each client.\n     *\n     * This kind of meta-information (#clients, #structs-per-client-written) is written to the restEncoder.\n     *\n     * We fragment the restEncoder and store a slice of it per-client until we know how many clients there are.\n     * When we flush (toUint8Array) we write the restEncoder using the fragments and the meta-information.\n     *\n     * @type {Array<{ written: number, restEncoder: Uint8Array }>}\n     */\n    this.clientStructs = []\n  }\n}\n\n/**\n * @param {Array<Uint8Array>} updates\n * @return {Uint8Array}\n */\nexport const mergeUpdates = updates => mergeUpdatesV2(updates, UpdateDecoderV1, UpdateEncoderV1)\n\n/**\n * @param {Uint8Array} update\n * @param {typeof DSEncoderV1 | typeof DSEncoderV2} YEncoder\n * @param {typeof UpdateDecoderV1 | typeof UpdateDecoderV2} YDecoder\n * @return {Uint8Array}\n */\nexport const encodeStateVectorFromUpdateV2 = (update, YEncoder = DSEncoderV2, YDecoder = UpdateDecoderV2) => {\n  const encoder = new YEncoder()\n  const updateDecoder = new LazyStructReader(new YDecoder(decoding.createDecoder(update)), false)\n  let curr = updateDecoder.curr\n  if (curr !== null) {\n    let size = 0\n    let currClient = curr.id.client\n    let stopCounting = curr.id.clock !== 0 // must start at 0\n    let currClock = stopCounting ? 0 : curr.id.clock + curr.length\n    for (; curr !== null; curr = updateDecoder.next()) {\n      if (currClient !== curr.id.client) {\n        if (currClock !== 0) {\n          size++\n          // We found a new client\n          // write what we have to the encoder\n          encoding.writeVarUint(encoder.restEncoder, currClient)\n          encoding.writeVarUint(encoder.restEncoder, currClock)\n        }\n        currClient = curr.id.client\n        currClock = 0\n        stopCounting = curr.id.clock !== 0\n      }\n      // we ignore skips\n      if (curr.constructor === Skip) {\n        stopCounting = true\n      }\n      if (!stopCounting) {\n        currClock = curr.id.clock + curr.length\n      }\n    }\n    // write what we have\n    if (currClock !== 0) {\n      size++\n      encoding.writeVarUint(encoder.restEncoder, currClient)\n      encoding.writeVarUint(encoder.restEncoder, currClock)\n    }\n    // prepend the size of the state vector\n    const enc = encoding.createEncoder()\n    encoding.writeVarUint(enc, size)\n    encoding.writeBinaryEncoder(enc, encoder.restEncoder)\n    encoder.restEncoder = enc\n    return encoder.toUint8Array()\n  } else {\n    encoding.writeVarUint(encoder.restEncoder, 0)\n    return encoder.toUint8Array()\n  }\n}\n\n/**\n * @param {Uint8Array} update\n * @return {Uint8Array}\n */\nexport const encodeStateVectorFromUpdate = update => encodeStateVectorFromUpdateV2(update, DSEncoderV1, UpdateDecoderV1)\n\n/**\n * @param {Uint8Array} update\n * @param {typeof UpdateDecoderV1 | typeof UpdateDecoderV2} YDecoder\n * @return {{ from: Map<number,number>, to: Map<number,number> }}\n */\nexport const parseUpdateMetaV2 = (update, YDecoder = UpdateDecoderV2) => {\n  /**\n   * @type {Map<number, number>}\n   */\n  const from = new Map()\n  /**\n   * @type {Map<number, number>}\n   */\n  const to = new Map()\n  const updateDecoder = new LazyStructReader(new YDecoder(decoding.createDecoder(update)), false)\n  let curr = updateDecoder.curr\n  if (curr !== null) {\n    let currClient = curr.id.client\n    let currClock = curr.id.clock\n    // write the beginning to `from`\n    from.set(currClient, currClock)\n    for (; curr !== null; curr = updateDecoder.next()) {\n      if (currClient !== curr.id.client) {\n        // We found a new client\n        // write the end to `to`\n        to.set(currClient, currClock)\n        // write the beginning to `from`\n        from.set(curr.id.client, curr.id.clock)\n        // update currClient\n        currClient = curr.id.client\n      }\n      currClock = curr.id.clock + curr.length\n    }\n    // write the end to `to`\n    to.set(currClient, currClock)\n  }\n  return { from, to }\n}\n\n/**\n * @param {Uint8Array} update\n * @return {{ from: Map<number,number>, to: Map<number,number> }}\n */\nexport const parseUpdateMeta = update => parseUpdateMetaV2(update, UpdateDecoderV1)\n\n/**\n * This method is intended to slice any kind of struct and retrieve the right part.\n * It does not handle side-effects, so it should only be used by the lazy-encoder.\n *\n * @param {Item | GC | Skip} left\n * @param {number} diff\n * @return {Item | GC}\n */\nconst sliceStruct = (left, diff) => {\n  if (left.constructor === GC) {\n    const { client, clock } = left.id\n    return new GC(createID(client, clock + diff), left.length - diff)\n  } else if (left.constructor === Skip) {\n    const { client, clock } = left.id\n    return new Skip(createID(client, clock + diff), left.length - diff)\n  } else {\n    const leftItem = /** @type {Item} */ (left)\n    const { client, clock } = leftItem.id\n    return new Item(\n      createID(client, clock + diff),\n      null,\n      createID(client, clock + diff - 1),\n      null,\n      leftItem.rightOrigin,\n      leftItem.parent,\n      leftItem.parentSub,\n      leftItem.content.splice(diff)\n    )\n  }\n}\n\n/**\n *\n * This function works similarly to `readUpdateV2`.\n *\n * @param {Array<Uint8Array>} updates\n * @param {typeof UpdateDecoderV1 | typeof UpdateDecoderV2} [YDecoder]\n * @param {typeof UpdateEncoderV1 | typeof UpdateEncoderV2} [YEncoder]\n * @return {Uint8Array}\n */\nexport const mergeUpdatesV2 = (updates, YDecoder = UpdateDecoderV2, YEncoder = UpdateEncoderV2) => {\n  if (updates.length === 1) {\n    return updates[0]\n  }\n  const updateDecoders = updates.map(update => new YDecoder(decoding.createDecoder(update)))\n  let lazyStructDecoders = updateDecoders.map(decoder => new LazyStructReader(decoder, true))\n\n  /**\n   * @todo we don't need offset because we always slice before\n   * @type {null | { struct: Item | GC | Skip, offset: number }}\n   */\n  let currWrite = null\n\n  const updateEncoder = new YEncoder()\n  // write structs lazily\n  const lazyStructEncoder = new LazyStructWriter(updateEncoder)\n\n  // Note: We need to ensure that all lazyStructDecoders are fully consumed\n  // Note: Should merge document updates whenever possible - even from different updates\n  // Note: Should handle that some operations cannot be applied yet ()\n\n  while (true) {\n    // Write higher clients first ⇒ sort by clientID & clock and remove decoders without content\n    lazyStructDecoders = lazyStructDecoders.filter(dec => dec.curr !== null)\n    lazyStructDecoders.sort(\n      /** @type {function(any,any):number} */ (dec1, dec2) => {\n        if (dec1.curr.id.client === dec2.curr.id.client) {\n          const clockDiff = dec1.curr.id.clock - dec2.curr.id.clock\n          if (clockDiff === 0) {\n            // @todo remove references to skip since the structDecoders must filter Skips.\n            return dec1.curr.constructor === dec2.curr.constructor\n              ? 0\n              : dec1.curr.constructor === Skip ? 1 : -1 // we are filtering skips anyway.\n          } else {\n            return clockDiff\n          }\n        } else {\n          return dec2.curr.id.client - dec1.curr.id.client\n        }\n      }\n    )\n    if (lazyStructDecoders.length === 0) {\n      break\n    }\n    const currDecoder = lazyStructDecoders[0]\n    // write from currDecoder until the next operation is from another client or if filler-struct\n    // then we need to reorder the decoders and find the next operation to write\n    const firstClient = /** @type {Item | GC} */ (currDecoder.curr).id.client\n\n    if (currWrite !== null) {\n      let curr = /** @type {Item | GC | null} */ (currDecoder.curr)\n      let iterated = false\n\n      // iterate until we find something that we haven't written already\n      // remember: first the high client-ids are written\n      while (curr !== null && curr.id.clock + curr.length <= currWrite.struct.id.clock + currWrite.struct.length && curr.id.client >= currWrite.struct.id.client) {\n        curr = currDecoder.next()\n        iterated = true\n      }\n      if (\n        curr === null || // current decoder is empty\n        curr.id.client !== firstClient || // check whether there is another decoder that has has updates from `firstClient`\n        (iterated && curr.id.clock > currWrite.struct.id.clock + currWrite.struct.length) // the above while loop was used and we are potentially missing updates\n      ) {\n        continue\n      }\n\n      if (firstClient !== currWrite.struct.id.client) {\n        writeStructToLazyStructWriter(lazyStructEncoder, currWrite.struct, currWrite.offset)\n        currWrite = { struct: curr, offset: 0 }\n        currDecoder.next()\n      } else {\n        if (currWrite.struct.id.clock + currWrite.struct.length < curr.id.clock) {\n          // @todo write currStruct & set currStruct = Skip(clock = currStruct.id.clock + currStruct.length, length = curr.id.clock - self.clock)\n          if (currWrite.struct.constructor === Skip) {\n            // extend existing skip\n            currWrite.struct.length = curr.id.clock + curr.length - currWrite.struct.id.clock\n          } else {\n            writeStructToLazyStructWriter(lazyStructEncoder, currWrite.struct, currWrite.offset)\n            const diff = curr.id.clock - currWrite.struct.id.clock - currWrite.struct.length\n            /**\n             * @type {Skip}\n             */\n            const struct = new Skip(createID(firstClient, currWrite.struct.id.clock + currWrite.struct.length), diff)\n            currWrite = { struct, offset: 0 }\n          }\n        } else { // if (currWrite.struct.id.clock + currWrite.struct.length >= curr.id.clock) {\n          const diff = currWrite.struct.id.clock + currWrite.struct.length - curr.id.clock\n          if (diff > 0) {\n            if (currWrite.struct.constructor === Skip) {\n              // prefer to slice Skip because the other struct might contain more information\n              currWrite.struct.length -= diff\n            } else {\n              curr = sliceStruct(curr, diff)\n            }\n          }\n          if (!currWrite.struct.mergeWith(/** @type {any} */ (curr))) {\n            writeStructToLazyStructWriter(lazyStructEncoder, currWrite.struct, currWrite.offset)\n            currWrite = { struct: curr, offset: 0 }\n            currDecoder.next()\n          }\n        }\n      }\n    } else {\n      currWrite = { struct: /** @type {Item | GC} */ (currDecoder.curr), offset: 0 }\n      currDecoder.next()\n    }\n    for (\n      let next = currDecoder.curr;\n      next !== null && next.id.client === firstClient && next.id.clock === currWrite.struct.id.clock + currWrite.struct.length && next.constructor !== Skip;\n      next = currDecoder.next()\n    ) {\n      writeStructToLazyStructWriter(lazyStructEncoder, currWrite.struct, currWrite.offset)\n      currWrite = { struct: next, offset: 0 }\n    }\n  }\n  if (currWrite !== null) {\n    writeStructToLazyStructWriter(lazyStructEncoder, currWrite.struct, currWrite.offset)\n    currWrite = null\n  }\n  finishLazyStructWriting(lazyStructEncoder)\n\n  const dss = updateDecoders.map(decoder => readDeleteSet(decoder))\n  const ds = mergeDeleteSets(dss)\n  writeDeleteSet(updateEncoder, ds)\n  return updateEncoder.toUint8Array()\n}\n\n/**\n * @param {Uint8Array} update\n * @param {Uint8Array} sv\n * @param {typeof UpdateDecoderV1 | typeof UpdateDecoderV2} [YDecoder]\n * @param {typeof UpdateEncoderV1 | typeof UpdateEncoderV2} [YEncoder]\n */\nexport const diffUpdateV2 = (update, sv, YDecoder = UpdateDecoderV2, YEncoder = UpdateEncoderV2) => {\n  const state = decodeStateVector(sv)\n  const encoder = new YEncoder()\n  const lazyStructWriter = new LazyStructWriter(encoder)\n  const decoder = new YDecoder(decoding.createDecoder(update))\n  const reader = new LazyStructReader(decoder, false)\n  while (reader.curr) {\n    const curr = reader.curr\n    const currClient = curr.id.client\n    const svClock = state.get(currClient) || 0\n    if (reader.curr.constructor === Skip) {\n      // the first written struct shouldn't be a skip\n      reader.next()\n      continue\n    }\n    if (curr.id.clock + curr.length > svClock) {\n      writeStructToLazyStructWriter(lazyStructWriter, curr, math.max(svClock - curr.id.clock, 0))\n      reader.next()\n      while (reader.curr && reader.curr.id.client === currClient) {\n        writeStructToLazyStructWriter(lazyStructWriter, reader.curr, 0)\n        reader.next()\n      }\n    } else {\n      // read until something new comes up\n      while (reader.curr && reader.curr.id.client === currClient && reader.curr.id.clock + reader.curr.length <= svClock) {\n        reader.next()\n      }\n    }\n  }\n  finishLazyStructWriting(lazyStructWriter)\n  // write ds\n  const ds = readDeleteSet(decoder)\n  writeDeleteSet(encoder, ds)\n  return encoder.toUint8Array()\n}\n\n/**\n * @param {Uint8Array} update\n * @param {Uint8Array} sv\n */\nexport const diffUpdate = (update, sv) => diffUpdateV2(update, sv, UpdateDecoderV1, UpdateEncoderV1)\n\n/**\n * @param {LazyStructWriter} lazyWriter\n */\nconst flushLazyStructWriter = lazyWriter => {\n  if (lazyWriter.written > 0) {\n    lazyWriter.clientStructs.push({ written: lazyWriter.written, restEncoder: encoding.toUint8Array(lazyWriter.encoder.restEncoder) })\n    lazyWriter.encoder.restEncoder = encoding.createEncoder()\n    lazyWriter.written = 0\n  }\n}\n\n/**\n * @param {LazyStructWriter} lazyWriter\n * @param {Item | GC} struct\n * @param {number} offset\n */\nconst writeStructToLazyStructWriter = (lazyWriter, struct, offset) => {\n  // flush curr if we start another client\n  if (lazyWriter.written > 0 && lazyWriter.currClient !== struct.id.client) {\n    flushLazyStructWriter(lazyWriter)\n  }\n  if (lazyWriter.written === 0) {\n    lazyWriter.currClient = struct.id.client\n    // write next client\n    lazyWriter.encoder.writeClient(struct.id.client)\n    // write startClock\n    encoding.writeVarUint(lazyWriter.encoder.restEncoder, struct.id.clock + offset)\n  }\n  struct.write(lazyWriter.encoder, offset)\n  lazyWriter.written++\n}\n/**\n * Call this function when we collected all parts and want to\n * put all the parts together. After calling this method,\n * you can continue using the UpdateEncoder.\n *\n * @param {LazyStructWriter} lazyWriter\n */\nconst finishLazyStructWriting = (lazyWriter) => {\n  flushLazyStructWriter(lazyWriter)\n\n  // this is a fresh encoder because we called flushCurr\n  const restEncoder = lazyWriter.encoder.restEncoder\n\n  /**\n   * Now we put all the fragments together.\n   * This works similarly to `writeClientsStructs`\n   */\n\n  // write # states that were updated - i.e. the clients\n  encoding.writeVarUint(restEncoder, lazyWriter.clientStructs.length)\n\n  for (let i = 0; i < lazyWriter.clientStructs.length; i++) {\n    const partStructs = lazyWriter.clientStructs[i]\n    /**\n     * Works similarly to `writeStructs`\n     */\n    // write # encoded structs\n    encoding.writeVarUint(restEncoder, partStructs.written)\n    // write the rest of the fragment\n    encoding.writeUint8Array(restEncoder, partStructs.restEncoder)\n  }\n}\n\n/**\n * @param {Uint8Array} update\n * @param {typeof UpdateDecoderV2 | typeof UpdateDecoderV1} YDecoder\n * @param {typeof UpdateEncoderV2 | typeof UpdateEncoderV1 } YEncoder\n */\nexport const convertUpdateFormat = (update, YDecoder, YEncoder) => {\n  const updateDecoder = new YDecoder(decoding.createDecoder(update))\n  const lazyDecoder = new LazyStructReader(updateDecoder, false)\n  const updateEncoder = new YEncoder()\n  const lazyWriter = new LazyStructWriter(updateEncoder)\n\n  for (let curr = lazyDecoder.curr; curr !== null; curr = lazyDecoder.next()) {\n    writeStructToLazyStructWriter(lazyWriter, curr, 0)\n  }\n  finishLazyStructWriting(lazyWriter)\n  const ds = readDeleteSet(updateDecoder)\n  writeDeleteSet(updateEncoder, ds)\n  return updateEncoder.toUint8Array()\n}\n\n/**\n * @param {Uint8Array} update\n */\nexport const convertUpdateFormatV1ToV2 = update => convertUpdateFormat(update, UpdateDecoderV1, UpdateEncoderV2)\n\n/**\n * @param {Uint8Array} update\n */\nexport const convertUpdateFormatV2ToV1 = update => convertUpdateFormat(update, UpdateDecoderV2, UpdateEncoderV1)\n","\nimport {\n  isDeleted,\n  Item, AbstractType, Transaction, AbstractStruct // eslint-disable-line\n} from '../internals.js'\n\nimport * as set from 'lib0/set'\nimport * as array from 'lib0/array'\n\n/**\n * @template {AbstractType<any>} T\n * YEvent describes the changes on a YType.\n */\nexport class YEvent {\n  /**\n   * @param {T} target The changed type.\n   * @param {Transaction} transaction\n   */\n  constructor (target, transaction) {\n    /**\n     * The type on which this event was created on.\n     * @type {T}\n     */\n    this.target = target\n    /**\n     * The current target on which the observe callback is called.\n     * @type {AbstractType<any>}\n     */\n    this.currentTarget = target\n    /**\n     * The transaction that triggered this event.\n     * @type {Transaction}\n     */\n    this.transaction = transaction\n    /**\n     * @type {Object|null}\n     */\n    this._changes = null\n    /**\n     * @type {null | Map<string, { action: 'add' | 'update' | 'delete', oldValue: any, newValue: any }>}\n     */\n    this._keys = null\n    /**\n     * @type {null | Array<{ insert?: string | Array<any> | object | AbstractType<any>, retain?: number, delete?: number, attributes?: Object<string, any> }>}\n     */\n    this._delta = null\n  }\n\n  /**\n   * Computes the path from `y` to the changed type.\n   *\n   * @todo v14 should standardize on path: Array<{parent, index}> because that is easier to work with.\n   *\n   * The following property holds:\n   * @example\n   *   let type = y\n   *   event.path.forEach(dir => {\n   *     type = type.get(dir)\n   *   })\n   *   type === event.target // => true\n   */\n  get path () {\n    // @ts-ignore _item is defined because target is integrated\n    return getPathTo(this.currentTarget, this.target)\n  }\n\n  /**\n   * Check if a struct is deleted by this event.\n   *\n   * In contrast to change.deleted, this method also returns true if the struct was added and then deleted.\n   *\n   * @param {AbstractStruct} struct\n   * @return {boolean}\n   */\n  deletes (struct) {\n    return isDeleted(this.transaction.deleteSet, struct.id)\n  }\n\n  /**\n   * @type {Map<string, { action: 'add' | 'update' | 'delete', oldValue: any, newValue: any }>}\n   */\n  get keys () {\n    if (this._keys === null) {\n      const keys = new Map()\n      const target = this.target\n      const changed = /** @type Set<string|null> */ (this.transaction.changed.get(target))\n      changed.forEach(key => {\n        if (key !== null) {\n          const item = /** @type {Item} */ (target._map.get(key))\n          /**\n           * @type {'delete' | 'add' | 'update'}\n           */\n          let action\n          let oldValue\n          if (this.adds(item)) {\n            let prev = item.left\n            while (prev !== null && this.adds(prev)) {\n              prev = prev.left\n            }\n            if (this.deletes(item)) {\n              if (prev !== null && this.deletes(prev)) {\n                action = 'delete'\n                oldValue = array.last(prev.content.getContent())\n              } else {\n                return\n              }\n            } else {\n              if (prev !== null && this.deletes(prev)) {\n                action = 'update'\n                oldValue = array.last(prev.content.getContent())\n              } else {\n                action = 'add'\n                oldValue = undefined\n              }\n            }\n          } else {\n            if (this.deletes(item)) {\n              action = 'delete'\n              oldValue = array.last(/** @type {Item} */ item.content.getContent())\n            } else {\n              return // nop\n            }\n          }\n          keys.set(key, { action, oldValue })\n        }\n      })\n      this._keys = keys\n    }\n    return this._keys\n  }\n\n  /**\n   * This is a computed property. Note that this can only be safely computed during the\n   * event call. Computing this property after other changes happened might result in\n   * unexpected behavior (incorrect computation of deltas). A safe way to collect changes\n   * is to store the `changes` or the `delta` object. Avoid storing the `transaction` object.\n   *\n   * @type {Array<{insert?: string | Array<any> | object | AbstractType<any>, retain?: number, delete?: number, attributes?: Object<string, any>}>}\n   */\n  get delta () {\n    return this.changes.delta\n  }\n\n  /**\n   * Check if a struct is added by this event.\n   *\n   * In contrast to change.deleted, this method also returns true if the struct was added and then deleted.\n   *\n   * @param {AbstractStruct} struct\n   * @return {boolean}\n   */\n  adds (struct) {\n    return struct.id.clock >= (this.transaction.beforeState.get(struct.id.client) || 0)\n  }\n\n  /**\n   * This is a computed property. Note that this can only be safely computed during the\n   * event call. Computing this property after other changes happened might result in\n   * unexpected behavior (incorrect computation of deltas). A safe way to collect changes\n   * is to store the `changes` or the `delta` object. Avoid storing the `transaction` object.\n   *\n   * @type {{added:Set<Item>,deleted:Set<Item>,keys:Map<string,{action:'add'|'update'|'delete',oldValue:any}>,delta:Array<{insert?:Array<any>|string, delete?:number, retain?:number}>}}\n   */\n  get changes () {\n    let changes = this._changes\n    if (changes === null) {\n      const target = this.target\n      const added = set.create()\n      const deleted = set.create()\n      /**\n       * @type {Array<{insert:Array<any>}|{delete:number}|{retain:number}>}\n       */\n      const delta = []\n      changes = {\n        added,\n        deleted,\n        delta,\n        keys: this.keys\n      }\n      const changed = /** @type Set<string|null> */ (this.transaction.changed.get(target))\n      if (changed.has(null)) {\n        /**\n         * @type {any}\n         */\n        let lastOp = null\n        const packOp = () => {\n          if (lastOp) {\n            delta.push(lastOp)\n          }\n        }\n        for (let item = target._start; item !== null; item = item.right) {\n          if (item.deleted) {\n            if (this.deletes(item) && !this.adds(item)) {\n              if (lastOp === null || lastOp.delete === undefined) {\n                packOp()\n                lastOp = { delete: 0 }\n              }\n              lastOp.delete += item.length\n              deleted.add(item)\n            } // else nop\n          } else {\n            if (this.adds(item)) {\n              if (lastOp === null || lastOp.insert === undefined) {\n                packOp()\n                lastOp = { insert: [] }\n              }\n              lastOp.insert = lastOp.insert.concat(item.content.getContent())\n              added.add(item)\n            } else {\n              if (lastOp === null || lastOp.retain === undefined) {\n                packOp()\n                lastOp = { retain: 0 }\n              }\n              lastOp.retain += item.length\n            }\n          }\n        }\n        if (lastOp !== null && lastOp.retain === undefined) {\n          packOp()\n        }\n      }\n      this._changes = changes\n    }\n    return /** @type {any} */ (changes)\n  }\n}\n\n/**\n * Compute the path from this type to the specified target.\n *\n * @example\n *   // `child` should be accessible via `type.get(path[0]).get(path[1])..`\n *   const path = type.getPathTo(child)\n *   // assuming `type instanceof YArray`\n *   console.log(path) // might look like => [2, 'key1']\n *   child === type.get(path[0]).get(path[1])\n *\n * @param {AbstractType<any>} parent\n * @param {AbstractType<any>} child target\n * @return {Array<string|number>} Path to the target\n *\n * @private\n * @function\n */\nconst getPathTo = (parent, child) => {\n  const path = []\n  while (child._item !== null && child !== parent) {\n    if (child._item.parentSub !== null) {\n      // parent is map-ish\n      path.unshift(child._item.parentSub)\n    } else {\n      // parent is array-ish\n      let i = 0\n      let c = /** @type {AbstractType<any>} */ (child._item.parent)._start\n      while (c !== child._item && c !== null) {\n        if (!c.deleted) {\n          i++\n        }\n        c = c.right\n      }\n      path.unshift(i)\n    }\n    child = /** @type {AbstractType<any>} */ (child._item.parent)\n  }\n  return path\n}\n","\nimport {\n  removeEventHandlerListener,\n  callEventHandlerListeners,\n  addEventHandlerListener,\n  createEventHandler,\n  getState,\n  isVisible,\n  ContentType,\n  createID,\n  ContentAny,\n  ContentBinary,\n  getItemCleanStart,\n  ContentDoc, YText, YArray, UpdateEncoderV1, UpdateEncoderV2, Doc, Snapshot, Transaction, EventHandler, YEvent, Item, // eslint-disable-line\n} from '../internals.js'\n\nimport * as map from 'lib0/map'\nimport * as iterator from 'lib0/iterator'\nimport * as error from 'lib0/error'\nimport * as math from 'lib0/math'\n\nconst maxSearchMarker = 80\n\n/**\n * A unique timestamp that identifies each marker.\n *\n * Time is relative,.. this is more like an ever-increasing clock.\n *\n * @type {number}\n */\nlet globalSearchMarkerTimestamp = 0\n\nexport class ArraySearchMarker {\n  /**\n   * @param {Item} p\n   * @param {number} index\n   */\n  constructor (p, index) {\n    p.marker = true\n    this.p = p\n    this.index = index\n    this.timestamp = globalSearchMarkerTimestamp++\n  }\n}\n\n/**\n * @param {ArraySearchMarker} marker\n */\nconst refreshMarkerTimestamp = marker => { marker.timestamp = globalSearchMarkerTimestamp++ }\n\n/**\n * This is rather complex so this function is the only thing that should overwrite a marker\n *\n * @param {ArraySearchMarker} marker\n * @param {Item} p\n * @param {number} index\n */\nconst overwriteMarker = (marker, p, index) => {\n  marker.p.marker = false\n  marker.p = p\n  p.marker = true\n  marker.index = index\n  marker.timestamp = globalSearchMarkerTimestamp++\n}\n\n/**\n * @param {Array<ArraySearchMarker>} searchMarker\n * @param {Item} p\n * @param {number} index\n */\nconst markPosition = (searchMarker, p, index) => {\n  if (searchMarker.length >= maxSearchMarker) {\n    // override oldest marker (we don't want to create more objects)\n    const marker = searchMarker.reduce((a, b) => a.timestamp < b.timestamp ? a : b)\n    overwriteMarker(marker, p, index)\n    return marker\n  } else {\n    // create new marker\n    const pm = new ArraySearchMarker(p, index)\n    searchMarker.push(pm)\n    return pm\n  }\n}\n\n/**\n * Search marker help us to find positions in the associative array faster.\n *\n * They speed up the process of finding a position without much bookkeeping.\n *\n * A maximum of `maxSearchMarker` objects are created.\n *\n * This function always returns a refreshed marker (updated timestamp)\n *\n * @param {AbstractType<any>} yarray\n * @param {number} index\n */\nexport const findMarker = (yarray, index) => {\n  if (yarray._start === null || index === 0 || yarray._searchMarker === null) {\n    return null\n  }\n  const marker = yarray._searchMarker.length === 0 ? null : yarray._searchMarker.reduce((a, b) => math.abs(index - a.index) < math.abs(index - b.index) ? a : b)\n  let p = yarray._start\n  let pindex = 0\n  if (marker !== null) {\n    p = marker.p\n    pindex = marker.index\n    refreshMarkerTimestamp(marker) // we used it, we might need to use it again\n  }\n  // iterate to right if possible\n  while (p.right !== null && pindex < index) {\n    if (!p.deleted && p.countable) {\n      if (index < pindex + p.length) {\n        break\n      }\n      pindex += p.length\n    }\n    p = p.right\n  }\n  // iterate to left if necessary (might be that pindex > index)\n  while (p.left !== null && pindex > index) {\n    p = p.left\n    if (!p.deleted && p.countable) {\n      pindex -= p.length\n    }\n  }\n  // we want to make sure that p can't be merged with left, because that would screw up everything\n  // in that cas just return what we have (it is most likely the best marker anyway)\n  // iterate to left until p can't be merged with left\n  while (p.left !== null && p.left.id.client === p.id.client && p.left.id.clock + p.left.length === p.id.clock) {\n    p = p.left\n    if (!p.deleted && p.countable) {\n      pindex -= p.length\n    }\n  }\n\n  // @todo remove!\n  // assure position\n  // {\n  //   let start = yarray._start\n  //   let pos = 0\n  //   while (start !== p) {\n  //     if (!start.deleted && start.countable) {\n  //       pos += start.length\n  //     }\n  //     start = /** @type {Item} */ (start.right)\n  //   }\n  //   if (pos !== pindex) {\n  //     debugger\n  //     throw new Error('Gotcha position fail!')\n  //   }\n  // }\n  // if (marker) {\n  //   if (window.lengthes == null) {\n  //     window.lengthes = []\n  //     window.getLengthes = () => window.lengthes.sort((a, b) => a - b)\n  //   }\n  //   window.lengthes.push(marker.index - pindex)\n  //   console.log('distance', marker.index - pindex, 'len', p && p.parent.length)\n  // }\n  if (marker !== null && math.abs(marker.index - pindex) < /** @type {YText|YArray<any>} */ (p.parent).length / maxSearchMarker) {\n    // adjust existing marker\n    overwriteMarker(marker, p, pindex)\n    return marker\n  } else {\n    // create new marker\n    return markPosition(yarray._searchMarker, p, pindex)\n  }\n}\n\n/**\n * Update markers when a change happened.\n *\n * This should be called before doing a deletion!\n *\n * @param {Array<ArraySearchMarker>} searchMarker\n * @param {number} index\n * @param {number} len If insertion, len is positive. If deletion, len is negative.\n */\nexport const updateMarkerChanges = (searchMarker, index, len) => {\n  for (let i = searchMarker.length - 1; i >= 0; i--) {\n    const m = searchMarker[i]\n    if (len > 0) {\n      /**\n       * @type {Item|null}\n       */\n      let p = m.p\n      p.marker = false\n      // Ideally we just want to do a simple position comparison, but this will only work if\n      // search markers don't point to deleted items for formats.\n      // Iterate marker to prev undeleted countable position so we know what to do when updating a position\n      while (p && (p.deleted || !p.countable)) {\n        p = p.left\n        if (p && !p.deleted && p.countable) {\n          // adjust position. the loop should break now\n          m.index -= p.length\n        }\n      }\n      if (p === null || p.marker === true) {\n        // remove search marker if updated position is null or if position is already marked\n        searchMarker.splice(i, 1)\n        continue\n      }\n      m.p = p\n      p.marker = true\n    }\n    if (index < m.index || (len > 0 && index === m.index)) { // a simple index <= m.index check would actually suffice\n      m.index = math.max(index, m.index + len)\n    }\n  }\n}\n\n/**\n * Accumulate all (list) children of a type and return them as an Array.\n *\n * @param {AbstractType<any>} t\n * @return {Array<Item>}\n */\nexport const getTypeChildren = t => {\n  let s = t._start\n  const arr = []\n  while (s) {\n    arr.push(s)\n    s = s.right\n  }\n  return arr\n}\n\n/**\n * Call event listeners with an event. This will also add an event to all\n * parents (for `.observeDeep` handlers).\n *\n * @template EventType\n * @param {AbstractType<EventType>} type\n * @param {Transaction} transaction\n * @param {EventType} event\n */\nexport const callTypeObservers = (type, transaction, event) => {\n  const changedType = type\n  const changedParentTypes = transaction.changedParentTypes\n  while (true) {\n    // @ts-ignore\n    map.setIfUndefined(changedParentTypes, type, () => []).push(event)\n    if (type._item === null) {\n      break\n    }\n    type = /** @type {AbstractType<any>} */ (type._item.parent)\n  }\n  callEventHandlerListeners(changedType._eH, event, transaction)\n}\n\n/**\n * @template EventType\n * Abstract Yjs Type class\n */\nexport class AbstractType {\n  constructor () {\n    /**\n     * @type {Item|null}\n     */\n    this._item = null\n    /**\n     * @type {Map<string,Item>}\n     */\n    this._map = new Map()\n    /**\n     * @type {Item|null}\n     */\n    this._start = null\n    /**\n     * @type {Doc|null}\n     */\n    this.doc = null\n    this._length = 0\n    /**\n     * Event handlers\n     * @type {EventHandler<EventType,Transaction>}\n     */\n    this._eH = createEventHandler()\n    /**\n     * Deep event handlers\n     * @type {EventHandler<Array<YEvent<any>>,Transaction>}\n     */\n    this._dEH = createEventHandler()\n    /**\n     * @type {null | Array<ArraySearchMarker>}\n     */\n    this._searchMarker = null\n  }\n\n  /**\n   * @return {AbstractType<any>|null}\n   */\n  get parent () {\n    return this._item ? /** @type {AbstractType<any>} */ (this._item.parent) : null\n  }\n\n  /**\n   * Integrate this type into the Yjs instance.\n   *\n   * * Save this struct in the os\n   * * This type is sent to other client\n   * * Observer functions are fired\n   *\n   * @param {Doc} y The Yjs instance\n   * @param {Item|null} item\n   */\n  _integrate (y, item) {\n    this.doc = y\n    this._item = item\n  }\n\n  /**\n   * @return {AbstractType<EventType>}\n   */\n  _copy () {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @return {AbstractType<EventType>}\n   */\n  clone () {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} _encoder\n   */\n  _write (_encoder) { }\n\n  /**\n   * The first non-deleted item\n   */\n  get _first () {\n    let n = this._start\n    while (n !== null && n.deleted) {\n      n = n.right\n    }\n    return n\n  }\n\n  /**\n   * Creates YEvent and calls all type observers.\n   * Must be implemented by each type.\n   *\n   * @param {Transaction} transaction\n   * @param {Set<null|string>} _parentSubs Keys changed on this type. `null` if list was modified.\n   */\n  _callObserver (transaction, _parentSubs) {\n    if (!transaction.local && this._searchMarker) {\n      this._searchMarker.length = 0\n    }\n  }\n\n  /**\n   * Observe all events that are created on this type.\n   *\n   * @param {function(EventType, Transaction):void} f Observer function\n   */\n  observe (f) {\n    addEventHandlerListener(this._eH, f)\n  }\n\n  /**\n   * Observe all events that are created by this type and its children.\n   *\n   * @param {function(Array<YEvent<any>>,Transaction):void} f Observer function\n   */\n  observeDeep (f) {\n    addEventHandlerListener(this._dEH, f)\n  }\n\n  /**\n   * Unregister an observer function.\n   *\n   * @param {function(EventType,Transaction):void} f Observer function\n   */\n  unobserve (f) {\n    removeEventHandlerListener(this._eH, f)\n  }\n\n  /**\n   * Unregister an observer function.\n   *\n   * @param {function(Array<YEvent<any>>,Transaction):void} f Observer function\n   */\n  unobserveDeep (f) {\n    removeEventHandlerListener(this._dEH, f)\n  }\n\n  /**\n   * @abstract\n   * @return {any}\n   */\n  toJSON () {}\n}\n\n/**\n * @param {AbstractType<any>} type\n * @param {number} start\n * @param {number} end\n * @return {Array<any>}\n *\n * @private\n * @function\n */\nexport const typeListSlice = (type, start, end) => {\n  if (start < 0) {\n    start = type._length + start\n  }\n  if (end < 0) {\n    end = type._length + end\n  }\n  let len = end - start\n  const cs = []\n  let n = type._start\n  while (n !== null && len > 0) {\n    if (n.countable && !n.deleted) {\n      const c = n.content.getContent()\n      if (c.length <= start) {\n        start -= c.length\n      } else {\n        for (let i = start; i < c.length && len > 0; i++) {\n          cs.push(c[i])\n          len--\n        }\n        start = 0\n      }\n    }\n    n = n.right\n  }\n  return cs\n}\n\n/**\n * @param {AbstractType<any>} type\n * @return {Array<any>}\n *\n * @private\n * @function\n */\nexport const typeListToArray = type => {\n  const cs = []\n  let n = type._start\n  while (n !== null) {\n    if (n.countable && !n.deleted) {\n      const c = n.content.getContent()\n      for (let i = 0; i < c.length; i++) {\n        cs.push(c[i])\n      }\n    }\n    n = n.right\n  }\n  return cs\n}\n\n/**\n * @param {AbstractType<any>} type\n * @param {Snapshot} snapshot\n * @return {Array<any>}\n *\n * @private\n * @function\n */\nexport const typeListToArraySnapshot = (type, snapshot) => {\n  const cs = []\n  let n = type._start\n  while (n !== null) {\n    if (n.countable && isVisible(n, snapshot)) {\n      const c = n.content.getContent()\n      for (let i = 0; i < c.length; i++) {\n        cs.push(c[i])\n      }\n    }\n    n = n.right\n  }\n  return cs\n}\n\n/**\n * Executes a provided function on once on overy element of this YArray.\n *\n * @param {AbstractType<any>} type\n * @param {function(any,number,any):void} f A function to execute on every element of this YArray.\n *\n * @private\n * @function\n */\nexport const typeListForEach = (type, f) => {\n  let index = 0\n  let n = type._start\n  while (n !== null) {\n    if (n.countable && !n.deleted) {\n      const c = n.content.getContent()\n      for (let i = 0; i < c.length; i++) {\n        f(c[i], index++, type)\n      }\n    }\n    n = n.right\n  }\n}\n\n/**\n * @template C,R\n * @param {AbstractType<any>} type\n * @param {function(C,number,AbstractType<any>):R} f\n * @return {Array<R>}\n *\n * @private\n * @function\n */\nexport const typeListMap = (type, f) => {\n  /**\n   * @type {Array<any>}\n   */\n  const result = []\n  typeListForEach(type, (c, i) => {\n    result.push(f(c, i, type))\n  })\n  return result\n}\n\n/**\n * @param {AbstractType<any>} type\n * @return {IterableIterator<any>}\n *\n * @private\n * @function\n */\nexport const typeListCreateIterator = type => {\n  let n = type._start\n  /**\n   * @type {Array<any>|null}\n   */\n  let currentContent = null\n  let currentContentIndex = 0\n  return {\n    [Symbol.iterator] () {\n      return this\n    },\n    next: () => {\n      // find some content\n      if (currentContent === null) {\n        while (n !== null && n.deleted) {\n          n = n.right\n        }\n        // check if we reached the end, no need to check currentContent, because it does not exist\n        if (n === null) {\n          return {\n            done: true,\n            value: undefined\n          }\n        }\n        // we found n, so we can set currentContent\n        currentContent = n.content.getContent()\n        currentContentIndex = 0\n        n = n.right // we used the content of n, now iterate to next\n      }\n      const value = currentContent[currentContentIndex++]\n      // check if we need to empty currentContent\n      if (currentContent.length <= currentContentIndex) {\n        currentContent = null\n      }\n      return {\n        done: false,\n        value\n      }\n    }\n  }\n}\n\n/**\n * Executes a provided function on once on overy element of this YArray.\n * Operates on a snapshotted state of the document.\n *\n * @param {AbstractType<any>} type\n * @param {function(any,number,AbstractType<any>):void} f A function to execute on every element of this YArray.\n * @param {Snapshot} snapshot\n *\n * @private\n * @function\n */\nexport const typeListForEachSnapshot = (type, f, snapshot) => {\n  let index = 0\n  let n = type._start\n  while (n !== null) {\n    if (n.countable && isVisible(n, snapshot)) {\n      const c = n.content.getContent()\n      for (let i = 0; i < c.length; i++) {\n        f(c[i], index++, type)\n      }\n    }\n    n = n.right\n  }\n}\n\n/**\n * @param {AbstractType<any>} type\n * @param {number} index\n * @return {any}\n *\n * @private\n * @function\n */\nexport const typeListGet = (type, index) => {\n  const marker = findMarker(type, index)\n  let n = type._start\n  if (marker !== null) {\n    n = marker.p\n    index -= marker.index\n  }\n  for (; n !== null; n = n.right) {\n    if (!n.deleted && n.countable) {\n      if (index < n.length) {\n        return n.content.getContent()[index]\n      }\n      index -= n.length\n    }\n  }\n}\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {Item?} referenceItem\n * @param {Array<Object<string,any>|Array<any>|boolean|number|null|string|Uint8Array>} content\n *\n * @private\n * @function\n */\nexport const typeListInsertGenericsAfter = (transaction, parent, referenceItem, content) => {\n  let left = referenceItem\n  const doc = transaction.doc\n  const ownClientId = doc.clientID\n  const store = doc.store\n  const right = referenceItem === null ? parent._start : referenceItem.right\n  /**\n   * @type {Array<Object|Array<any>|number|null>}\n   */\n  let jsonContent = []\n  const packJsonContent = () => {\n    if (jsonContent.length > 0) {\n      left = new Item(createID(ownClientId, getState(store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, new ContentAny(jsonContent))\n      left.integrate(transaction, 0)\n      jsonContent = []\n    }\n  }\n  content.forEach(c => {\n    if (c === null) {\n      jsonContent.push(c)\n    } else {\n      switch (c.constructor) {\n        case Number:\n        case Object:\n        case Boolean:\n        case Array:\n        case String:\n          jsonContent.push(c)\n          break\n        default:\n          packJsonContent()\n          switch (c.constructor) {\n            case Uint8Array:\n            case ArrayBuffer:\n              left = new Item(createID(ownClientId, getState(store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, new ContentBinary(new Uint8Array(/** @type {Uint8Array} */ (c))))\n              left.integrate(transaction, 0)\n              break\n            case Doc:\n              left = new Item(createID(ownClientId, getState(store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, new ContentDoc(/** @type {Doc} */ (c)))\n              left.integrate(transaction, 0)\n              break\n            default:\n              if (c instanceof AbstractType) {\n                left = new Item(createID(ownClientId, getState(store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, new ContentType(c))\n                left.integrate(transaction, 0)\n              } else {\n                throw new Error('Unexpected content type in insert operation')\n              }\n          }\n      }\n    }\n  })\n  packJsonContent()\n}\n\nconst lengthExceeded = error.create('Length exceeded!')\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {number} index\n * @param {Array<Object<string,any>|Array<any>|number|null|string|Uint8Array>} content\n *\n * @private\n * @function\n */\nexport const typeListInsertGenerics = (transaction, parent, index, content) => {\n  if (index > parent._length) {\n    throw lengthExceeded\n  }\n  if (index === 0) {\n    if (parent._searchMarker) {\n      updateMarkerChanges(parent._searchMarker, index, content.length)\n    }\n    return typeListInsertGenericsAfter(transaction, parent, null, content)\n  }\n  const startIndex = index\n  const marker = findMarker(parent, index)\n  let n = parent._start\n  if (marker !== null) {\n    n = marker.p\n    index -= marker.index\n    // we need to iterate one to the left so that the algorithm works\n    if (index === 0) {\n      // @todo refactor this as it actually doesn't consider formats\n      n = n.prev // important! get the left undeleted item so that we can actually decrease index\n      index += (n && n.countable && !n.deleted) ? n.length : 0\n    }\n  }\n  for (; n !== null; n = n.right) {\n    if (!n.deleted && n.countable) {\n      if (index <= n.length) {\n        if (index < n.length) {\n          // insert in-between\n          getItemCleanStart(transaction, createID(n.id.client, n.id.clock + index))\n        }\n        break\n      }\n      index -= n.length\n    }\n  }\n  if (parent._searchMarker) {\n    updateMarkerChanges(parent._searchMarker, startIndex, content.length)\n  }\n  return typeListInsertGenericsAfter(transaction, parent, n, content)\n}\n\n/**\n * Pushing content is special as we generally want to push after the last item. So we don't have to update\n * the serach marker.\n *\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {Array<Object<string,any>|Array<any>|number|null|string|Uint8Array>} content\n *\n * @private\n * @function\n */\nexport const typeListPushGenerics = (transaction, parent, content) => {\n  // Use the marker with the highest index and iterate to the right.\n  const marker = (parent._searchMarker || []).reduce((maxMarker, currMarker) => currMarker.index > maxMarker.index ? currMarker : maxMarker, { index: 0, p: parent._start })\n  let n = marker.p\n  if (n) {\n    while (n.right) {\n      n = n.right\n    }\n  }\n  return typeListInsertGenericsAfter(transaction, parent, n, content)\n}\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {number} index\n * @param {number} length\n *\n * @private\n * @function\n */\nexport const typeListDelete = (transaction, parent, index, length) => {\n  if (length === 0) { return }\n  const startIndex = index\n  const startLength = length\n  const marker = findMarker(parent, index)\n  let n = parent._start\n  if (marker !== null) {\n    n = marker.p\n    index -= marker.index\n  }\n  // compute the first item to be deleted\n  for (; n !== null && index > 0; n = n.right) {\n    if (!n.deleted && n.countable) {\n      if (index < n.length) {\n        getItemCleanStart(transaction, createID(n.id.client, n.id.clock + index))\n      }\n      index -= n.length\n    }\n  }\n  // delete all items until done\n  while (length > 0 && n !== null) {\n    if (!n.deleted) {\n      if (length < n.length) {\n        getItemCleanStart(transaction, createID(n.id.client, n.id.clock + length))\n      }\n      n.delete(transaction)\n      length -= n.length\n    }\n    n = n.right\n  }\n  if (length > 0) {\n    throw lengthExceeded\n  }\n  if (parent._searchMarker) {\n    updateMarkerChanges(parent._searchMarker, startIndex, -startLength + length /* in case we remove the above exception */)\n  }\n}\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {string} key\n *\n * @private\n * @function\n */\nexport const typeMapDelete = (transaction, parent, key) => {\n  const c = parent._map.get(key)\n  if (c !== undefined) {\n    c.delete(transaction)\n  }\n}\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {string} key\n * @param {Object|number|null|Array<any>|string|Uint8Array|AbstractType<any>} value\n *\n * @private\n * @function\n */\nexport const typeMapSet = (transaction, parent, key, value) => {\n  const left = parent._map.get(key) || null\n  const doc = transaction.doc\n  const ownClientId = doc.clientID\n  let content\n  if (value == null) {\n    content = new ContentAny([value])\n  } else {\n    switch (value.constructor) {\n      case Number:\n      case Object:\n      case Boolean:\n      case Array:\n      case String:\n        content = new ContentAny([value])\n        break\n      case Uint8Array:\n        content = new ContentBinary(/** @type {Uint8Array} */ (value))\n        break\n      case Doc:\n        content = new ContentDoc(/** @type {Doc} */ (value))\n        break\n      default:\n        if (value instanceof AbstractType) {\n          content = new ContentType(value)\n        } else {\n          throw new Error('Unexpected content type')\n        }\n    }\n  }\n  new Item(createID(ownClientId, getState(doc.store, ownClientId)), left, left && left.lastId, null, null, parent, key, content).integrate(transaction, 0)\n}\n\n/**\n * @param {AbstractType<any>} parent\n * @param {string} key\n * @return {Object<string,any>|number|null|Array<any>|string|Uint8Array|AbstractType<any>|undefined}\n *\n * @private\n * @function\n */\nexport const typeMapGet = (parent, key) => {\n  const val = parent._map.get(key)\n  return val !== undefined && !val.deleted ? val.content.getContent()[val.length - 1] : undefined\n}\n\n/**\n * @param {AbstractType<any>} parent\n * @return {Object<string,Object<string,any>|number|null|Array<any>|string|Uint8Array|AbstractType<any>|undefined>}\n *\n * @private\n * @function\n */\nexport const typeMapGetAll = (parent) => {\n  /**\n   * @type {Object<string,any>}\n   */\n  const res = {}\n  parent._map.forEach((value, key) => {\n    if (!value.deleted) {\n      res[key] = value.content.getContent()[value.length - 1]\n    }\n  })\n  return res\n}\n\n/**\n * @param {AbstractType<any>} parent\n * @param {string} key\n * @return {boolean}\n *\n * @private\n * @function\n */\nexport const typeMapHas = (parent, key) => {\n  const val = parent._map.get(key)\n  return val !== undefined && !val.deleted\n}\n\n/**\n * @param {AbstractType<any>} parent\n * @param {string} key\n * @param {Snapshot} snapshot\n * @return {Object<string,any>|number|null|Array<any>|string|Uint8Array|AbstractType<any>|undefined}\n *\n * @private\n * @function\n */\nexport const typeMapGetSnapshot = (parent, key, snapshot) => {\n  let v = parent._map.get(key) || null\n  while (v !== null && (!snapshot.sv.has(v.id.client) || v.id.clock >= (snapshot.sv.get(v.id.client) || 0))) {\n    v = v.left\n  }\n  return v !== null && isVisible(v, snapshot) ? v.content.getContent()[v.length - 1] : undefined\n}\n\n/**\n * @param {Map<string,Item>} map\n * @return {IterableIterator<Array<any>>}\n *\n * @private\n * @function\n */\nexport const createMapIterator = map => iterator.iteratorFilter(map.entries(), /** @param {any} entry */ entry => !entry[1].deleted)\n","/**\n * @module YArray\n */\n\nimport {\n  YEvent,\n  AbstractType,\n  typeListGet,\n  typeListToArray,\n  typeListForEach,\n  typeListCreateIterator,\n  typeListInsertGenerics,\n  typeListPushGenerics,\n  typeListDelete,\n  typeListMap,\n  YArrayRefID,\n  callTypeObservers,\n  transact,\n  ArraySearchMarker, UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, Doc, Transaction, Item // eslint-disable-line\n} from '../internals.js'\nimport { typeListSlice } from './AbstractType.js'\n\n/**\n * Event that describes the changes on a YArray\n * @template T\n * @extends YEvent<YArray<T>>\n */\nexport class YArrayEvent extends YEvent {\n  /**\n   * @param {YArray<T>} yarray The changed type\n   * @param {Transaction} transaction The transaction object\n   */\n  constructor (yarray, transaction) {\n    super(yarray, transaction)\n    this._transaction = transaction\n  }\n}\n\n/**\n * A shared Array implementation.\n * @template T\n * @extends AbstractType<YArrayEvent<T>>\n * @implements {Iterable<T>}\n */\nexport class YArray extends AbstractType {\n  constructor () {\n    super()\n    /**\n     * @type {Array<any>?}\n     * @private\n     */\n    this._prelimContent = []\n    /**\n     * @type {Array<ArraySearchMarker>}\n     */\n    this._searchMarker = []\n  }\n\n  /**\n   * Construct a new YArray containing the specified items.\n   * @template {Object<string,any>|Array<any>|number|null|string|Uint8Array} T\n   * @param {Array<T>} items\n   * @return {YArray<T>}\n   */\n  static from (items) {\n    /**\n     * @type {YArray<T>}\n     */\n    const a = new YArray()\n    a.push(items)\n    return a\n  }\n\n  /**\n   * Integrate this type into the Yjs instance.\n   *\n   * * Save this struct in the os\n   * * This type is sent to other client\n   * * Observer functions are fired\n   *\n   * @param {Doc} y The Yjs instance\n   * @param {Item} item\n   */\n  _integrate (y, item) {\n    super._integrate(y, item)\n    this.insert(0, /** @type {Array<any>} */ (this._prelimContent))\n    this._prelimContent = null\n  }\n\n  /**\n   * @return {YArray<T>}\n   */\n  _copy () {\n    return new YArray()\n  }\n\n  /**\n   * @return {YArray<T>}\n   */\n  clone () {\n    /**\n     * @type {YArray<T>}\n     */\n    const arr = new YArray()\n    arr.insert(0, this.toArray().map(el =>\n      el instanceof AbstractType ? /** @type {typeof el} */ (el.clone()) : el\n    ))\n    return arr\n  }\n\n  get length () {\n    return this._prelimContent === null ? this._length : this._prelimContent.length\n  }\n\n  /**\n   * Creates YArrayEvent and calls observers.\n   *\n   * @param {Transaction} transaction\n   * @param {Set<null|string>} parentSubs Keys changed on this type. `null` if list was modified.\n   */\n  _callObserver (transaction, parentSubs) {\n    super._callObserver(transaction, parentSubs)\n    callTypeObservers(this, transaction, new YArrayEvent(this, transaction))\n  }\n\n  /**\n   * Inserts new content at an index.\n   *\n   * Important: This function expects an array of content. Not just a content\n   * object. The reason for this \"weirdness\" is that inserting several elements\n   * is very efficient when it is done as a single operation.\n   *\n   * @example\n   *  // Insert character 'a' at position 0\n   *  yarray.insert(0, ['a'])\n   *  // Insert numbers 1, 2 at position 1\n   *  yarray.insert(1, [1, 2])\n   *\n   * @param {number} index The index to insert content at.\n   * @param {Array<T>} content The array of content\n   */\n  insert (index, content) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeListInsertGenerics(transaction, this, index, /** @type {any} */ (content))\n      })\n    } else {\n      /** @type {Array<any>} */ (this._prelimContent).splice(index, 0, ...content)\n    }\n  }\n\n  /**\n   * Appends content to this YArray.\n   *\n   * @param {Array<T>} content Array of content to append.\n   *\n   * @todo Use the following implementation in all types.\n   */\n  push (content) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeListPushGenerics(transaction, this, /** @type {any} */ (content))\n      })\n    } else {\n      /** @type {Array<any>} */ (this._prelimContent).push(...content)\n    }\n  }\n\n  /**\n   * Preppends content to this YArray.\n   *\n   * @param {Array<T>} content Array of content to preppend.\n   */\n  unshift (content) {\n    this.insert(0, content)\n  }\n\n  /**\n   * Deletes elements starting from an index.\n   *\n   * @param {number} index Index at which to start deleting elements\n   * @param {number} length The number of elements to remove. Defaults to 1.\n   */\n  delete (index, length = 1) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeListDelete(transaction, this, index, length)\n      })\n    } else {\n      /** @type {Array<any>} */ (this._prelimContent).splice(index, length)\n    }\n  }\n\n  /**\n   * Returns the i-th element from a YArray.\n   *\n   * @param {number} index The index of the element to return from the YArray\n   * @return {T}\n   */\n  get (index) {\n    return typeListGet(this, index)\n  }\n\n  /**\n   * Transforms this YArray to a JavaScript Array.\n   *\n   * @return {Array<T>}\n   */\n  toArray () {\n    return typeListToArray(this)\n  }\n\n  /**\n   * Transforms this YArray to a JavaScript Array.\n   *\n   * @param {number} [start]\n   * @param {number} [end]\n   * @return {Array<T>}\n   */\n  slice (start = 0, end = this.length) {\n    return typeListSlice(this, start, end)\n  }\n\n  /**\n   * Transforms this Shared Type to a JSON object.\n   *\n   * @return {Array<any>}\n   */\n  toJSON () {\n    return this.map(c => c instanceof AbstractType ? c.toJSON() : c)\n  }\n\n  /**\n   * Returns an Array with the result of calling a provided function on every\n   * element of this YArray.\n   *\n   * @template M\n   * @param {function(T,number,YArray<T>):M} f Function that produces an element of the new Array\n   * @return {Array<M>} A new array with each element being the result of the\n   *                 callback function\n   */\n  map (f) {\n    return typeListMap(this, /** @type {any} */ (f))\n  }\n\n  /**\n   * Executes a provided function on once on overy element of this YArray.\n   *\n   * @param {function(T,number,YArray<T>):void} f A function to execute on every element of this YArray.\n   */\n  forEach (f) {\n    typeListForEach(this, f)\n  }\n\n  /**\n   * @return {IterableIterator<T>}\n   */\n  [Symbol.iterator] () {\n    return typeListCreateIterator(this)\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   */\n  _write (encoder) {\n    encoder.writeTypeRef(YArrayRefID)\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} _decoder\n *\n * @private\n * @function\n */\nexport const readYArray = _decoder => new YArray()\n","\n/**\n * @module YMap\n */\n\nimport {\n  YEvent,\n  AbstractType,\n  typeMapDelete,\n  typeMapSet,\n  typeMapGet,\n  typeMapHas,\n  createMapIterator,\n  YMapRefID,\n  callTypeObservers,\n  transact,\n  UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, Doc, Transaction, Item // eslint-disable-line\n} from '../internals.js'\n\nimport * as iterator from 'lib0/iterator'\n\n/**\n * @template T\n * @extends YEvent<YMap<T>>\n * Event that describes the changes on a YMap.\n */\nexport class YMapEvent extends YEvent {\n  /**\n   * @param {YMap<T>} ymap The YArray that changed.\n   * @param {Transaction} transaction\n   * @param {Set<any>} subs The keys that changed.\n   */\n  constructor (ymap, transaction, subs) {\n    super(ymap, transaction)\n    this.keysChanged = subs\n  }\n}\n\n/**\n * @template MapType\n * A shared Map implementation.\n *\n * @extends AbstractType<YMapEvent<MapType>>\n * @implements {Iterable<MapType>}\n */\nexport class YMap extends AbstractType {\n  /**\n   *\n   * @param {Iterable<readonly [string, any]>=} entries - an optional iterable to initialize the YMap\n   */\n  constructor (entries) {\n    super()\n    /**\n     * @type {Map<string,any>?}\n     * @private\n     */\n    this._prelimContent = null\n\n    if (entries === undefined) {\n      this._prelimContent = new Map()\n    } else {\n      this._prelimContent = new Map(entries)\n    }\n  }\n\n  /**\n   * Integrate this type into the Yjs instance.\n   *\n   * * Save this struct in the os\n   * * This type is sent to other client\n   * * Observer functions are fired\n   *\n   * @param {Doc} y The Yjs instance\n   * @param {Item} item\n   */\n  _integrate (y, item) {\n    super._integrate(y, item)\n    ;/** @type {Map<string, any>} */ (this._prelimContent).forEach((value, key) => {\n      this.set(key, value)\n    })\n    this._prelimContent = null\n  }\n\n  /**\n   * @return {YMap<MapType>}\n   */\n  _copy () {\n    return new YMap()\n  }\n\n  /**\n   * @return {YMap<MapType>}\n   */\n  clone () {\n    /**\n     * @type {YMap<MapType>}\n     */\n    const map = new YMap()\n    this.forEach((value, key) => {\n      map.set(key, value instanceof AbstractType ? /** @type {typeof value} */ (value.clone()) : value)\n    })\n    return map\n  }\n\n  /**\n   * Creates YMapEvent and calls observers.\n   *\n   * @param {Transaction} transaction\n   * @param {Set<null|string>} parentSubs Keys changed on this type. `null` if list was modified.\n   */\n  _callObserver (transaction, parentSubs) {\n    callTypeObservers(this, transaction, new YMapEvent(this, transaction, parentSubs))\n  }\n\n  /**\n   * Transforms this Shared Type to a JSON object.\n   *\n   * @return {Object<string,any>}\n   */\n  toJSON () {\n    /**\n     * @type {Object<string,MapType>}\n     */\n    const map = {}\n    this._map.forEach((item, key) => {\n      if (!item.deleted) {\n        const v = item.content.getContent()[item.length - 1]\n        map[key] = v instanceof AbstractType ? v.toJSON() : v\n      }\n    })\n    return map\n  }\n\n  /**\n   * Returns the size of the YMap (count of key/value pairs)\n   *\n   * @return {number}\n   */\n  get size () {\n    return [...createMapIterator(this._map)].length\n  }\n\n  /**\n   * Returns the keys for each element in the YMap Type.\n   *\n   * @return {IterableIterator<string>}\n   */\n  keys () {\n    return iterator.iteratorMap(createMapIterator(this._map), /** @param {any} v */ v => v[0])\n  }\n\n  /**\n   * Returns the values for each element in the YMap Type.\n   *\n   * @return {IterableIterator<any>}\n   */\n  values () {\n    return iterator.iteratorMap(createMapIterator(this._map), /** @param {any} v */ v => v[1].content.getContent()[v[1].length - 1])\n  }\n\n  /**\n   * Returns an Iterator of [key, value] pairs\n   *\n   * @return {IterableIterator<any>}\n   */\n  entries () {\n    return iterator.iteratorMap(createMapIterator(this._map), /** @param {any} v */ v => [v[0], v[1].content.getContent()[v[1].length - 1]])\n  }\n\n  /**\n   * Executes a provided function on once on every key-value pair.\n   *\n   * @param {function(MapType,string,YMap<MapType>):void} f A function to execute on every element of this YArray.\n   */\n  forEach (f) {\n    this._map.forEach((item, key) => {\n      if (!item.deleted) {\n        f(item.content.getContent()[item.length - 1], key, this)\n      }\n    })\n  }\n\n  /**\n   * Returns an Iterator of [key, value] pairs\n   *\n   * @return {IterableIterator<any>}\n   */\n  [Symbol.iterator] () {\n    return this.entries()\n  }\n\n  /**\n   * Remove a specified element from this YMap.\n   *\n   * @param {string} key The key of the element to remove.\n   */\n  delete (key) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeMapDelete(transaction, this, key)\n      })\n    } else {\n      /** @type {Map<string, any>} */ (this._prelimContent).delete(key)\n    }\n  }\n\n  /**\n   * Adds or updates an element with a specified key and value.\n   *\n   * @param {string} key The key of the element to add to this YMap\n   * @param {MapType} value The value of the element to add\n   */\n  set (key, value) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeMapSet(transaction, this, key, /** @type {any} */ (value))\n      })\n    } else {\n      /** @type {Map<string, any>} */ (this._prelimContent).set(key, value)\n    }\n    return value\n  }\n\n  /**\n   * Returns a specified element from this YMap.\n   *\n   * @param {string} key\n   * @return {MapType|undefined}\n   */\n  get (key) {\n    return /** @type {any} */ (typeMapGet(this, key))\n  }\n\n  /**\n   * Returns a boolean indicating whether the specified key exists or not.\n   *\n   * @param {string} key The key to test.\n   * @return {boolean}\n   */\n  has (key) {\n    return typeMapHas(this, key)\n  }\n\n  /**\n   * Removes all elements from this YMap.\n   */\n  clear () {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        this.forEach(function (_value, key, map) {\n          typeMapDelete(transaction, map, key)\n        })\n      })\n    } else {\n      /** @type {Map<string, any>} */ (this._prelimContent).clear()\n    }\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   */\n  _write (encoder) {\n    encoder.writeTypeRef(YMapRefID)\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} _decoder\n *\n * @private\n * @function\n */\nexport const readYMap = _decoder => new YMap()\n","\n/**\n * @module YText\n */\n\nimport {\n  YEvent,\n  AbstractType,\n  getItemCleanStart,\n  getState,\n  isVisible,\n  createID,\n  YTextRefID,\n  callTypeObservers,\n  transact,\n  ContentEmbed,\n  GC,\n  ContentFormat,\n  ContentString,\n  splitSnapshotAffectedStructs,\n  iterateDeletedStructs,\n  iterateStructs,\n  findMarker,\n  typeMapDelete,\n  typeMapSet,\n  typeMapGet,\n  typeMapGetAll,\n  updateMarkerChanges,\n  ContentType,\n  ArraySearchMarker, UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, ID, Doc, Item, Snapshot, Transaction // eslint-disable-line\n} from '../internals.js'\n\nimport * as object from 'lib0/object'\nimport * as map from 'lib0/map'\nimport * as error from 'lib0/error'\n\n/**\n * @param {any} a\n * @param {any} b\n * @return {boolean}\n */\nconst equalAttrs = (a, b) => a === b || (typeof a === 'object' && typeof b === 'object' && a && b && object.equalFlat(a, b))\n\nexport class ItemTextListPosition {\n  /**\n   * @param {Item|null} left\n   * @param {Item|null} right\n   * @param {number} index\n   * @param {Map<string,any>} currentAttributes\n   */\n  constructor (left, right, index, currentAttributes) {\n    this.left = left\n    this.right = right\n    this.index = index\n    this.currentAttributes = currentAttributes\n  }\n\n  /**\n   * Only call this if you know that this.right is defined\n   */\n  forward () {\n    if (this.right === null) {\n      error.unexpectedCase()\n    }\n    switch (this.right.content.constructor) {\n      case ContentFormat:\n        if (!this.right.deleted) {\n          updateCurrentAttributes(this.currentAttributes, /** @type {ContentFormat} */ (this.right.content))\n        }\n        break\n      default:\n        if (!this.right.deleted) {\n          this.index += this.right.length\n        }\n        break\n    }\n    this.left = this.right\n    this.right = this.right.right\n  }\n}\n\n/**\n * @param {Transaction} transaction\n * @param {ItemTextListPosition} pos\n * @param {number} count steps to move forward\n * @return {ItemTextListPosition}\n *\n * @private\n * @function\n */\nconst findNextPosition = (transaction, pos, count) => {\n  while (pos.right !== null && count > 0) {\n    switch (pos.right.content.constructor) {\n      case ContentFormat:\n        if (!pos.right.deleted) {\n          updateCurrentAttributes(pos.currentAttributes, /** @type {ContentFormat} */ (pos.right.content))\n        }\n        break\n      default:\n        if (!pos.right.deleted) {\n          if (count < pos.right.length) {\n            // split right\n            getItemCleanStart(transaction, createID(pos.right.id.client, pos.right.id.clock + count))\n          }\n          pos.index += pos.right.length\n          count -= pos.right.length\n        }\n        break\n    }\n    pos.left = pos.right\n    pos.right = pos.right.right\n    // pos.forward() - we don't forward because that would halve the performance because we already do the checks above\n  }\n  return pos\n}\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {number} index\n * @return {ItemTextListPosition}\n *\n * @private\n * @function\n */\nconst findPosition = (transaction, parent, index) => {\n  const currentAttributes = new Map()\n  const marker = findMarker(parent, index)\n  if (marker) {\n    const pos = new ItemTextListPosition(marker.p.left, marker.p, marker.index, currentAttributes)\n    return findNextPosition(transaction, pos, index - marker.index)\n  } else {\n    const pos = new ItemTextListPosition(null, parent._start, 0, currentAttributes)\n    return findNextPosition(transaction, pos, index)\n  }\n}\n\n/**\n * Negate applied formats\n *\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {ItemTextListPosition} currPos\n * @param {Map<string,any>} negatedAttributes\n *\n * @private\n * @function\n */\nconst insertNegatedAttributes = (transaction, parent, currPos, negatedAttributes) => {\n  // check if we really need to remove attributes\n  while (\n    currPos.right !== null && (\n      currPos.right.deleted === true || (\n        currPos.right.content.constructor === ContentFormat &&\n        equalAttrs(negatedAttributes.get(/** @type {ContentFormat} */ (currPos.right.content).key), /** @type {ContentFormat} */ (currPos.right.content).value)\n      )\n    )\n  ) {\n    if (!currPos.right.deleted) {\n      negatedAttributes.delete(/** @type {ContentFormat} */ (currPos.right.content).key)\n    }\n    currPos.forward()\n  }\n  const doc = transaction.doc\n  const ownClientId = doc.clientID\n  negatedAttributes.forEach((val, key) => {\n    const left = currPos.left\n    const right = currPos.right\n    const nextFormat = new Item(createID(ownClientId, getState(doc.store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, new ContentFormat(key, val))\n    nextFormat.integrate(transaction, 0)\n    currPos.right = nextFormat\n    currPos.forward()\n  })\n}\n\n/**\n * @param {Map<string,any>} currentAttributes\n * @param {ContentFormat} format\n *\n * @private\n * @function\n */\nconst updateCurrentAttributes = (currentAttributes, format) => {\n  const { key, value } = format\n  if (value === null) {\n    currentAttributes.delete(key)\n  } else {\n    currentAttributes.set(key, value)\n  }\n}\n\n/**\n * @param {ItemTextListPosition} currPos\n * @param {Object<string,any>} attributes\n *\n * @private\n * @function\n */\nconst minimizeAttributeChanges = (currPos, attributes) => {\n  // go right while attributes[right.key] === right.value (or right is deleted)\n  while (true) {\n    if (currPos.right === null) {\n      break\n    } else if (currPos.right.deleted || (currPos.right.content.constructor === ContentFormat && equalAttrs(attributes[(/** @type {ContentFormat} */ (currPos.right.content)).key] || null, /** @type {ContentFormat} */ (currPos.right.content).value))) {\n      //\n    } else {\n      break\n    }\n    currPos.forward()\n  }\n}\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {ItemTextListPosition} currPos\n * @param {Object<string,any>} attributes\n * @return {Map<string,any>}\n *\n * @private\n * @function\n **/\nconst insertAttributes = (transaction, parent, currPos, attributes) => {\n  const doc = transaction.doc\n  const ownClientId = doc.clientID\n  const negatedAttributes = new Map()\n  // insert format-start items\n  for (const key in attributes) {\n    const val = attributes[key]\n    const currentVal = currPos.currentAttributes.get(key) || null\n    if (!equalAttrs(currentVal, val)) {\n      // save negated attribute (set null if currentVal undefined)\n      negatedAttributes.set(key, currentVal)\n      const { left, right } = currPos\n      currPos.right = new Item(createID(ownClientId, getState(doc.store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, new ContentFormat(key, val))\n      currPos.right.integrate(transaction, 0)\n      currPos.forward()\n    }\n  }\n  return negatedAttributes\n}\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {ItemTextListPosition} currPos\n * @param {string|object|AbstractType<any>} text\n * @param {Object<string,any>} attributes\n *\n * @private\n * @function\n **/\nconst insertText = (transaction, parent, currPos, text, attributes) => {\n  currPos.currentAttributes.forEach((_val, key) => {\n    if (attributes[key] === undefined) {\n      attributes[key] = null\n    }\n  })\n  const doc = transaction.doc\n  const ownClientId = doc.clientID\n  minimizeAttributeChanges(currPos, attributes)\n  const negatedAttributes = insertAttributes(transaction, parent, currPos, attributes)\n  // insert content\n  const content = text.constructor === String ? new ContentString(/** @type {string} */ (text)) : (text instanceof AbstractType ? new ContentType(text) : new ContentEmbed(text))\n  let { left, right, index } = currPos\n  if (parent._searchMarker) {\n    updateMarkerChanges(parent._searchMarker, currPos.index, content.getLength())\n  }\n  right = new Item(createID(ownClientId, getState(doc.store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, content)\n  right.integrate(transaction, 0)\n  currPos.right = right\n  currPos.index = index\n  currPos.forward()\n  insertNegatedAttributes(transaction, parent, currPos, negatedAttributes)\n}\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {ItemTextListPosition} currPos\n * @param {number} length\n * @param {Object<string,any>} attributes\n *\n * @private\n * @function\n */\nconst formatText = (transaction, parent, currPos, length, attributes) => {\n  const doc = transaction.doc\n  const ownClientId = doc.clientID\n  minimizeAttributeChanges(currPos, attributes)\n  const negatedAttributes = insertAttributes(transaction, parent, currPos, attributes)\n  // iterate until first non-format or null is found\n  // delete all formats with attributes[format.key] != null\n  // also check the attributes after the first non-format as we do not want to insert redundant negated attributes there\n  // eslint-disable-next-line no-labels\n  iterationLoop: while (\n    currPos.right !== null &&\n    (length > 0 ||\n      (\n        negatedAttributes.size > 0 &&\n        (currPos.right.deleted || currPos.right.content.constructor === ContentFormat)\n      )\n    )\n  ) {\n    if (!currPos.right.deleted) {\n      switch (currPos.right.content.constructor) {\n        case ContentFormat: {\n          const { key, value } = /** @type {ContentFormat} */ (currPos.right.content)\n          const attr = attributes[key]\n          if (attr !== undefined) {\n            if (equalAttrs(attr, value)) {\n              negatedAttributes.delete(key)\n            } else {\n              if (length === 0) {\n                // no need to further extend negatedAttributes\n                // eslint-disable-next-line no-labels\n                break iterationLoop\n              }\n              negatedAttributes.set(key, value)\n            }\n            currPos.right.delete(transaction)\n          } else {\n            currPos.currentAttributes.set(key, value)\n          }\n          break\n        }\n        default:\n          if (length < currPos.right.length) {\n            getItemCleanStart(transaction, createID(currPos.right.id.client, currPos.right.id.clock + length))\n          }\n          length -= currPos.right.length\n          break\n      }\n    }\n    currPos.forward()\n  }\n  // Quill just assumes that the editor starts with a newline and that it always\n  // ends with a newline. We only insert that newline when a new newline is\n  // inserted - i.e when length is bigger than type.length\n  if (length > 0) {\n    let newlines = ''\n    for (; length > 0; length--) {\n      newlines += '\\n'\n    }\n    currPos.right = new Item(createID(ownClientId, getState(doc.store, ownClientId)), currPos.left, currPos.left && currPos.left.lastId, currPos.right, currPos.right && currPos.right.id, parent, null, new ContentString(newlines))\n    currPos.right.integrate(transaction, 0)\n    currPos.forward()\n  }\n  insertNegatedAttributes(transaction, parent, currPos, negatedAttributes)\n}\n\n/**\n * Call this function after string content has been deleted in order to\n * clean up formatting Items.\n *\n * @param {Transaction} transaction\n * @param {Item} start\n * @param {Item|null} curr exclusive end, automatically iterates to the next Content Item\n * @param {Map<string,any>} startAttributes\n * @param {Map<string,any>} currAttributes\n * @return {number} The amount of formatting Items deleted.\n *\n * @function\n */\nconst cleanupFormattingGap = (transaction, start, curr, startAttributes, currAttributes) => {\n  /**\n   * @type {Item|null}\n   */\n  let end = start\n  /**\n   * @type {Map<string,ContentFormat>}\n   */\n  const endFormats = map.create()\n  while (end && (!end.countable || end.deleted)) {\n    if (!end.deleted && end.content.constructor === ContentFormat) {\n      const cf = /** @type {ContentFormat} */ (end.content)\n      endFormats.set(cf.key, cf)\n    }\n    end = end.right\n  }\n  let cleanups = 0\n  let reachedCurr = false\n  while (start !== end) {\n    if (curr === start) {\n      reachedCurr = true\n    }\n    if (!start.deleted) {\n      const content = start.content\n      switch (content.constructor) {\n        case ContentFormat: {\n          const { key, value } = /** @type {ContentFormat} */ (content)\n          const startAttrValue = startAttributes.get(key) || null\n          if (endFormats.get(key) !== content || startAttrValue === value) {\n            // Either this format is overwritten or it is not necessary because the attribute already existed.\n            start.delete(transaction)\n            cleanups++\n            if (!reachedCurr && (currAttributes.get(key) || null) === value && startAttrValue !== value) {\n              if (startAttrValue === null) {\n                currAttributes.delete(key)\n              } else {\n                currAttributes.set(key, startAttrValue)\n              }\n            }\n          }\n          if (!reachedCurr && !start.deleted) {\n            updateCurrentAttributes(currAttributes, /** @type {ContentFormat} */ (content))\n          }\n          break\n        }\n      }\n    }\n    start = /** @type {Item} */ (start.right)\n  }\n  return cleanups\n}\n\n/**\n * @param {Transaction} transaction\n * @param {Item | null} item\n */\nconst cleanupContextlessFormattingGap = (transaction, item) => {\n  // iterate until item.right is null or content\n  while (item && item.right && (item.right.deleted || !item.right.countable)) {\n    item = item.right\n  }\n  const attrs = new Set()\n  // iterate back until a content item is found\n  while (item && (item.deleted || !item.countable)) {\n    if (!item.deleted && item.content.constructor === ContentFormat) {\n      const key = /** @type {ContentFormat} */ (item.content).key\n      if (attrs.has(key)) {\n        item.delete(transaction)\n      } else {\n        attrs.add(key)\n      }\n    }\n    item = item.left\n  }\n}\n\n/**\n * This function is experimental and subject to change / be removed.\n *\n * Ideally, we don't need this function at all. Formatting attributes should be cleaned up\n * automatically after each change. This function iterates twice over the complete YText type\n * and removes unnecessary formatting attributes. This is also helpful for testing.\n *\n * This function won't be exported anymore as soon as there is confidence that the YText type works as intended.\n *\n * @param {YText} type\n * @return {number} How many formatting attributes have been cleaned up.\n */\nexport const cleanupYTextFormatting = type => {\n  let res = 0\n  transact(/** @type {Doc} */ (type.doc), transaction => {\n    let start = /** @type {Item} */ (type._start)\n    let end = type._start\n    let startAttributes = map.create()\n    const currentAttributes = map.copy(startAttributes)\n    while (end) {\n      if (end.deleted === false) {\n        switch (end.content.constructor) {\n          case ContentFormat:\n            updateCurrentAttributes(currentAttributes, /** @type {ContentFormat} */ (end.content))\n            break\n          default:\n            res += cleanupFormattingGap(transaction, start, end, startAttributes, currentAttributes)\n            startAttributes = map.copy(currentAttributes)\n            start = end\n            break\n        }\n      }\n      end = end.right\n    }\n  })\n  return res\n}\n\n/**\n * @param {Transaction} transaction\n * @param {ItemTextListPosition} currPos\n * @param {number} length\n * @return {ItemTextListPosition}\n *\n * @private\n * @function\n */\nconst deleteText = (transaction, currPos, length) => {\n  const startLength = length\n  const startAttrs = map.copy(currPos.currentAttributes)\n  const start = currPos.right\n  while (length > 0 && currPos.right !== null) {\n    if (currPos.right.deleted === false) {\n      switch (currPos.right.content.constructor) {\n        case ContentType:\n        case ContentEmbed:\n        case ContentString:\n          if (length < currPos.right.length) {\n            getItemCleanStart(transaction, createID(currPos.right.id.client, currPos.right.id.clock + length))\n          }\n          length -= currPos.right.length\n          currPos.right.delete(transaction)\n          break\n      }\n    }\n    currPos.forward()\n  }\n  if (start) {\n    cleanupFormattingGap(transaction, start, currPos.right, startAttrs, currPos.currentAttributes)\n  }\n  const parent = /** @type {AbstractType<any>} */ (/** @type {Item} */ (currPos.left || currPos.right).parent)\n  if (parent._searchMarker) {\n    updateMarkerChanges(parent._searchMarker, currPos.index, -startLength + length)\n  }\n  return currPos\n}\n\n/**\n * The Quill Delta format represents changes on a text document with\n * formatting information. For mor information visit {@link https://quilljs.com/docs/delta/|Quill Delta}\n *\n * @example\n *   {\n *     ops: [\n *       { insert: 'Gandalf', attributes: { bold: true } },\n *       { insert: ' the ' },\n *       { insert: 'Grey', attributes: { color: '#cccccc' } }\n *     ]\n *   }\n *\n */\n\n/**\n  * Attributes that can be assigned to a selection of text.\n  *\n  * @example\n  *   {\n  *     bold: true,\n  *     font-size: '40px'\n  *   }\n  *\n  * @typedef {Object} TextAttributes\n  */\n\n/**\n * @extends YEvent<YText>\n * Event that describes the changes on a YText type.\n */\nexport class YTextEvent extends YEvent {\n  /**\n   * @param {YText} ytext\n   * @param {Transaction} transaction\n   * @param {Set<any>} subs The keys that changed\n   */\n  constructor (ytext, transaction, subs) {\n    super(ytext, transaction)\n    /**\n     * Whether the children changed.\n     * @type {Boolean}\n     * @private\n     */\n    this.childListChanged = false\n    /**\n     * Set of all changed attributes.\n     * @type {Set<string>}\n     */\n    this.keysChanged = new Set()\n    subs.forEach((sub) => {\n      if (sub === null) {\n        this.childListChanged = true\n      } else {\n        this.keysChanged.add(sub)\n      }\n    })\n  }\n\n  /**\n   * @type {{added:Set<Item>,deleted:Set<Item>,keys:Map<string,{action:'add'|'update'|'delete',oldValue:any}>,delta:Array<{insert?:Array<any>|string, delete?:number, retain?:number}>}}\n   */\n  get changes () {\n    if (this._changes === null) {\n      /**\n       * @type {{added:Set<Item>,deleted:Set<Item>,keys:Map<string,{action:'add'|'update'|'delete',oldValue:any}>,delta:Array<{insert?:Array<any>|string|AbstractType<any>|object, delete?:number, retain?:number}>}}\n       */\n      const changes = {\n        keys: this.keys,\n        delta: this.delta,\n        added: new Set(),\n        deleted: new Set()\n      }\n      this._changes = changes\n    }\n    return /** @type {any} */ (this._changes)\n  }\n\n  /**\n   * Compute the changes in the delta format.\n   * A {@link https://quilljs.com/docs/delta/|Quill Delta}) that represents the changes on the document.\n   *\n   * @type {Array<{insert?:string|object|AbstractType<any>, delete?:number, retain?:number, attributes?: Object<string,any>}>}\n   *\n   * @public\n   */\n  get delta () {\n    if (this._delta === null) {\n      const y = /** @type {Doc} */ (this.target.doc)\n      /**\n       * @type {Array<{insert?:string|object|AbstractType<any>, delete?:number, retain?:number, attributes?: Object<string,any>}>}\n       */\n      const delta = []\n      transact(y, transaction => {\n        const currentAttributes = new Map() // saves all current attributes for insert\n        const oldAttributes = new Map()\n        let item = this.target._start\n        /**\n         * @type {string?}\n         */\n        let action = null\n        /**\n         * @type {Object<string,any>}\n         */\n        const attributes = {} // counts added or removed new attributes for retain\n        /**\n         * @type {string|object}\n         */\n        let insert = ''\n        let retain = 0\n        let deleteLen = 0\n        const addOp = () => {\n          if (action !== null) {\n            /**\n             * @type {any}\n             */\n            let op\n            switch (action) {\n              case 'delete':\n                op = { delete: deleteLen }\n                deleteLen = 0\n                break\n              case 'insert':\n                op = { insert }\n                if (currentAttributes.size > 0) {\n                  op.attributes = {}\n                  currentAttributes.forEach((value, key) => {\n                    if (value !== null) {\n                      op.attributes[key] = value\n                    }\n                  })\n                }\n                insert = ''\n                break\n              case 'retain':\n                op = { retain }\n                if (Object.keys(attributes).length > 0) {\n                  op.attributes = {}\n                  for (const key in attributes) {\n                    op.attributes[key] = attributes[key]\n                  }\n                }\n                retain = 0\n                break\n            }\n            delta.push(op)\n            action = null\n          }\n        }\n        while (item !== null) {\n          switch (item.content.constructor) {\n            case ContentType:\n            case ContentEmbed:\n              if (this.adds(item)) {\n                if (!this.deletes(item)) {\n                  addOp()\n                  action = 'insert'\n                  insert = item.content.getContent()[0]\n                  addOp()\n                }\n              } else if (this.deletes(item)) {\n                if (action !== 'delete') {\n                  addOp()\n                  action = 'delete'\n                }\n                deleteLen += 1\n              } else if (!item.deleted) {\n                if (action !== 'retain') {\n                  addOp()\n                  action = 'retain'\n                }\n                retain += 1\n              }\n              break\n            case ContentString:\n              if (this.adds(item)) {\n                if (!this.deletes(item)) {\n                  if (action !== 'insert') {\n                    addOp()\n                    action = 'insert'\n                  }\n                  insert += /** @type {ContentString} */ (item.content).str\n                }\n              } else if (this.deletes(item)) {\n                if (action !== 'delete') {\n                  addOp()\n                  action = 'delete'\n                }\n                deleteLen += item.length\n              } else if (!item.deleted) {\n                if (action !== 'retain') {\n                  addOp()\n                  action = 'retain'\n                }\n                retain += item.length\n              }\n              break\n            case ContentFormat: {\n              const { key, value } = /** @type {ContentFormat} */ (item.content)\n              if (this.adds(item)) {\n                if (!this.deletes(item)) {\n                  const curVal = currentAttributes.get(key) || null\n                  if (!equalAttrs(curVal, value)) {\n                    if (action === 'retain') {\n                      addOp()\n                    }\n                    if (equalAttrs(value, (oldAttributes.get(key) || null))) {\n                      delete attributes[key]\n                    } else {\n                      attributes[key] = value\n                    }\n                  } else if (value !== null) {\n                    item.delete(transaction)\n                  }\n                }\n              } else if (this.deletes(item)) {\n                oldAttributes.set(key, value)\n                const curVal = currentAttributes.get(key) || null\n                if (!equalAttrs(curVal, value)) {\n                  if (action === 'retain') {\n                    addOp()\n                  }\n                  attributes[key] = curVal\n                }\n              } else if (!item.deleted) {\n                oldAttributes.set(key, value)\n                const attr = attributes[key]\n                if (attr !== undefined) {\n                  if (!equalAttrs(attr, value)) {\n                    if (action === 'retain') {\n                      addOp()\n                    }\n                    if (value === null) {\n                      delete attributes[key]\n                    } else {\n                      attributes[key] = value\n                    }\n                  } else if (attr !== null) { // this will be cleaned up automatically by the contextless cleanup function\n                    item.delete(transaction)\n                  }\n                }\n              }\n              if (!item.deleted) {\n                if (action === 'insert') {\n                  addOp()\n                }\n                updateCurrentAttributes(currentAttributes, /** @type {ContentFormat} */ (item.content))\n              }\n              break\n            }\n          }\n          item = item.right\n        }\n        addOp()\n        while (delta.length > 0) {\n          const lastOp = delta[delta.length - 1]\n          if (lastOp.retain !== undefined && lastOp.attributes === undefined) {\n            // retain delta's if they don't assign attributes\n            delta.pop()\n          } else {\n            break\n          }\n        }\n      })\n      this._delta = delta\n    }\n    return /** @type {any} */ (this._delta)\n  }\n}\n\n/**\n * Type that represents text with formatting information.\n *\n * This type replaces y-richtext as this implementation is able to handle\n * block formats (format information on a paragraph), embeds (complex elements\n * like pictures and videos), and text formats (**bold**, *italic*).\n *\n * @extends AbstractType<YTextEvent>\n */\nexport class YText extends AbstractType {\n  /**\n   * @param {String} [string] The initial value of the YText.\n   */\n  constructor (string) {\n    super()\n    /**\n     * Array of pending operations on this type\n     * @type {Array<function():void>?}\n     */\n    this._pending = string !== undefined ? [() => this.insert(0, string)] : []\n    /**\n     * @type {Array<ArraySearchMarker>}\n     */\n    this._searchMarker = []\n  }\n\n  /**\n   * Number of characters of this text type.\n   *\n   * @type {number}\n   */\n  get length () {\n    return this._length\n  }\n\n  /**\n   * @param {Doc} y\n   * @param {Item} item\n   */\n  _integrate (y, item) {\n    super._integrate(y, item)\n    try {\n      /** @type {Array<function>} */ (this._pending).forEach(f => f())\n    } catch (e) {\n      console.error(e)\n    }\n    this._pending = null\n  }\n\n  _copy () {\n    return new YText()\n  }\n\n  /**\n   * @return {YText}\n   */\n  clone () {\n    const text = new YText()\n    text.applyDelta(this.toDelta())\n    return text\n  }\n\n  /**\n   * Creates YTextEvent and calls observers.\n   *\n   * @param {Transaction} transaction\n   * @param {Set<null|string>} parentSubs Keys changed on this type. `null` if list was modified.\n   */\n  _callObserver (transaction, parentSubs) {\n    super._callObserver(transaction, parentSubs)\n    const event = new YTextEvent(this, transaction, parentSubs)\n    const doc = transaction.doc\n    callTypeObservers(this, transaction, event)\n    // If a remote change happened, we try to cleanup potential formatting duplicates.\n    if (!transaction.local) {\n      // check if another formatting item was inserted\n      let foundFormattingItem = false\n      for (const [client, afterClock] of transaction.afterState.entries()) {\n        const clock = transaction.beforeState.get(client) || 0\n        if (afterClock === clock) {\n          continue\n        }\n        iterateStructs(transaction, /** @type {Array<Item|GC>} */ (doc.store.clients.get(client)), clock, afterClock, item => {\n          if (!item.deleted && /** @type {Item} */ (item).content.constructor === ContentFormat) {\n            foundFormattingItem = true\n          }\n        })\n        if (foundFormattingItem) {\n          break\n        }\n      }\n      if (!foundFormattingItem) {\n        iterateDeletedStructs(transaction, transaction.deleteSet, item => {\n          if (item instanceof GC || foundFormattingItem) {\n            return\n          }\n          if (item.parent === this && item.content.constructor === ContentFormat) {\n            foundFormattingItem = true\n          }\n        })\n      }\n      transact(doc, (t) => {\n        if (foundFormattingItem) {\n          // If a formatting item was inserted, we simply clean the whole type.\n          // We need to compute currentAttributes for the current position anyway.\n          cleanupYTextFormatting(this)\n        } else {\n          // If no formatting attribute was inserted, we can make due with contextless\n          // formatting cleanups.\n          // Contextless: it is not necessary to compute currentAttributes for the affected position.\n          iterateDeletedStructs(t, t.deleteSet, item => {\n            if (item instanceof GC) {\n              return\n            }\n            if (item.parent === this) {\n              cleanupContextlessFormattingGap(t, item)\n            }\n          })\n        }\n      })\n    }\n  }\n\n  /**\n   * Returns the unformatted string representation of this YText type.\n   *\n   * @public\n   */\n  toString () {\n    let str = ''\n    /**\n     * @type {Item|null}\n     */\n    let n = this._start\n    while (n !== null) {\n      if (!n.deleted && n.countable && n.content.constructor === ContentString) {\n        str += /** @type {ContentString} */ (n.content).str\n      }\n      n = n.right\n    }\n    return str\n  }\n\n  /**\n   * Returns the unformatted string representation of this YText type.\n   *\n   * @return {string}\n   * @public\n   */\n  toJSON () {\n    return this.toString()\n  }\n\n  /**\n   * Apply a {@link Delta} on this shared YText type.\n   *\n   * @param {any} delta The changes to apply on this element.\n   * @param {object}  opts\n   * @param {boolean} [opts.sanitize] Sanitize input delta. Removes ending newlines if set to true.\n   *\n   *\n   * @public\n   */\n  applyDelta (delta, { sanitize = true } = {}) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        const currPos = new ItemTextListPosition(null, this._start, 0, new Map())\n        for (let i = 0; i < delta.length; i++) {\n          const op = delta[i]\n          if (op.insert !== undefined) {\n            // Quill assumes that the content starts with an empty paragraph.\n            // Yjs/Y.Text assumes that it starts empty. We always hide that\n            // there is a newline at the end of the content.\n            // If we omit this step, clients will see a different number of\n            // paragraphs, but nothing bad will happen.\n            const ins = (!sanitize && typeof op.insert === 'string' && i === delta.length - 1 && currPos.right === null && op.insert.slice(-1) === '\\n') ? op.insert.slice(0, -1) : op.insert\n            if (typeof ins !== 'string' || ins.length > 0) {\n              insertText(transaction, this, currPos, ins, op.attributes || {})\n            }\n          } else if (op.retain !== undefined) {\n            formatText(transaction, this, currPos, op.retain, op.attributes || {})\n          } else if (op.delete !== undefined) {\n            deleteText(transaction, currPos, op.delete)\n          }\n        }\n      })\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.applyDelta(delta))\n    }\n  }\n\n  /**\n   * Returns the Delta representation of this YText type.\n   *\n   * @param {Snapshot} [snapshot]\n   * @param {Snapshot} [prevSnapshot]\n   * @param {function('removed' | 'added', ID):any} [computeYChange]\n   * @return {any} The Delta representation of this type.\n   *\n   * @public\n   */\n  toDelta (snapshot, prevSnapshot, computeYChange) {\n    /**\n     * @type{Array<any>}\n     */\n    const ops = []\n    const currentAttributes = new Map()\n    const doc = /** @type {Doc} */ (this.doc)\n    let str = ''\n    let n = this._start\n    function packStr () {\n      if (str.length > 0) {\n        // pack str with attributes to ops\n        /**\n         * @type {Object<string,any>}\n         */\n        const attributes = {}\n        let addAttributes = false\n        currentAttributes.forEach((value, key) => {\n          addAttributes = true\n          attributes[key] = value\n        })\n        /**\n         * @type {Object<string,any>}\n         */\n        const op = { insert: str }\n        if (addAttributes) {\n          op.attributes = attributes\n        }\n        ops.push(op)\n        str = ''\n      }\n    }\n    const computeDelta = () => {\n      while (n !== null) {\n        if (isVisible(n, snapshot) || (prevSnapshot !== undefined && isVisible(n, prevSnapshot))) {\n          switch (n.content.constructor) {\n            case ContentString: {\n              const cur = currentAttributes.get('ychange')\n              if (snapshot !== undefined && !isVisible(n, snapshot)) {\n                if (cur === undefined || cur.user !== n.id.client || cur.type !== 'removed') {\n                  packStr()\n                  currentAttributes.set('ychange', computeYChange ? computeYChange('removed', n.id) : { type: 'removed' })\n                }\n              } else if (prevSnapshot !== undefined && !isVisible(n, prevSnapshot)) {\n                if (cur === undefined || cur.user !== n.id.client || cur.type !== 'added') {\n                  packStr()\n                  currentAttributes.set('ychange', computeYChange ? computeYChange('added', n.id) : { type: 'added' })\n                }\n              } else if (cur !== undefined) {\n                packStr()\n                currentAttributes.delete('ychange')\n              }\n              str += /** @type {ContentString} */ (n.content).str\n              break\n            }\n            case ContentType:\n            case ContentEmbed: {\n              packStr()\n              /**\n               * @type {Object<string,any>}\n               */\n              const op = {\n                insert: n.content.getContent()[0]\n              }\n              if (currentAttributes.size > 0) {\n                const attrs = /** @type {Object<string,any>} */ ({})\n                op.attributes = attrs\n                currentAttributes.forEach((value, key) => {\n                  attrs[key] = value\n                })\n              }\n              ops.push(op)\n              break\n            }\n            case ContentFormat:\n              if (isVisible(n, snapshot)) {\n                packStr()\n                updateCurrentAttributes(currentAttributes, /** @type {ContentFormat} */ (n.content))\n              }\n              break\n          }\n        }\n        n = n.right\n      }\n      packStr()\n    }\n    if (snapshot || prevSnapshot) {\n      // snapshots are merged again after the transaction, so we need to keep the\n      // transaction alive until we are done\n      transact(doc, transaction => {\n        if (snapshot) {\n          splitSnapshotAffectedStructs(transaction, snapshot)\n        }\n        if (prevSnapshot) {\n          splitSnapshotAffectedStructs(transaction, prevSnapshot)\n        }\n        computeDelta()\n      }, 'cleanup')\n    } else {\n      computeDelta()\n    }\n    return ops\n  }\n\n  /**\n   * Insert text at a given index.\n   *\n   * @param {number} index The index at which to start inserting.\n   * @param {String} text The text to insert at the specified position.\n   * @param {TextAttributes} [attributes] Optionally define some formatting\n   *                                    information to apply on the inserted\n   *                                    Text.\n   * @public\n   */\n  insert (index, text, attributes) {\n    if (text.length <= 0) {\n      return\n    }\n    const y = this.doc\n    if (y !== null) {\n      transact(y, transaction => {\n        const pos = findPosition(transaction, this, index)\n        if (!attributes) {\n          attributes = {}\n          // @ts-ignore\n          pos.currentAttributes.forEach((v, k) => { attributes[k] = v })\n        }\n        insertText(transaction, this, pos, text, attributes)\n      })\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.insert(index, text, attributes))\n    }\n  }\n\n  /**\n   * Inserts an embed at a index.\n   *\n   * @param {number} index The index to insert the embed at.\n   * @param {Object | AbstractType<any>} embed The Object that represents the embed.\n   * @param {TextAttributes} attributes Attribute information to apply on the\n   *                                    embed\n   *\n   * @public\n   */\n  insertEmbed (index, embed, attributes = {}) {\n    const y = this.doc\n    if (y !== null) {\n      transact(y, transaction => {\n        const pos = findPosition(transaction, this, index)\n        insertText(transaction, this, pos, embed, attributes)\n      })\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.insertEmbed(index, embed, attributes))\n    }\n  }\n\n  /**\n   * Deletes text starting from an index.\n   *\n   * @param {number} index Index at which to start deleting.\n   * @param {number} length The number of characters to remove. Defaults to 1.\n   *\n   * @public\n   */\n  delete (index, length) {\n    if (length === 0) {\n      return\n    }\n    const y = this.doc\n    if (y !== null) {\n      transact(y, transaction => {\n        deleteText(transaction, findPosition(transaction, this, index), length)\n      })\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.delete(index, length))\n    }\n  }\n\n  /**\n   * Assigns properties to a range of text.\n   *\n   * @param {number} index The position where to start formatting.\n   * @param {number} length The amount of characters to assign properties to.\n   * @param {TextAttributes} attributes Attribute information to apply on the\n   *                                    text.\n   *\n   * @public\n   */\n  format (index, length, attributes) {\n    if (length === 0) {\n      return\n    }\n    const y = this.doc\n    if (y !== null) {\n      transact(y, transaction => {\n        const pos = findPosition(transaction, this, index)\n        if (pos.right === null) {\n          return\n        }\n        formatText(transaction, this, pos, length, attributes)\n      })\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.format(index, length, attributes))\n    }\n  }\n\n  /**\n   * Removes an attribute.\n   *\n   * @note Xml-Text nodes don't have attributes. You can use this feature to assign properties to complete text-blocks.\n   *\n   * @param {String} attributeName The attribute name that is to be removed.\n   *\n   * @public\n   */\n  removeAttribute (attributeName) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeMapDelete(transaction, this, attributeName)\n      })\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.removeAttribute(attributeName))\n    }\n  }\n\n  /**\n   * Sets or updates an attribute.\n   *\n   * @note Xml-Text nodes don't have attributes. You can use this feature to assign properties to complete text-blocks.\n   *\n   * @param {String} attributeName The attribute name that is to be set.\n   * @param {any} attributeValue The attribute value that is to be set.\n   *\n   * @public\n   */\n  setAttribute (attributeName, attributeValue) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeMapSet(transaction, this, attributeName, attributeValue)\n      })\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.setAttribute(attributeName, attributeValue))\n    }\n  }\n\n  /**\n   * Returns an attribute value that belongs to the attribute name.\n   *\n   * @note Xml-Text nodes don't have attributes. You can use this feature to assign properties to complete text-blocks.\n   *\n   * @param {String} attributeName The attribute name that identifies the\n   *                               queried value.\n   * @return {any} The queried attribute value.\n   *\n   * @public\n   */\n  getAttribute (attributeName) {\n    return /** @type {any} */ (typeMapGet(this, attributeName))\n  }\n\n  /**\n   * Returns all attribute name/value pairs in a JSON Object.\n   *\n   * @note Xml-Text nodes don't have attributes. You can use this feature to assign properties to complete text-blocks.\n   *\n   * @return {Object<string, any>} A JSON Object that describes the attributes.\n   *\n   * @public\n   */\n  getAttributes () {\n    return typeMapGetAll(this)\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   */\n  _write (encoder) {\n    encoder.writeTypeRef(YTextRefID)\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} _decoder\n * @return {YText}\n *\n * @private\n * @function\n */\nexport const readYText = _decoder => new YText()\n","/**\n * @module YXml\n */\n\nimport {\n  YXmlEvent,\n  YXmlElement,\n  AbstractType,\n  typeListMap,\n  typeListForEach,\n  typeListInsertGenerics,\n  typeListInsertGenericsAfter,\n  typeListDelete,\n  typeListToArray,\n  YXmlFragmentRefID,\n  callTypeObservers,\n  transact,\n  typeListGet,\n  typeListSlice,\n  UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, Doc, ContentType, Transaction, Item, YXmlText, YXmlHook // eslint-disable-line\n} from '../internals.js'\n\nimport * as error from 'lib0/error'\nimport * as array from 'lib0/array'\n\n/**\n * Define the elements to which a set of CSS queries apply.\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Selectors|CSS_Selectors}\n *\n * @example\n *   query = '.classSelector'\n *   query = 'nodeSelector'\n *   query = '#idSelector'\n *\n * @typedef {string} CSS_Selector\n */\n\n/**\n * Dom filter function.\n *\n * @callback domFilter\n * @param {string} nodeName The nodeName of the element\n * @param {Map} attributes The map of attributes.\n * @return {boolean} Whether to include the Dom node in the YXmlElement.\n */\n\n/**\n * Represents a subset of the nodes of a YXmlElement / YXmlFragment and a\n * position within them.\n *\n * Can be created with {@link YXmlFragment#createTreeWalker}\n *\n * @public\n * @implements {Iterable<YXmlElement|YXmlText|YXmlElement|YXmlHook>}\n */\nexport class YXmlTreeWalker {\n  /**\n   * @param {YXmlFragment | YXmlElement} root\n   * @param {function(AbstractType<any>):boolean} [f]\n   */\n  constructor (root, f = () => true) {\n    this._filter = f\n    this._root = root\n    /**\n     * @type {Item}\n     */\n    this._currentNode = /** @type {Item} */ (root._start)\n    this._firstCall = true\n  }\n\n  [Symbol.iterator] () {\n    return this\n  }\n\n  /**\n   * Get the next node.\n   *\n   * @return {IteratorResult<YXmlElement|YXmlText|YXmlHook>} The next node.\n   *\n   * @public\n   */\n  next () {\n    /**\n     * @type {Item|null}\n     */\n    let n = this._currentNode\n    let type = n && n.content && /** @type {any} */ (n.content).type\n    if (n !== null && (!this._firstCall || n.deleted || !this._filter(type))) { // if first call, we check if we can use the first item\n      do {\n        type = /** @type {any} */ (n.content).type\n        if (!n.deleted && (type.constructor === YXmlElement || type.constructor === YXmlFragment) && type._start !== null) {\n          // walk down in the tree\n          n = type._start\n        } else {\n          // walk right or up in the tree\n          while (n !== null) {\n            if (n.right !== null) {\n              n = n.right\n              break\n            } else if (n.parent === this._root) {\n              n = null\n            } else {\n              n = /** @type {AbstractType<any>} */ (n.parent)._item\n            }\n          }\n        }\n      } while (n !== null && (n.deleted || !this._filter(/** @type {ContentType} */ (n.content).type)))\n    }\n    this._firstCall = false\n    if (n === null) {\n      // @ts-ignore\n      return { value: undefined, done: true }\n    }\n    this._currentNode = n\n    return { value: /** @type {any} */ (n.content).type, done: false }\n  }\n}\n\n/**\n * Represents a list of {@link YXmlElement}.and {@link YXmlText} types.\n * A YxmlFragment is similar to a {@link YXmlElement}, but it does not have a\n * nodeName and it does not have attributes. Though it can be bound to a DOM\n * element - in this case the attributes and the nodeName are not shared.\n *\n * @public\n * @extends AbstractType<YXmlEvent>\n */\nexport class YXmlFragment extends AbstractType {\n  constructor () {\n    super()\n    /**\n     * @type {Array<any>|null}\n     */\n    this._prelimContent = []\n  }\n\n  /**\n   * @type {YXmlElement|YXmlText|null}\n   */\n  get firstChild () {\n    const first = this._first\n    return first ? first.content.getContent()[0] : null\n  }\n\n  /**\n   * Integrate this type into the Yjs instance.\n   *\n   * * Save this struct in the os\n   * * This type is sent to other client\n   * * Observer functions are fired\n   *\n   * @param {Doc} y The Yjs instance\n   * @param {Item} item\n   */\n  _integrate (y, item) {\n    super._integrate(y, item)\n    this.insert(0, /** @type {Array<any>} */ (this._prelimContent))\n    this._prelimContent = null\n  }\n\n  _copy () {\n    return new YXmlFragment()\n  }\n\n  /**\n   * @return {YXmlFragment}\n   */\n  clone () {\n    const el = new YXmlFragment()\n    // @ts-ignore\n    el.insert(0, this.toArray().map(item => item instanceof AbstractType ? item.clone() : item))\n    return el\n  }\n\n  get length () {\n    return this._prelimContent === null ? this._length : this._prelimContent.length\n  }\n\n  /**\n   * Create a subtree of childNodes.\n   *\n   * @example\n   * const walker = elem.createTreeWalker(dom => dom.nodeName === 'div')\n   * for (let node in walker) {\n   *   // `node` is a div node\n   *   nop(node)\n   * }\n   *\n   * @param {function(AbstractType<any>):boolean} filter Function that is called on each child element and\n   *                          returns a Boolean indicating whether the child\n   *                          is to be included in the subtree.\n   * @return {YXmlTreeWalker} A subtree and a position within it.\n   *\n   * @public\n   */\n  createTreeWalker (filter) {\n    return new YXmlTreeWalker(this, filter)\n  }\n\n  /**\n   * Returns the first YXmlElement that matches the query.\n   * Similar to DOM's {@link querySelector}.\n   *\n   * Query support:\n   *   - tagname\n   * TODO:\n   *   - id\n   *   - attribute\n   *\n   * @param {CSS_Selector} query The query on the children.\n   * @return {YXmlElement|YXmlText|YXmlHook|null} The first element that matches the query or null.\n   *\n   * @public\n   */\n  querySelector (query) {\n    query = query.toUpperCase()\n    // @ts-ignore\n    const iterator = new YXmlTreeWalker(this, element => element.nodeName && element.nodeName.toUpperCase() === query)\n    const next = iterator.next()\n    if (next.done) {\n      return null\n    } else {\n      return next.value\n    }\n  }\n\n  /**\n   * Returns all YXmlElements that match the query.\n   * Similar to Dom's {@link querySelectorAll}.\n   *\n   * @todo Does not yet support all queries. Currently only query by tagName.\n   *\n   * @param {CSS_Selector} query The query on the children\n   * @return {Array<YXmlElement|YXmlText|YXmlHook|null>} The elements that match this query.\n   *\n   * @public\n   */\n  querySelectorAll (query) {\n    query = query.toUpperCase()\n    // @ts-ignore\n    return array.from(new YXmlTreeWalker(this, element => element.nodeName && element.nodeName.toUpperCase() === query))\n  }\n\n  /**\n   * Creates YXmlEvent and calls observers.\n   *\n   * @param {Transaction} transaction\n   * @param {Set<null|string>} parentSubs Keys changed on this type. `null` if list was modified.\n   */\n  _callObserver (transaction, parentSubs) {\n    callTypeObservers(this, transaction, new YXmlEvent(this, parentSubs, transaction))\n  }\n\n  /**\n   * Get the string representation of all the children of this YXmlFragment.\n   *\n   * @return {string} The string representation of all children.\n   */\n  toString () {\n    return typeListMap(this, xml => xml.toString()).join('')\n  }\n\n  /**\n   * @return {string}\n   */\n  toJSON () {\n    return this.toString()\n  }\n\n  /**\n   * Creates a Dom Element that mirrors this YXmlElement.\n   *\n   * @param {Document} [_document=document] The document object (you must define\n   *                                        this when calling this method in\n   *                                        nodejs)\n   * @param {Object<string, any>} [hooks={}] Optional property to customize how hooks\n   *                                             are presented in the DOM\n   * @param {any} [binding] You should not set this property. This is\n   *                               used if DomBinding wants to create a\n   *                               association to the created DOM type.\n   * @return {Node} The {@link https://developer.mozilla.org/en-US/docs/Web/API/Element|Dom Element}\n   *\n   * @public\n   */\n  toDOM (_document = document, hooks = {}, binding) {\n    const fragment = _document.createDocumentFragment()\n    if (binding !== undefined) {\n      binding._createAssociation(fragment, this)\n    }\n    typeListForEach(this, xmlType => {\n      fragment.insertBefore(xmlType.toDOM(_document, hooks, binding), null)\n    })\n    return fragment\n  }\n\n  /**\n   * Inserts new content at an index.\n   *\n   * @example\n   *  // Insert character 'a' at position 0\n   *  xml.insert(0, [new Y.XmlText('text')])\n   *\n   * @param {number} index The index to insert content at\n   * @param {Array<YXmlElement|YXmlText>} content The array of content\n   */\n  insert (index, content) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeListInsertGenerics(transaction, this, index, content)\n      })\n    } else {\n      // @ts-ignore _prelimContent is defined because this is not yet integrated\n      this._prelimContent.splice(index, 0, ...content)\n    }\n  }\n\n  /**\n   * Inserts new content at an index.\n   *\n   * @example\n   *  // Insert character 'a' at position 0\n   *  xml.insert(0, [new Y.XmlText('text')])\n   *\n   * @param {null|Item|YXmlElement|YXmlText} ref The index to insert content at\n   * @param {Array<YXmlElement|YXmlText>} content The array of content\n   */\n  insertAfter (ref, content) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        const refItem = (ref && ref instanceof AbstractType) ? ref._item : ref\n        typeListInsertGenericsAfter(transaction, this, refItem, content)\n      })\n    } else {\n      const pc = /** @type {Array<any>} */ (this._prelimContent)\n      const index = ref === null ? 0 : pc.findIndex(el => el === ref) + 1\n      if (index === 0 && ref !== null) {\n        throw error.create('Reference item not found')\n      }\n      pc.splice(index, 0, ...content)\n    }\n  }\n\n  /**\n   * Deletes elements starting from an index.\n   *\n   * @param {number} index Index at which to start deleting elements\n   * @param {number} [length=1] The number of elements to remove. Defaults to 1.\n   */\n  delete (index, length = 1) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeListDelete(transaction, this, index, length)\n      })\n    } else {\n      // @ts-ignore _prelimContent is defined because this is not yet integrated\n      this._prelimContent.splice(index, length)\n    }\n  }\n\n  /**\n   * Transforms this YArray to a JavaScript Array.\n   *\n   * @return {Array<YXmlElement|YXmlText|YXmlHook>}\n   */\n  toArray () {\n    return typeListToArray(this)\n  }\n\n  /**\n   * Appends content to this YArray.\n   *\n   * @param {Array<YXmlElement|YXmlText>} content Array of content to append.\n   */\n  push (content) {\n    this.insert(this.length, content)\n  }\n\n  /**\n   * Preppends content to this YArray.\n   *\n   * @param {Array<YXmlElement|YXmlText>} content Array of content to preppend.\n   */\n  unshift (content) {\n    this.insert(0, content)\n  }\n\n  /**\n   * Returns the i-th element from a YArray.\n   *\n   * @param {number} index The index of the element to return from the YArray\n   * @return {YXmlElement|YXmlText}\n   */\n  get (index) {\n    return typeListGet(this, index)\n  }\n\n  /**\n   * Transforms this YArray to a JavaScript Array.\n   *\n   * @param {number} [start]\n   * @param {number} [end]\n   * @return {Array<YXmlElement|YXmlText>}\n   */\n  slice (start = 0, end = this.length) {\n    return typeListSlice(this, start, end)\n  }\n\n  /**\n   * Executes a provided function on once on overy child element.\n   *\n   * @param {function(YXmlElement|YXmlText,number, typeof self):void} f A function to execute on every element of this YArray.\n   */\n  forEach (f) {\n    typeListForEach(this, f)\n  }\n\n  /**\n   * Transform the properties of this type to binary and write it to an\n   * BinaryEncoder.\n   *\n   * This is called when this Item is sent to a remote peer.\n   *\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder The encoder to write data to.\n   */\n  _write (encoder) {\n    encoder.writeTypeRef(YXmlFragmentRefID)\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} _decoder\n * @return {YXmlFragment}\n *\n * @private\n * @function\n */\nexport const readYXmlFragment = _decoder => new YXmlFragment()\n","\nimport {\n  YXmlFragment,\n  transact,\n  typeMapDelete,\n  typeMapHas,\n  typeMapSet,\n  typeMapGet,\n  typeMapGetAll,\n  typeListForEach,\n  YXmlElementRefID,\n  YXmlText, ContentType, AbstractType, UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, Doc, Item // eslint-disable-line\n} from '../internals.js'\n\n/**\n * An YXmlElement imitates the behavior of a\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/Element|Dom Element}.\n *\n * * An YXmlElement has attributes (key value pairs)\n * * An YXmlElement has childElements that must inherit from YXmlElement\n */\nexport class YXmlElement extends YXmlFragment {\n  constructor (nodeName = 'UNDEFINED') {\n    super()\n    this.nodeName = nodeName\n    /**\n     * @type {Map<string, any>|null}\n     */\n    this._prelimAttrs = new Map()\n  }\n\n  /**\n   * @type {YXmlElement|YXmlText|null}\n   */\n  get nextSibling () {\n    const n = this._item ? this._item.next : null\n    return n ? /** @type {YXmlElement|YXmlText} */ (/** @type {ContentType} */ (n.content).type) : null\n  }\n\n  /**\n   * @type {YXmlElement|YXmlText|null}\n   */\n  get prevSibling () {\n    const n = this._item ? this._item.prev : null\n    return n ? /** @type {YXmlElement|YXmlText} */ (/** @type {ContentType} */ (n.content).type) : null\n  }\n\n  /**\n   * Integrate this type into the Yjs instance.\n   *\n   * * Save this struct in the os\n   * * This type is sent to other client\n   * * Observer functions are fired\n   *\n   * @param {Doc} y The Yjs instance\n   * @param {Item} item\n   */\n  _integrate (y, item) {\n    super._integrate(y, item)\n    ;(/** @type {Map<string, any>} */ (this._prelimAttrs)).forEach((value, key) => {\n      this.setAttribute(key, value)\n    })\n    this._prelimAttrs = null\n  }\n\n  /**\n   * Creates an Item with the same effect as this Item (without position effect)\n   *\n   * @return {YXmlElement}\n   */\n  _copy () {\n    return new YXmlElement(this.nodeName)\n  }\n\n  /**\n   * @return {YXmlElement}\n   */\n  clone () {\n    const el = new YXmlElement(this.nodeName)\n    const attrs = this.getAttributes()\n    for (const key in attrs) {\n      el.setAttribute(key, attrs[key])\n    }\n    // @ts-ignore\n    el.insert(0, this.toArray().map(item => item instanceof AbstractType ? item.clone() : item))\n    return el\n  }\n\n  /**\n   * Returns the XML serialization of this YXmlElement.\n   * The attributes are ordered by attribute-name, so you can easily use this\n   * method to compare YXmlElements\n   *\n   * @return {string} The string representation of this type.\n   *\n   * @public\n   */\n  toString () {\n    const attrs = this.getAttributes()\n    const stringBuilder = []\n    const keys = []\n    for (const key in attrs) {\n      keys.push(key)\n    }\n    keys.sort()\n    const keysLen = keys.length\n    for (let i = 0; i < keysLen; i++) {\n      const key = keys[i]\n      stringBuilder.push(key + '=\"' + attrs[key] + '\"')\n    }\n    const nodeName = this.nodeName.toLocaleLowerCase()\n    const attrsString = stringBuilder.length > 0 ? ' ' + stringBuilder.join(' ') : ''\n    return `<${nodeName}${attrsString}>${super.toString()}</${nodeName}>`\n  }\n\n  /**\n   * Removes an attribute from this YXmlElement.\n   *\n   * @param {String} attributeName The attribute name that is to be removed.\n   *\n   * @public\n   */\n  removeAttribute (attributeName) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeMapDelete(transaction, this, attributeName)\n      })\n    } else {\n      /** @type {Map<string,any>} */ (this._prelimAttrs).delete(attributeName)\n    }\n  }\n\n  /**\n   * Sets or updates an attribute.\n   *\n   * @param {String} attributeName The attribute name that is to be set.\n   * @param {String} attributeValue The attribute value that is to be set.\n   *\n   * @public\n   */\n  setAttribute (attributeName, attributeValue) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeMapSet(transaction, this, attributeName, attributeValue)\n      })\n    } else {\n      /** @type {Map<string, any>} */ (this._prelimAttrs).set(attributeName, attributeValue)\n    }\n  }\n\n  /**\n   * Returns an attribute value that belongs to the attribute name.\n   *\n   * @param {String} attributeName The attribute name that identifies the\n   *                               queried value.\n   * @return {String} The queried attribute value.\n   *\n   * @public\n   */\n  getAttribute (attributeName) {\n    return /** @type {any} */ (typeMapGet(this, attributeName))\n  }\n\n  /**\n   * Returns whether an attribute exists\n   *\n   * @param {String} attributeName The attribute name to check for existence.\n   * @return {boolean} whether the attribute exists.\n   *\n   * @public\n   */\n  hasAttribute (attributeName) {\n    return /** @type {any} */ (typeMapHas(this, attributeName))\n  }\n\n  /**\n   * Returns all attribute name/value pairs in a JSON Object.\n   *\n   * @return {Object<string, any>} A JSON Object that describes the attributes.\n   *\n   * @public\n   */\n  getAttributes () {\n    return typeMapGetAll(this)\n  }\n\n  /**\n   * Creates a Dom Element that mirrors this YXmlElement.\n   *\n   * @param {Document} [_document=document] The document object (you must define\n   *                                        this when calling this method in\n   *                                        nodejs)\n   * @param {Object<string, any>} [hooks={}] Optional property to customize how hooks\n   *                                             are presented in the DOM\n   * @param {any} [binding] You should not set this property. This is\n   *                               used if DomBinding wants to create a\n   *                               association to the created DOM type.\n   * @return {Node} The {@link https://developer.mozilla.org/en-US/docs/Web/API/Element|Dom Element}\n   *\n   * @public\n   */\n  toDOM (_document = document, hooks = {}, binding) {\n    const dom = _document.createElement(this.nodeName)\n    const attrs = this.getAttributes()\n    for (const key in attrs) {\n      dom.setAttribute(key, attrs[key])\n    }\n    typeListForEach(this, yxml => {\n      dom.appendChild(yxml.toDOM(_document, hooks, binding))\n    })\n    if (binding !== undefined) {\n      binding._createAssociation(dom, this)\n    }\n    return dom\n  }\n\n  /**\n   * Transform the properties of this type to binary and write it to an\n   * BinaryEncoder.\n   *\n   * This is called when this Item is sent to a remote peer.\n   *\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder The encoder to write data to.\n   */\n  _write (encoder) {\n    encoder.writeTypeRef(YXmlElementRefID)\n    encoder.writeKey(this.nodeName)\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {YXmlElement}\n *\n * @function\n */\nexport const readYXmlElement = decoder => new YXmlElement(decoder.readKey())\n","\nimport {\n  YEvent,\n  YXmlText, YXmlElement, YXmlFragment, Transaction // eslint-disable-line\n} from '../internals.js'\n\n/**\n * @extends YEvent<YXmlElement|YXmlText|YXmlFragment>\n * An Event that describes changes on a YXml Element or Yxml Fragment\n */\nexport class YXmlEvent extends YEvent {\n  /**\n   * @param {YXmlElement|YXmlText|YXmlFragment} target The target on which the event is created.\n   * @param {Set<string|null>} subs The set of changed attributes. `null` is included if the\n   *                   child list changed.\n   * @param {Transaction} transaction The transaction instance with wich the\n   *                                  change was created.\n   */\n  constructor (target, subs, transaction) {\n    super(target, transaction)\n    /**\n     * Whether the children changed.\n     * @type {Boolean}\n     * @private\n     */\n    this.childListChanged = false\n    /**\n     * Set of all changed attributes.\n     * @type {Set<string>}\n     */\n    this.attributesChanged = new Set()\n    subs.forEach((sub) => {\n      if (sub === null) {\n        this.childListChanged = true\n      } else {\n        this.attributesChanged.add(sub)\n      }\n    })\n  }\n}\n","\nimport {\n  YMap,\n  YXmlHookRefID,\n  UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2 // eslint-disable-line\n} from '../internals.js'\n\n/**\n * You can manage binding to a custom type with YXmlHook.\n *\n * @extends {YMap<any>}\n */\nexport class YXmlHook extends YMap {\n  /**\n   * @param {string} hookName nodeName of the Dom Node.\n   */\n  constructor (hookName) {\n    super()\n    /**\n     * @type {string}\n     */\n    this.hookName = hookName\n  }\n\n  /**\n   * Creates an Item with the same effect as this Item (without position effect)\n   */\n  _copy () {\n    return new YXmlHook(this.hookName)\n  }\n\n  /**\n   * @return {YXmlHook}\n   */\n  clone () {\n    const el = new YXmlHook(this.hookName)\n    this.forEach((value, key) => {\n      el.set(key, value)\n    })\n    return el\n  }\n\n  /**\n   * Creates a Dom Element that mirrors this YXmlElement.\n   *\n   * @param {Document} [_document=document] The document object (you must define\n   *                                        this when calling this method in\n   *                                        nodejs)\n   * @param {Object.<string, any>} [hooks] Optional property to customize how hooks\n   *                                             are presented in the DOM\n   * @param {any} [binding] You should not set this property. This is\n   *                               used if DomBinding wants to create a\n   *                               association to the created DOM type\n   * @return {Element} The {@link https://developer.mozilla.org/en-US/docs/Web/API/Element|Dom Element}\n   *\n   * @public\n   */\n  toDOM (_document = document, hooks = {}, binding) {\n    const hook = hooks[this.hookName]\n    let dom\n    if (hook !== undefined) {\n      dom = hook.createDom(this)\n    } else {\n      dom = document.createElement(this.hookName)\n    }\n    dom.setAttribute('data-yjs-hook', this.hookName)\n    if (binding !== undefined) {\n      binding._createAssociation(dom, this)\n    }\n    return dom\n  }\n\n  /**\n   * Transform the properties of this type to binary and write it to an\n   * BinaryEncoder.\n   *\n   * This is called when this Item is sent to a remote peer.\n   *\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder The encoder to write data to.\n   */\n  _write (encoder) {\n    encoder.writeTypeRef(YXmlHookRefID)\n    encoder.writeKey(this.hookName)\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {YXmlHook}\n *\n * @private\n * @function\n */\nexport const readYXmlHook = decoder =>\n  new YXmlHook(decoder.readKey())\n","\nimport {\n  YText,\n  YXmlTextRefID,\n  ContentType, YXmlElement, UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, // eslint-disable-line\n} from '../internals.js'\n\n/**\n * Represents text in a Dom Element. In the future this type will also handle\n * simple formatting information like bold and italic.\n */\nexport class YXmlText extends YText {\n  /**\n   * @type {YXmlElement|YXmlText|null}\n   */\n  get nextSibling () {\n    const n = this._item ? this._item.next : null\n    return n ? /** @type {YXmlElement|YXmlText} */ (/** @type {ContentType} */ (n.content).type) : null\n  }\n\n  /**\n   * @type {YXmlElement|YXmlText|null}\n   */\n  get prevSibling () {\n    const n = this._item ? this._item.prev : null\n    return n ? /** @type {YXmlElement|YXmlText} */ (/** @type {ContentType} */ (n.content).type) : null\n  }\n\n  _copy () {\n    return new YXmlText()\n  }\n\n  /**\n   * @return {YXmlText}\n   */\n  clone () {\n    const text = new YXmlText()\n    text.applyDelta(this.toDelta())\n    return text\n  }\n\n  /**\n   * Creates a Dom Element that mirrors this YXmlText.\n   *\n   * @param {Document} [_document=document] The document object (you must define\n   *                                        this when calling this method in\n   *                                        nodejs)\n   * @param {Object<string, any>} [hooks] Optional property to customize how hooks\n   *                                             are presented in the DOM\n   * @param {any} [binding] You should not set this property. This is\n   *                               used if DomBinding wants to create a\n   *                               association to the created DOM type.\n   * @return {Text} The {@link https://developer.mozilla.org/en-US/docs/Web/API/Element|Dom Element}\n   *\n   * @public\n   */\n  toDOM (_document = document, hooks, binding) {\n    const dom = _document.createTextNode(this.toString())\n    if (binding !== undefined) {\n      binding._createAssociation(dom, this)\n    }\n    return dom\n  }\n\n  toString () {\n    // @ts-ignore\n    return this.toDelta().map(delta => {\n      const nestedNodes = []\n      for (const nodeName in delta.attributes) {\n        const attrs = []\n        for (const key in delta.attributes[nodeName]) {\n          attrs.push({ key, value: delta.attributes[nodeName][key] })\n        }\n        // sort attributes to get a unique order\n        attrs.sort((a, b) => a.key < b.key ? -1 : 1)\n        nestedNodes.push({ nodeName, attrs })\n      }\n      // sort node order to get a unique order\n      nestedNodes.sort((a, b) => a.nodeName < b.nodeName ? -1 : 1)\n      // now convert to dom string\n      let str = ''\n      for (let i = 0; i < nestedNodes.length; i++) {\n        const node = nestedNodes[i]\n        str += `<${node.nodeName}`\n        for (let j = 0; j < node.attrs.length; j++) {\n          const attr = node.attrs[j]\n          str += ` ${attr.key}=\"${attr.value}\"`\n        }\n        str += '>'\n      }\n      str += delta.insert\n      for (let i = nestedNodes.length - 1; i >= 0; i--) {\n        str += `</${nestedNodes[i].nodeName}>`\n      }\n      return str\n    }).join('')\n  }\n\n  /**\n   * @return {string}\n   */\n  toJSON () {\n    return this.toString()\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   */\n  _write (encoder) {\n    encoder.writeTypeRef(YXmlTextRefID)\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {YXmlText}\n *\n * @private\n * @function\n */\nexport const readYXmlText = decoder => new YXmlText()\n","\nimport {\n  UpdateEncoderV1, UpdateEncoderV2, ID, Transaction // eslint-disable-line\n} from '../internals.js'\n\nimport * as error from 'lib0/error'\n\nexport class AbstractStruct {\n  /**\n   * @param {ID} id\n   * @param {number} length\n   */\n  constructor (id, length) {\n    this.id = id\n    this.length = length\n  }\n\n  /**\n   * @type {boolean}\n   */\n  get deleted () {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * Merge this struct with the item to the right.\n   * This method is already assuming that `this.id.clock + this.length === this.id.clock`.\n   * Also this method does *not* remove right from StructStore!\n   * @param {AbstractStruct} right\n   * @return {boolean} wether this merged with right\n   */\n  mergeWith (right) {\n    return false\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder The encoder to write data to.\n   * @param {number} offset\n   * @param {number} encodingRef\n   */\n  write (encoder, offset, encodingRef) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {number} offset\n   */\n  integrate (transaction, offset) {\n    throw error.methodUnimplemented()\n  }\n}\n","\nimport {\n  AbstractStruct,\n  addStruct,\n  UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, StructStore, Transaction, ID // eslint-disable-line\n} from '../internals.js'\n\nexport const structGCRefNumber = 0\n\n/**\n * @private\n */\nexport class GC extends AbstractStruct {\n  get deleted () {\n    return true\n  }\n\n  delete () {}\n\n  /**\n   * @param {GC} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    if (this.constructor !== right.constructor) {\n      return false\n    }\n    this.length += right.length\n    return true\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {number} offset\n   */\n  integrate (transaction, offset) {\n    if (offset > 0) {\n      this.id.clock += offset\n      this.length -= offset\n    }\n    addStruct(transaction.doc.store, this)\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeInfo(structGCRefNumber)\n    encoder.writeLen(this.length - offset)\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {StructStore} store\n   * @return {null | number}\n   */\n  getMissing (transaction, store) {\n    return null\n  }\n}\n","import {\n  UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, StructStore, Item, Transaction // eslint-disable-line\n} from '../internals.js'\n\nimport * as error from 'lib0/error'\n\nexport class ContentBinary {\n  /**\n   * @param {Uint8Array} content\n   */\n  constructor (content) {\n    this.content = content\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return 1\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return [this.content]\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n\n  /**\n   * @return {ContentBinary}\n   */\n  copy () {\n    return new ContentBinary(this.content)\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentBinary}\n   */\n  splice (offset) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {ContentBinary} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    return false\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {}\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeBuf(this.content)\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 3\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2 } decoder\n * @return {ContentBinary}\n */\nexport const readContentBinary = decoder => new ContentBinary(decoder.readBuf())\n","\nimport {\n  addToDeleteSet,\n  UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, StructStore, Item, Transaction // eslint-disable-line\n} from '../internals.js'\n\nexport class ContentDeleted {\n  /**\n   * @param {number} len\n   */\n  constructor (len) {\n    this.len = len\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return this.len\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return []\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return false\n  }\n\n  /**\n   * @return {ContentDeleted}\n   */\n  copy () {\n    return new ContentDeleted(this.len)\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentDeleted}\n   */\n  splice (offset) {\n    const right = new ContentDeleted(this.len - offset)\n    this.len = offset\n    return right\n  }\n\n  /**\n   * @param {ContentDeleted} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    this.len += right.len\n    return true\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {\n    addToDeleteSet(transaction.deleteSet, item.id.client, item.id.clock, this.len)\n    item.markDeleted()\n  }\n\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeLen(this.len - offset)\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 1\n  }\n}\n\n/**\n * @private\n *\n * @param {UpdateDecoderV1 | UpdateDecoderV2 } decoder\n * @return {ContentDeleted}\n */\nexport const readContentDeleted = decoder => new ContentDeleted(decoder.readLen())\n","\nimport {\n  Doc, UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, StructStore, Transaction, Item // eslint-disable-line\n} from '../internals.js'\n\nimport * as error from 'lib0/error'\n\n/**\n * @param {string} guid\n * @param {Object<string, any>} opts\n */\nconst createDocFromOpts = (guid, opts) => new Doc({ guid, ...opts, shouldLoad: opts.shouldLoad || opts.autoLoad || false })\n\n/**\n * @private\n */\nexport class ContentDoc {\n  /**\n   * @param {Doc} doc\n   */\n  constructor (doc) {\n    if (doc._item) {\n      console.error('This document was already integrated as a sub-document. You should create a second instance instead with the same guid.')\n    }\n    /**\n     * @type {Doc}\n     */\n    this.doc = doc\n    /**\n     * @type {any}\n     */\n    const opts = {}\n    this.opts = opts\n    if (!doc.gc) {\n      opts.gc = false\n    }\n    if (doc.autoLoad) {\n      opts.autoLoad = true\n    }\n    if (doc.meta !== null) {\n      opts.meta = doc.meta\n    }\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return 1\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return [this.doc]\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n\n  /**\n   * @return {ContentDoc}\n   */\n  copy () {\n    return new ContentDoc(createDocFromOpts(this.doc.guid, this.opts))\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentDoc}\n   */\n  splice (offset) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {ContentDoc} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    return false\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {\n    // this needs to be reflected in doc.destroy as well\n    this.doc._item = item\n    transaction.subdocsAdded.add(this.doc)\n    if (this.doc.shouldLoad) {\n      transaction.subdocsLoaded.add(this.doc)\n    }\n  }\n\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {\n    if (transaction.subdocsAdded.has(this.doc)) {\n      transaction.subdocsAdded.delete(this.doc)\n    } else {\n      transaction.subdocsRemoved.add(this.doc)\n    }\n  }\n\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) { }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeString(this.doc.guid)\n    encoder.writeAny(this.opts)\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 9\n  }\n}\n\n/**\n * @private\n *\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {ContentDoc}\n */\nexport const readContentDoc = decoder => new ContentDoc(createDocFromOpts(decoder.readString(), decoder.readAny()))\n","\nimport {\n  UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, StructStore, Item, Transaction // eslint-disable-line\n} from '../internals.js'\n\nimport * as error from 'lib0/error'\n\n/**\n * @private\n */\nexport class ContentEmbed {\n  /**\n   * @param {Object} embed\n   */\n  constructor (embed) {\n    this.embed = embed\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return 1\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return [this.embed]\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n\n  /**\n   * @return {ContentEmbed}\n   */\n  copy () {\n    return new ContentEmbed(this.embed)\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentEmbed}\n   */\n  splice (offset) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {ContentEmbed} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    return false\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {}\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeJSON(this.embed)\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 5\n  }\n}\n\n/**\n * @private\n *\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {ContentEmbed}\n */\nexport const readContentEmbed = decoder => new ContentEmbed(decoder.readJSON())\n","\nimport {\n  AbstractType, UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, Item, StructStore, Transaction // eslint-disable-line\n} from '../internals.js'\n\nimport * as error from 'lib0/error'\n\n/**\n * @private\n */\nexport class ContentFormat {\n  /**\n   * @param {string} key\n   * @param {Object} value\n   */\n  constructor (key, value) {\n    this.key = key\n    this.value = value\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return 1\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return []\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return false\n  }\n\n  /**\n   * @return {ContentFormat}\n   */\n  copy () {\n    return new ContentFormat(this.key, this.value)\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentFormat}\n   */\n  splice (offset) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {ContentFormat} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    return false\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {\n    // @todo searchmarker are currently unsupported for rich text documents\n    /** @type {AbstractType<any>} */ (item.parent)._searchMarker = null\n  }\n\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeKey(this.key)\n    encoder.writeJSON(this.value)\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 6\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {ContentFormat}\n */\nexport const readContentFormat = decoder => new ContentFormat(decoder.readKey(), decoder.readJSON())\n","import {\n  UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, Transaction, Item, StructStore // eslint-disable-line\n} from '../internals.js'\n\n/**\n * @private\n */\nexport class ContentJSON {\n  /**\n   * @param {Array<any>} arr\n   */\n  constructor (arr) {\n    /**\n     * @type {Array<any>}\n     */\n    this.arr = arr\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return this.arr.length\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return this.arr\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n\n  /**\n   * @return {ContentJSON}\n   */\n  copy () {\n    return new ContentJSON(this.arr)\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentJSON}\n   */\n  splice (offset) {\n    const right = new ContentJSON(this.arr.slice(offset))\n    this.arr = this.arr.slice(0, offset)\n    return right\n  }\n\n  /**\n   * @param {ContentJSON} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    this.arr = this.arr.concat(right.arr)\n    return true\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {}\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    const len = this.arr.length\n    encoder.writeLen(len - offset)\n    for (let i = offset; i < len; i++) {\n      const c = this.arr[i]\n      encoder.writeString(c === undefined ? 'undefined' : JSON.stringify(c))\n    }\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 2\n  }\n}\n\n/**\n * @private\n *\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {ContentJSON}\n */\nexport const readContentJSON = decoder => {\n  const len = decoder.readLen()\n  const cs = []\n  for (let i = 0; i < len; i++) {\n    const c = decoder.readString()\n    if (c === 'undefined') {\n      cs.push(undefined)\n    } else {\n      cs.push(JSON.parse(c))\n    }\n  }\n  return new ContentJSON(cs)\n}\n","import {\n  UpdateEncoderV1, UpdateEncoderV2, UpdateDecoderV1, UpdateDecoderV2, Transaction, Item, StructStore // eslint-disable-line\n} from '../internals.js'\n\nexport class ContentAny {\n  /**\n   * @param {Array<any>} arr\n   */\n  constructor (arr) {\n    /**\n     * @type {Array<any>}\n     */\n    this.arr = arr\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return this.arr.length\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return this.arr\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n\n  /**\n   * @return {ContentAny}\n   */\n  copy () {\n    return new ContentAny(this.arr)\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentAny}\n   */\n  splice (offset) {\n    const right = new ContentAny(this.arr.slice(offset))\n    this.arr = this.arr.slice(0, offset)\n    return right\n  }\n\n  /**\n   * @param {ContentAny} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    this.arr = this.arr.concat(right.arr)\n    return true\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {}\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    const len = this.arr.length\n    encoder.writeLen(len - offset)\n    for (let i = offset; i < len; i++) {\n      const c = this.arr[i]\n      encoder.writeAny(c)\n    }\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 8\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {ContentAny}\n */\nexport const readContentAny = decoder => {\n  const len = decoder.readLen()\n  const cs = []\n  for (let i = 0; i < len; i++) {\n    cs.push(decoder.readAny())\n  }\n  return new ContentAny(cs)\n}\n","import {\n  UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, Transaction, Item, StructStore // eslint-disable-line\n} from '../internals.js'\n\n/**\n * @private\n */\nexport class ContentString {\n  /**\n   * @param {string} str\n   */\n  constructor (str) {\n    /**\n     * @type {string}\n     */\n    this.str = str\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return this.str.length\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return this.str.split('')\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n\n  /**\n   * @return {ContentString}\n   */\n  copy () {\n    return new ContentString(this.str)\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentString}\n   */\n  splice (offset) {\n    const right = new ContentString(this.str.slice(offset))\n    this.str = this.str.slice(0, offset)\n\n    // Prevent encoding invalid documents because of splitting of surrogate pairs: https://github.com/yjs/yjs/issues/248\n    const firstCharCode = this.str.charCodeAt(offset - 1)\n    if (firstCharCode >= 0xD800 && firstCharCode <= 0xDBFF) {\n      // Last character of the left split is the start of a surrogate utf16/ucs2 pair.\n      // We don't support splitting of surrogate pairs because this may lead to invalid documents.\n      // Replace the invalid character with a unicode replacement character (� / U+FFFD)\n      this.str = this.str.slice(0, offset - 1) + '�'\n      // replace right as well\n      right.str = '�' + right.str.slice(1)\n    }\n    return right\n  }\n\n  /**\n   * @param {ContentString} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    this.str += right.str\n    return true\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {}\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeString(offset === 0 ? this.str : this.str.slice(offset))\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 4\n  }\n}\n\n/**\n * @private\n *\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {ContentString}\n */\nexport const readContentString = decoder => new ContentString(decoder.readString())\n","\nimport {\n  readYArray,\n  readYMap,\n  readYText,\n  readYXmlElement,\n  readYXmlFragment,\n  readYXmlHook,\n  readYXmlText,\n  UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, StructStore, Transaction, Item, YEvent, AbstractType // eslint-disable-line\n} from '../internals.js'\n\nimport * as error from 'lib0/error'\n\n/**\n * @type {Array<function(UpdateDecoderV1 | UpdateDecoderV2):AbstractType<any>>}\n * @private\n */\nexport const typeRefs = [\n  readYArray,\n  readYMap,\n  readYText,\n  readYXmlElement,\n  readYXmlFragment,\n  readYXmlHook,\n  readYXmlText\n]\n\nexport const YArrayRefID = 0\nexport const YMapRefID = 1\nexport const YTextRefID = 2\nexport const YXmlElementRefID = 3\nexport const YXmlFragmentRefID = 4\nexport const YXmlHookRefID = 5\nexport const YXmlTextRefID = 6\n\n/**\n * @private\n */\nexport class ContentType {\n  /**\n   * @param {AbstractType<any>} type\n   */\n  constructor (type) {\n    /**\n     * @type {AbstractType<any>}\n     */\n    this.type = type\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return 1\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return [this.type]\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n\n  /**\n   * @return {ContentType}\n   */\n  copy () {\n    return new ContentType(this.type._copy())\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentType}\n   */\n  splice (offset) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {ContentType} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    return false\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {\n    this.type._integrate(transaction.doc, item)\n  }\n\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {\n    let item = this.type._start\n    while (item !== null) {\n      if (!item.deleted) {\n        item.delete(transaction)\n      } else {\n        // This will be gc'd later and we want to merge it if possible\n        // We try to merge all deleted items after each transaction,\n        // but we have no knowledge about that this needs to be merged\n        // since it is not in transaction.ds. Hence we add it to transaction._mergeStructs\n        transaction._mergeStructs.push(item)\n      }\n      item = item.right\n    }\n    this.type._map.forEach(item => {\n      if (!item.deleted) {\n        item.delete(transaction)\n      } else {\n        // same as above\n        transaction._mergeStructs.push(item)\n      }\n    })\n    transaction.changed.delete(this.type)\n  }\n\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {\n    let item = this.type._start\n    while (item !== null) {\n      item.gc(store, true)\n      item = item.right\n    }\n    this.type._start = null\n    this.type._map.forEach(/** @param {Item | null} item */ (item) => {\n      while (item !== null) {\n        item.gc(store, true)\n        item = item.left\n      }\n    })\n    this.type._map = new Map()\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    this.type._write(encoder)\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 7\n  }\n}\n\n/**\n * @private\n *\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {ContentType}\n */\nexport const readContentType = decoder => new ContentType(typeRefs[decoder.readTypeRef()](decoder))\n","\nimport {\n  GC,\n  getState,\n  AbstractStruct,\n  replaceStruct,\n  addStruct,\n  addToDeleteSet,\n  findRootTypeKey,\n  compareIDs,\n  getItem,\n  getItemCleanEnd,\n  getItemCleanStart,\n  readContentDeleted,\n  readContentBinary,\n  readContentJSON,\n  readContentAny,\n  readContentString,\n  readContentEmbed,\n  readContentDoc,\n  createID,\n  readContentFormat,\n  readContentType,\n  addChangedTypeToTransaction,\n  isDeleted,\n  DeleteSet, UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, ContentType, ContentDeleted, StructStore, ID, AbstractType, Transaction // eslint-disable-line\n} from '../internals.js'\n\nimport * as error from 'lib0/error'\nimport * as binary from 'lib0/binary'\n\n/**\n * @todo This should return several items\n *\n * @param {StructStore} store\n * @param {ID} id\n * @return {{item:Item, diff:number}}\n */\nexport const followRedone = (store, id) => {\n  /**\n   * @type {ID|null}\n   */\n  let nextID = id\n  let diff = 0\n  let item\n  do {\n    if (diff > 0) {\n      nextID = createID(nextID.client, nextID.clock + diff)\n    }\n    item = getItem(store, nextID)\n    diff = nextID.clock - item.id.clock\n    nextID = item.redone\n  } while (nextID !== null && item instanceof Item)\n  return {\n    item, diff\n  }\n}\n\n/**\n * Make sure that neither item nor any of its parents is ever deleted.\n *\n * This property does not persist when storing it into a database or when\n * sending it to other peers\n *\n * @param {Item|null} item\n * @param {boolean} keep\n */\nexport const keepItem = (item, keep) => {\n  while (item !== null && item.keep !== keep) {\n    item.keep = keep\n    item = /** @type {AbstractType<any>} */ (item.parent)._item\n  }\n}\n\n/**\n * Split leftItem into two items\n * @param {Transaction} transaction\n * @param {Item} leftItem\n * @param {number} diff\n * @return {Item}\n *\n * @function\n * @private\n */\nexport const splitItem = (transaction, leftItem, diff) => {\n  // create rightItem\n  const { client, clock } = leftItem.id\n  const rightItem = new Item(\n    createID(client, clock + diff),\n    leftItem,\n    createID(client, clock + diff - 1),\n    leftItem.right,\n    leftItem.rightOrigin,\n    leftItem.parent,\n    leftItem.parentSub,\n    leftItem.content.splice(diff)\n  )\n  if (leftItem.deleted) {\n    rightItem.markDeleted()\n  }\n  if (leftItem.keep) {\n    rightItem.keep = true\n  }\n  if (leftItem.redone !== null) {\n    rightItem.redone = createID(leftItem.redone.client, leftItem.redone.clock + diff)\n  }\n  // update left (do not set leftItem.rightOrigin as it will lead to problems when syncing)\n  leftItem.right = rightItem\n  // update right\n  if (rightItem.right !== null) {\n    rightItem.right.left = rightItem\n  }\n  // right is more specific.\n  transaction._mergeStructs.push(rightItem)\n  // update parent._map\n  if (rightItem.parentSub !== null && rightItem.right === null) {\n    /** @type {AbstractType<any>} */ (rightItem.parent)._map.set(rightItem.parentSub, rightItem)\n  }\n  leftItem.length = diff\n  return rightItem\n}\n\n/**\n * Redoes the effect of this operation.\n *\n * @param {Transaction} transaction The Yjs instance.\n * @param {Item} item\n * @param {Set<Item>} redoitems\n * @param {DeleteSet} itemsToDelete\n * @param {boolean} ignoreRemoteMapChanges\n *\n * @return {Item|null}\n *\n * @private\n */\nexport const redoItem = (transaction, item, redoitems, itemsToDelete, ignoreRemoteMapChanges) => {\n  const doc = transaction.doc\n  const store = doc.store\n  const ownClientID = doc.clientID\n  const redone = item.redone\n  if (redone !== null) {\n    return getItemCleanStart(transaction, redone)\n  }\n  let parentItem = /** @type {AbstractType<any>} */ (item.parent)._item\n  /**\n   * @type {Item|null}\n   */\n  let left = null\n  /**\n   * @type {Item|null}\n   */\n  let right\n  // make sure that parent is redone\n  if (parentItem !== null && parentItem.deleted === true) {\n    // try to undo parent if it will be undone anyway\n    if (parentItem.redone === null && (!redoitems.has(parentItem) || redoItem(transaction, parentItem, redoitems, itemsToDelete, ignoreRemoteMapChanges) === null)) {\n      return null\n    }\n    while (parentItem.redone !== null) {\n      parentItem = getItemCleanStart(transaction, parentItem.redone)\n    }\n  }\n  const parentType = parentItem === null ? /** @type {AbstractType<any>} */ (item.parent) : /** @type {ContentType} */ (parentItem.content).type\n\n  if (item.parentSub === null) {\n    // Is an array item. Insert at the old position\n    left = item.left\n    right = item\n    // find next cloned_redo items\n    while (left !== null) {\n      /**\n       * @type {Item|null}\n       */\n      let leftTrace = left\n      // trace redone until parent matches\n      while (leftTrace !== null && /** @type {AbstractType<any>} */ (leftTrace.parent)._item !== parentItem) {\n        leftTrace = leftTrace.redone === null ? null : getItemCleanStart(transaction, leftTrace.redone)\n      }\n      if (leftTrace !== null && /** @type {AbstractType<any>} */ (leftTrace.parent)._item === parentItem) {\n        left = leftTrace\n        break\n      }\n      left = left.left\n    }\n    while (right !== null) {\n      /**\n       * @type {Item|null}\n       */\n      let rightTrace = right\n      // trace redone until parent matches\n      while (rightTrace !== null && /** @type {AbstractType<any>} */ (rightTrace.parent)._item !== parentItem) {\n        rightTrace = rightTrace.redone === null ? null : getItemCleanStart(transaction, rightTrace.redone)\n      }\n      if (rightTrace !== null && /** @type {AbstractType<any>} */ (rightTrace.parent)._item === parentItem) {\n        right = rightTrace\n        break\n      }\n      right = right.right\n    }\n  } else {\n    right = null\n    if (item.right && !ignoreRemoteMapChanges) {\n      left = item\n      // Iterate right while right is in itemsToDelete\n      // If it is intended to delete right while item is redone, we can expect that item should replace right.\n      while (left !== null && left.right !== null && isDeleted(itemsToDelete, left.right.id)) {\n        left = left.right\n      }\n      // follow redone\n      // trace redone until parent matches\n      while (left !== null && left.redone !== null) {\n        left = getItemCleanStart(transaction, left.redone)\n      }\n      if (left && left.right !== null) {\n        // It is not possible to redo this item because it conflicts with a\n        // change from another client\n        return null\n      }\n    } else {\n      left = parentType._map.get(item.parentSub) || null\n    }\n  }\n  const nextClock = getState(store, ownClientID)\n  const nextId = createID(ownClientID, nextClock)\n  const redoneItem = new Item(\n    nextId,\n    left, left && left.lastId,\n    right, right && right.id,\n    parentType,\n    item.parentSub,\n    item.content.copy()\n  )\n  item.redone = nextId\n  keepItem(redoneItem, true)\n  redoneItem.integrate(transaction, 0)\n  return redoneItem\n}\n\n/**\n * Abstract class that represents any content.\n */\nexport class Item extends AbstractStruct {\n  /**\n   * @param {ID} id\n   * @param {Item | null} left\n   * @param {ID | null} origin\n   * @param {Item | null} right\n   * @param {ID | null} rightOrigin\n   * @param {AbstractType<any>|ID|null} parent Is a type if integrated, is null if it is possible to copy parent from left or right, is ID before integration to search for it.\n   * @param {string | null} parentSub\n   * @param {AbstractContent} content\n   */\n  constructor (id, left, origin, right, rightOrigin, parent, parentSub, content) {\n    super(id, content.getLength())\n    /**\n     * The item that was originally to the left of this item.\n     * @type {ID | null}\n     */\n    this.origin = origin\n    /**\n     * The item that is currently to the left of this item.\n     * @type {Item | null}\n     */\n    this.left = left\n    /**\n     * The item that is currently to the right of this item.\n     * @type {Item | null}\n     */\n    this.right = right\n    /**\n     * The item that was originally to the right of this item.\n     * @type {ID | null}\n     */\n    this.rightOrigin = rightOrigin\n    /**\n     * @type {AbstractType<any>|ID|null}\n     */\n    this.parent = parent\n    /**\n     * If the parent refers to this item with some kind of key (e.g. YMap, the\n     * key is specified here. The key is then used to refer to the list in which\n     * to insert this item. If `parentSub = null` type._start is the list in\n     * which to insert to. Otherwise it is `parent._map`.\n     * @type {String | null}\n     */\n    this.parentSub = parentSub\n    /**\n     * If this type's effect is redone this type refers to the type that undid\n     * this operation.\n     * @type {ID | null}\n     */\n    this.redone = null\n    /**\n     * @type {AbstractContent}\n     */\n    this.content = content\n    /**\n     * bit1: keep\n     * bit2: countable\n     * bit3: deleted\n     * bit4: mark - mark node as fast-search-marker\n     * @type {number} byte\n     */\n    this.info = this.content.isCountable() ? binary.BIT2 : 0\n  }\n\n  /**\n   * This is used to mark the item as an indexed fast-search marker\n   *\n   * @type {boolean}\n   */\n  set marker (isMarked) {\n    if (((this.info & binary.BIT4) > 0) !== isMarked) {\n      this.info ^= binary.BIT4\n    }\n  }\n\n  get marker () {\n    return (this.info & binary.BIT4) > 0\n  }\n\n  /**\n   * If true, do not garbage collect this Item.\n   */\n  get keep () {\n    return (this.info & binary.BIT1) > 0\n  }\n\n  set keep (doKeep) {\n    if (this.keep !== doKeep) {\n      this.info ^= binary.BIT1\n    }\n  }\n\n  get countable () {\n    return (this.info & binary.BIT2) > 0\n  }\n\n  /**\n   * Whether this item was deleted or not.\n   * @type {Boolean}\n   */\n  get deleted () {\n    return (this.info & binary.BIT3) > 0\n  }\n\n  set deleted (doDelete) {\n    if (this.deleted !== doDelete) {\n      this.info ^= binary.BIT3\n    }\n  }\n\n  markDeleted () {\n    this.info |= binary.BIT3\n  }\n\n  /**\n   * Return the creator clientID of the missing op or define missing items and return null.\n   *\n   * @param {Transaction} transaction\n   * @param {StructStore} store\n   * @return {null | number}\n   */\n  getMissing (transaction, store) {\n    if (this.origin && this.origin.client !== this.id.client && this.origin.clock >= getState(store, this.origin.client)) {\n      return this.origin.client\n    }\n    if (this.rightOrigin && this.rightOrigin.client !== this.id.client && this.rightOrigin.clock >= getState(store, this.rightOrigin.client)) {\n      return this.rightOrigin.client\n    }\n    if (this.parent && this.parent.constructor === ID && this.id.client !== this.parent.client && this.parent.clock >= getState(store, this.parent.client)) {\n      return this.parent.client\n    }\n\n    // We have all missing ids, now find the items\n\n    if (this.origin) {\n      this.left = getItemCleanEnd(transaction, store, this.origin)\n      this.origin = this.left.lastId\n    }\n    if (this.rightOrigin) {\n      this.right = getItemCleanStart(transaction, this.rightOrigin)\n      this.rightOrigin = this.right.id\n    }\n    if ((this.left && this.left.constructor === GC) || (this.right && this.right.constructor === GC)) {\n      this.parent = null\n    }\n    // only set parent if this shouldn't be garbage collected\n    if (!this.parent) {\n      if (this.left && this.left.constructor === Item) {\n        this.parent = this.left.parent\n        this.parentSub = this.left.parentSub\n      }\n      if (this.right && this.right.constructor === Item) {\n        this.parent = this.right.parent\n        this.parentSub = this.right.parentSub\n      }\n    } else if (this.parent.constructor === ID) {\n      const parentItem = getItem(store, this.parent)\n      if (parentItem.constructor === GC) {\n        this.parent = null\n      } else {\n        this.parent = /** @type {ContentType} */ (parentItem.content).type\n      }\n    }\n    return null\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {number} offset\n   */\n  integrate (transaction, offset) {\n    if (offset > 0) {\n      this.id.clock += offset\n      this.left = getItemCleanEnd(transaction, transaction.doc.store, createID(this.id.client, this.id.clock - 1))\n      this.origin = this.left.lastId\n      this.content = this.content.splice(offset)\n      this.length -= offset\n    }\n\n    if (this.parent) {\n      if ((!this.left && (!this.right || this.right.left !== null)) || (this.left && this.left.right !== this.right)) {\n        /**\n         * @type {Item|null}\n         */\n        let left = this.left\n\n        /**\n         * @type {Item|null}\n         */\n        let o\n        // set o to the first conflicting item\n        if (left !== null) {\n          o = left.right\n        } else if (this.parentSub !== null) {\n          o = /** @type {AbstractType<any>} */ (this.parent)._map.get(this.parentSub) || null\n          while (o !== null && o.left !== null) {\n            o = o.left\n          }\n        } else {\n          o = /** @type {AbstractType<any>} */ (this.parent)._start\n        }\n        // TODO: use something like DeleteSet here (a tree implementation would be best)\n        // @todo use global set definitions\n        /**\n         * @type {Set<Item>}\n         */\n        const conflictingItems = new Set()\n        /**\n         * @type {Set<Item>}\n         */\n        const itemsBeforeOrigin = new Set()\n        // Let c in conflictingItems, b in itemsBeforeOrigin\n        // ***{origin}bbbb{this}{c,b}{c,b}{o}***\n        // Note that conflictingItems is a subset of itemsBeforeOrigin\n        while (o !== null && o !== this.right) {\n          itemsBeforeOrigin.add(o)\n          conflictingItems.add(o)\n          if (compareIDs(this.origin, o.origin)) {\n            // case 1\n            if (o.id.client < this.id.client) {\n              left = o\n              conflictingItems.clear()\n            } else if (compareIDs(this.rightOrigin, o.rightOrigin)) {\n              // this and o are conflicting and point to the same integration points. The id decides which item comes first.\n              // Since this is to the left of o, we can break here\n              break\n            } // else, o might be integrated before an item that this conflicts with. If so, we will find it in the next iterations\n          } else if (o.origin !== null && itemsBeforeOrigin.has(getItem(transaction.doc.store, o.origin))) { // use getItem instead of getItemCleanEnd because we don't want / need to split items.\n            // case 2\n            if (!conflictingItems.has(getItem(transaction.doc.store, o.origin))) {\n              left = o\n              conflictingItems.clear()\n            }\n          } else {\n            break\n          }\n          o = o.right\n        }\n        this.left = left\n      }\n      // reconnect left/right + update parent map/start if necessary\n      if (this.left !== null) {\n        const right = this.left.right\n        this.right = right\n        this.left.right = this\n      } else {\n        let r\n        if (this.parentSub !== null) {\n          r = /** @type {AbstractType<any>} */ (this.parent)._map.get(this.parentSub) || null\n          while (r !== null && r.left !== null) {\n            r = r.left\n          }\n        } else {\n          r = /** @type {AbstractType<any>} */ (this.parent)._start\n          ;/** @type {AbstractType<any>} */ (this.parent)._start = this\n        }\n        this.right = r\n      }\n      if (this.right !== null) {\n        this.right.left = this\n      } else if (this.parentSub !== null) {\n        // set as current parent value if right === null and this is parentSub\n        /** @type {AbstractType<any>} */ (this.parent)._map.set(this.parentSub, this)\n        if (this.left !== null) {\n          // this is the current attribute value of parent. delete right\n          this.left.delete(transaction)\n        }\n      }\n      // adjust length of parent\n      if (this.parentSub === null && this.countable && !this.deleted) {\n        /** @type {AbstractType<any>} */ (this.parent)._length += this.length\n      }\n      addStruct(transaction.doc.store, this)\n      this.content.integrate(transaction, this)\n      // add parent to transaction.changed\n      addChangedTypeToTransaction(transaction, /** @type {AbstractType<any>} */ (this.parent), this.parentSub)\n      if ((/** @type {AbstractType<any>} */ (this.parent)._item !== null && /** @type {AbstractType<any>} */ (this.parent)._item.deleted) || (this.parentSub !== null && this.right !== null)) {\n        // delete if parent is deleted or if this is not the current attribute value of parent\n        this.delete(transaction)\n      }\n    } else {\n      // parent is not defined. Integrate GC struct instead\n      new GC(this.id, this.length).integrate(transaction, 0)\n    }\n  }\n\n  /**\n   * Returns the next non-deleted item\n   */\n  get next () {\n    let n = this.right\n    while (n !== null && n.deleted) {\n      n = n.right\n    }\n    return n\n  }\n\n  /**\n   * Returns the previous non-deleted item\n   */\n  get prev () {\n    let n = this.left\n    while (n !== null && n.deleted) {\n      n = n.left\n    }\n    return n\n  }\n\n  /**\n   * Computes the last content address of this Item.\n   */\n  get lastId () {\n    // allocating ids is pretty costly because of the amount of ids created, so we try to reuse whenever possible\n    return this.length === 1 ? this.id : createID(this.id.client, this.id.clock + this.length - 1)\n  }\n\n  /**\n   * Try to merge two items\n   *\n   * @param {Item} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    if (\n      this.constructor === right.constructor &&\n      compareIDs(right.origin, this.lastId) &&\n      this.right === right &&\n      compareIDs(this.rightOrigin, right.rightOrigin) &&\n      this.id.client === right.id.client &&\n      this.id.clock + this.length === right.id.clock &&\n      this.deleted === right.deleted &&\n      this.redone === null &&\n      right.redone === null &&\n      this.content.constructor === right.content.constructor &&\n      this.content.mergeWith(right.content)\n    ) {\n      const searchMarker = /** @type {AbstractType<any>} */ (this.parent)._searchMarker\n      if (searchMarker) {\n        searchMarker.forEach(marker => {\n          if (marker.p === right) {\n            // right is going to be \"forgotten\" so we need to update the marker\n            marker.p = this\n            // adjust marker index\n            if (!this.deleted && this.countable) {\n              marker.index -= this.length\n            }\n          }\n        })\n      }\n      if (right.keep) {\n        this.keep = true\n      }\n      this.right = right.right\n      if (this.right !== null) {\n        this.right.left = this\n      }\n      this.length += right.length\n      return true\n    }\n    return false\n  }\n\n  /**\n   * Mark this Item as deleted.\n   *\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {\n    if (!this.deleted) {\n      const parent = /** @type {AbstractType<any>} */ (this.parent)\n      // adjust the length of parent\n      if (this.countable && this.parentSub === null) {\n        parent._length -= this.length\n      }\n      this.markDeleted()\n      addToDeleteSet(transaction.deleteSet, this.id.client, this.id.clock, this.length)\n      addChangedTypeToTransaction(transaction, parent, this.parentSub)\n      this.content.delete(transaction)\n    }\n  }\n\n  /**\n   * @param {StructStore} store\n   * @param {boolean} parentGCd\n   */\n  gc (store, parentGCd) {\n    if (!this.deleted) {\n      throw error.unexpectedCase()\n    }\n    this.content.gc(store)\n    if (parentGCd) {\n      replaceStruct(store, this, new GC(this.id, this.length))\n    } else {\n      this.content = new ContentDeleted(this.length)\n    }\n  }\n\n  /**\n   * Transform the properties of this type to binary and write it to an\n   * BinaryEncoder.\n   *\n   * This is called when this Item is sent to a remote peer.\n   *\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder The encoder to write data to.\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    const origin = offset > 0 ? createID(this.id.client, this.id.clock + offset - 1) : this.origin\n    const rightOrigin = this.rightOrigin\n    const parentSub = this.parentSub\n    const info = (this.content.getRef() & binary.BITS5) |\n      (origin === null ? 0 : binary.BIT8) | // origin is defined\n      (rightOrigin === null ? 0 : binary.BIT7) | // right origin is defined\n      (parentSub === null ? 0 : binary.BIT6) // parentSub is non-null\n    encoder.writeInfo(info)\n    if (origin !== null) {\n      encoder.writeLeftID(origin)\n    }\n    if (rightOrigin !== null) {\n      encoder.writeRightID(rightOrigin)\n    }\n    if (origin === null && rightOrigin === null) {\n      const parent = /** @type {AbstractType<any>} */ (this.parent)\n      if (parent._item !== undefined) {\n        const parentItem = parent._item\n        if (parentItem === null) {\n          // parent type on y._map\n          // find the correct key\n          const ykey = findRootTypeKey(parent)\n          encoder.writeParentInfo(true) // write parentYKey\n          encoder.writeString(ykey)\n        } else {\n          encoder.writeParentInfo(false) // write parent id\n          encoder.writeLeftID(parentItem.id)\n        }\n      } else if (parent.constructor === String) { // this edge case was added by differential updates\n        encoder.writeParentInfo(true) // write parentYKey\n        encoder.writeString(parent)\n      } else if (parent.constructor === ID) {\n        encoder.writeParentInfo(false) // write parent id\n        encoder.writeLeftID(parent)\n      } else {\n        error.unexpectedCase()\n      }\n      if (parentSub !== null) {\n        encoder.writeString(parentSub)\n      }\n    }\n    this.content.write(encoder, offset)\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @param {number} info\n */\nexport const readItemContent = (decoder, info) => contentRefs[info & binary.BITS5](decoder)\n\n/**\n * A lookup map for reading Item content.\n *\n * @type {Array<function(UpdateDecoderV1 | UpdateDecoderV2):AbstractContent>}\n */\nexport const contentRefs = [\n  () => { error.unexpectedCase() }, // GC is not ItemContent\n  readContentDeleted, // 1\n  readContentJSON, // 2\n  readContentBinary, // 3\n  readContentString, // 4\n  readContentEmbed, // 5\n  readContentFormat, // 6\n  readContentType, // 7\n  readContentAny, // 8\n  readContentDoc, // 9\n  () => { error.unexpectedCase() } // 10 - Skip is not ItemContent\n]\n\n/**\n * Do not implement this class!\n */\nexport class AbstractContent {\n  /**\n   * @return {number}\n   */\n  getLength () {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * Should return false if this Item is some kind of meta information\n   * (e.g. format information).\n   *\n   * * Whether this Item should be addressable via `yarray.get(i)`\n   * * Whether this Item should be counted when computing yarray.length\n   *\n   * @return {boolean}\n   */\n  isCountable () {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @return {AbstractContent}\n   */\n  copy () {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {number} offset\n   * @return {AbstractContent}\n   */\n  splice (offset) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {AbstractContent} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    throw error.methodUnimplemented()\n  }\n}\n","\nimport {\n  AbstractStruct,\n  UpdateEncoderV1, UpdateEncoderV2, StructStore, Transaction, ID // eslint-disable-line\n} from '../internals.js'\nimport * as error from 'lib0/error'\nimport * as encoding from 'lib0/encoding'\n\nexport const structSkipRefNumber = 10\n\n/**\n * @private\n */\nexport class Skip extends AbstractStruct {\n  get deleted () {\n    return true\n  }\n\n  delete () {}\n\n  /**\n   * @param {Skip} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    if (this.constructor !== right.constructor) {\n      return false\n    }\n    this.length += right.length\n    return true\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {number} offset\n   */\n  integrate (transaction, offset) {\n    // skip structs cannot be integrated\n    error.unexpectedCase()\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeInfo(structSkipRefNumber)\n    // write as VarUint because Skips can't make use of predictable length-encoding\n    encoding.writeVarUint(encoder.restEncoder, this.length - offset)\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {StructStore} store\n   * @return {null | number}\n   */\n  getMissing (transaction, store) {\n    return null\n  }\n}\n","/** eslint-env browser */\n\nexport {\n  Doc,\n  Transaction,\n  YArray as Array,\n  YMap as Map,\n  YText as Text,\n  YXmlText as XmlText,\n  YXmlHook as XmlHook,\n  YXmlElement as XmlElement,\n  YXmlFragment as XmlFragment,\n  YXmlEvent,\n  YMapEvent,\n  YArrayEvent,\n  YTextEvent,\n  YEvent,\n  Item,\n  AbstractStruct,\n  GC,\n  ContentBinary,\n  ContentDeleted,\n  ContentEmbed,\n  ContentFormat,\n  ContentJSON,\n  ContentAny,\n  ContentString,\n  ContentType,\n  AbstractType,\n  getTypeChildren,\n  createRelativePositionFromTypeIndex,\n  createRelativePositionFromJSON,\n  createAbsolutePositionFromRelativePosition,\n  compareRelativePositions,\n  AbsolutePosition,\n  RelativePosition,\n  ID,\n  createID,\n  compareIDs,\n  getState,\n  Snapshot,\n  createSnapshot,\n  createDeleteSet,\n  createDeleteSetFromStructStore,\n  cleanupYTextFormatting,\n  snapshot,\n  emptySnapshot,\n  findRootTypeKey,\n  findIndexSS,\n  getItem,\n  typeListToArraySnapshot,\n  typeMapGetSnapshot,\n  createDocFromSnapshot,\n  iterateDeletedStructs,\n  applyUpdate,\n  applyUpdateV2,\n  readUpdate,\n  readUpdateV2,\n  encodeStateAsUpdate,\n  encodeStateAsUpdateV2,\n  encodeStateVector,\n  UndoManager,\n  decodeSnapshot,\n  encodeSnapshot,\n  decodeSnapshotV2,\n  encodeSnapshotV2,\n  decodeStateVector,\n  logUpdate,\n  logUpdateV2,\n  decodeUpdate,\n  decodeUpdateV2,\n  relativePositionToJSON,\n  isDeleted,\n  isParentOf,\n  equalSnapshots,\n  PermanentUserData, // @TODO experimental\n  tryGc,\n  transact,\n  AbstractConnector,\n  logType,\n  mergeUpdates,\n  mergeUpdatesV2,\n  parseUpdateMeta,\n  parseUpdateMetaV2,\n  encodeStateVectorFromUpdate,\n  encodeStateVectorFromUpdateV2,\n  encodeRelativePosition,\n  decodeRelativePosition,\n  diffUpdate,\n  diffUpdateV2,\n  convertUpdateFormatV1ToV2,\n  convertUpdateFormatV2ToV1,\n  UpdateEncoderV1\n} from './internals.js'\n\nconst glo = /** @type {any} */ (typeof globalThis !== 'undefined'\n  ? globalThis\n  : typeof window !== 'undefined'\n    ? window\n    // @ts-ignore\n    : typeof global !== 'undefined' ? global : {})\n\nconst importIdentifier = '__ $YJS$ __'\n\nif (glo[importIdentifier] === true) {\n  /**\n   * Dear reader of this message. Please take this seriously.\n   *\n   * If you see this message, make sure that you only import one version of Yjs. In many cases,\n   * your package manager installs two versions of Yjs that are used by different packages within your project.\n   * Another reason for this message is that some parts of your project use the commonjs version of Yjs\n   * and others use the EcmaScript version of Yjs.\n   *\n   * This often leads to issues that are hard to debug. We often need to perform constructor checks,\n   * e.g. `struct instanceof GC`. If you imported different versions of Yjs, it is impossible for us to\n   * do the constructor checks anymore - which might break the CRDT algorithm.\n   *\n   * https://github.com/yjs/yjs/issues/438\n   */\n  console.error('Yjs was already imported. This breaks constructor checks and will lead to issues! - https://github.com/yjs/yjs/issues/438')\n}\nglo[importIdentifier] = true\n"],"names":[],"mappings":"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","sourceRoot":""},"url":null}}}